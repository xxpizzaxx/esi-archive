{
    "basePath": "/legacy",
    "host": "esi.tech.ccp.is",
    "info": {
        "description": "An OpenAPI for EVE Online",
        "title": "EVE Swagger Interface",
        "version": "0.4.6"
    },
    "paths": {
        "/alliances/": {
            "get": {
                "description": "List all active player alliances\n\n---\n\nAlternate route: `/v1/alliances/`\n\nAlternate route: `/latest/alliances/`\n\nAlternate route: `/dev/alliances/`\n\n\n---\n\nThis route is cached for up to 3600 seconds",
                "operationId": "get_alliances",
                "parameters": [
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Alliance IDs",
                        "examples": {
                            "application/json": [
                                99000001,
                                99000002
                            ]
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok array",
                            "items": {
                                "description": "200 ok integer",
                                "format": "int32",
                                "minimum": 0,
                                "title": "get_alliances_200_ok",
                                "type": "integer",
                                "uniqueItems": true
                            },
                            "title": "get_alliances_ok",
                            "type": "array"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_alliances_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_alliances_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "summary": "List all alliances",
                "tags": [
                    "Alliance"
                ],
                "x-alternate-versions": [
                    "dev",
                    "latest",
                    "v1"
                ],
                "x-cached-seconds": 3600
            }
        },
        "/alliances/names/": {
            "get": {
                "description": "Resolve a set of alliance IDs to alliance names\n\n---\n\nAlternate route: `/v1/alliances/names/`\n\nAlternate route: `/latest/alliances/names/`\n\nAlternate route: `/dev/alliances/names/`\n\n\n---\n\nThis route is cached for up to 3600 seconds",
                "operationId": "get_alliances_names",
                "parameters": [
                    {
                        "description": "A comma separated list of alliance IDs",
                        "in": "query",
                        "items": {
                            "format": "int64",
                            "type": "integer"
                        },
                        "minItems": 1,
                        "name": "alliance_ids",
                        "required": true,
                        "type": "array"
                    },
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of id/name associations",
                        "examples": {
                            "application/json": [
                                {
                                    "alliance_id": 1000171,
                                    "alliance_name": "Republic University"
                                }
                            ]
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok array",
                            "items": {
                                "description": "200 ok object",
                                "properties": {
                                    "alliance_id": {
                                        "description": "alliance_id integer",
                                        "format": "int32",
                                        "title": "get_alliances_names_alliance_id",
                                        "type": "integer"
                                    },
                                    "alliance_name": {
                                        "description": "alliance_name string",
                                        "title": "get_alliances_names_alliance_name",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "alliance_id",
                                    "alliance_name"
                                ],
                                "title": "get_alliances_names_200_ok",
                                "type": "object"
                            },
                            "title": "get_alliances_names_ok",
                            "type": "array"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_alliances_names_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_alliances_names_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "summary": "Get alliance names",
                "tags": [
                    "Alliance"
                ],
                "x-alternate-versions": [
                    "dev",
                    "latest",
                    "v1"
                ],
                "x-cached-seconds": 3600
            }
        },
        "/alliances/{alliance_id}/": {
            "get": {
                "deprecated": true,
                "description": "Public information about an alliance\n\n---\n\nAlternate route: `/v1/alliances/{alliance_id}/`\n",
                "operationId": "get_alliances_alliance_id",
                "parameters": [
                    {
                        "description": "An EVE alliance ID",
                        "format": "int32",
                        "in": "path",
                        "name": "alliance_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Public data about an alliance",
                        "examples": {
                            "application/json": {
                                "alliance_name": "C C P Alliance",
                                "date_founded": "2016-06-26T21:00:00Z",
                                "executor_corp": 98356193,
                                "ticker": "<C C P>"
                            }
                        },
                        "schema": {
                            "description": "200 ok object",
                            "properties": {
                                "alliance_name": {
                                    "description": "the full name of the alliance",
                                    "title": "get_alliances_alliance_id_alliance_name",
                                    "type": "string"
                                },
                                "date_founded": {
                                    "description": "date_founded string",
                                    "format": "date-time",
                                    "title": "get_alliances_alliance_id_date_founded",
                                    "type": "string"
                                },
                                "executor_corp": {
                                    "description": "the executor corporation ID, if this alliance is not closed",
                                    "format": "int32",
                                    "title": "get_alliances_alliance_id_executor_corp",
                                    "type": "integer"
                                },
                                "logo_urls": {
                                    "description": "logo_urls object",
                                    "properties": {
                                        "128x128": {
                                            "description": "128x128 string",
                                            "title": "get_alliances_alliance_id_128x128",
                                            "type": "string"
                                        },
                                        "64x64": {
                                            "description": "64x64 string",
                                            "title": "get_alliances_alliance_id_64x64",
                                            "type": "string"
                                        }
                                    },
                                    "title": "get_alliances_alliance_id_logo_urls",
                                    "type": "object"
                                },
                                "ticker": {
                                    "description": "the short name of the alliance",
                                    "title": "get_alliances_alliance_id_ticker",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "alliance_name",
                                "ticker",
                                "date_founded"
                            ],
                            "title": "get_alliances_alliance_id_ok",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_alliances_alliance_id_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_alliances_alliance_id_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "summary": "Get alliance information",
                "tags": [
                    "Alliance"
                ],
                "x-alternate-versions": [
                    "v1"
                ]
            }
        },
        "/alliances/{alliance_id}/corporations/": {
            "get": {
                "description": "List all current member corporations of an alliance\n\n---\n\nAlternate route: `/v1/alliances/{alliance_id}/corporations/`\n\nAlternate route: `/latest/alliances/{alliance_id}/corporations/`\n\nAlternate route: `/dev/alliances/{alliance_id}/corporations/`\n\n\n---\n\nThis route is cached for up to 3600 seconds",
                "operationId": "get_alliances_alliance_id_corporations",
                "parameters": [
                    {
                        "description": "An EVE alliance ID",
                        "format": "int32",
                        "in": "path",
                        "name": "alliance_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of corporation IDs",
                        "examples": {
                            "application/json": [
                                98000001
                            ]
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok array",
                            "items": {
                                "description": "200 ok integer",
                                "format": "int32",
                                "minimum": 0,
                                "title": "get_alliances_alliance_id_corporations_200_ok",
                                "type": "integer",
                                "uniqueItems": true
                            },
                            "title": "get_alliances_alliance_id_corporations_ok",
                            "type": "array"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_alliances_alliance_id_corporations_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_alliances_alliance_id_corporations_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "summary": "List alliance's corporations",
                "tags": [
                    "Alliance"
                ],
                "x-alternate-versions": [
                    "dev",
                    "latest",
                    "v1"
                ],
                "x-cached-seconds": 3600
            }
        },
        "/alliances/{alliance_id}/icons/": {
            "get": {
                "description": "Get the icon urls for a alliance\n\n---\n\nAlternate route: `/v1/alliances/{alliance_id}/icons/`\n\nAlternate route: `/latest/alliances/{alliance_id}/icons/`\n\nAlternate route: `/dev/alliances/{alliance_id}/icons/`\n\n\n---\n\nThis route is cached for up to 3600 seconds",
                "operationId": "get_alliances_alliance_id_icons",
                "parameters": [
                    {
                        "description": "An EVE alliance ID",
                        "format": "int32",
                        "in": "path",
                        "name": "alliance_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Urls for icons for the given alliance id and server",
                        "examples": {
                            "application/json": {
                                "px128x128": "https://imageserver.eveonline.com/Alliance/503818424_128.png",
                                "px64x64": "https://imageserver.eveonline.com/Alliance/503818424_64.png"
                            }
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok object",
                            "properties": {
                                "px128x128": {
                                    "description": "px128x128 string",
                                    "title": "get_alliances_alliance_id_icons_px128x128",
                                    "type": "string"
                                },
                                "px64x64": {
                                    "description": "px64x64 string",
                                    "title": "get_alliances_alliance_id_icons_px64x64",
                                    "type": "string"
                                }
                            },
                            "title": "get_alliances_alliance_id_icons_ok",
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "No image server for this datasource",
                        "examples": {
                            "application/json": {
                                "error": "No image server for this datasource"
                            }
                        },
                        "schema": {
                            "description": "No image server for this datasource",
                            "properties": {
                                "error": {
                                    "description": "error message",
                                    "title": "get_alliances_alliance_id_icons_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_alliances_alliance_id_icons_not_found",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_alliances_alliance_id_icons_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_alliances_alliance_id_icons_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "summary": "Get alliance icon",
                "tags": [
                    "Alliance"
                ],
                "x-alternate-versions": [
                    "dev",
                    "latest",
                    "v1"
                ],
                "x-cached-seconds": 3600
            }
        },
        "/characters/affiliation/": {
            "post": {
                "description": "Bulk lookup of character IDs to corporation, alliance and faction\n\n---\n\nAlternate route: `/v1/characters/affiliation/`\n\nAlternate route: `/latest/characters/affiliation/`\n\nAlternate route: `/dev/characters/affiliation/`\n\n\n---\n\nThis route is cached for up to 3600 seconds",
                "operationId": "post_characters_affiliation",
                "parameters": [
                    {
                        "description": "The character IDs to fetch affiliations for",
                        "in": "body",
                        "name": "characters",
                        "required": true,
                        "schema": {
                            "description": "characters array",
                            "items": {
                                "description": "character integer",
                                "format": "int32",
                                "title": "post_characters_affiliation_character",
                                "type": "integer"
                            },
                            "maxItems": 1000,
                            "minItems": 1,
                            "title": "post_characters_affiliation_characters",
                            "type": "array",
                            "uniqueItems": true
                        }
                    },
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Character corporation, alliance and faction IDs",
                        "examples": {
                            "application/json": [
                                {
                                    "alliance_id": 434243723,
                                    "character_id": 95538921,
                                    "corporation_id": 109299958
                                }
                            ]
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok array",
                            "items": {
                                "description": "200 ok object",
                                "properties": {
                                    "alliance_id": {
                                        "description": "The character's alliance ID, if their corporation is in an alliance",
                                        "format": "int32",
                                        "title": "post_characters_affiliation_alliance_id",
                                        "type": "integer"
                                    },
                                    "character_id": {
                                        "description": "The character's ID",
                                        "format": "int32",
                                        "title": "post_characters_affiliation_character_id",
                                        "type": "integer"
                                    },
                                    "corporation_id": {
                                        "description": "The character's corporation ID",
                                        "format": "int32",
                                        "title": "post_characters_affiliation_corporation_id",
                                        "type": "integer"
                                    },
                                    "faction_id": {
                                        "description": "The character's faction ID, if their corporation is in a faction",
                                        "format": "int32",
                                        "title": "post_characters_affiliation_faction_id",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "character_id",
                                    "corporation_id"
                                ],
                                "title": "post_characters_affiliation_200_ok",
                                "type": "object"
                            },
                            "title": "post_characters_affiliation_ok",
                            "type": "array"
                        }
                    },
                    "422": {
                        "description": "No valid character IDs found",
                        "examples": {
                            "application/json": {
                                "error": "Unprocessable entity message"
                            }
                        },
                        "schema": {
                            "description": "Unprocessable entity",
                            "properties": {
                                "error": {
                                    "description": "Unprocessable entity message",
                                    "title": "post_characters_affiliation_422_unprocessable_entity",
                                    "type": "string"
                                }
                            },
                            "title": "post_characters_affiliation_unprocessable_entity",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "post_characters_affiliation_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "post_characters_affiliation_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "summary": "Character affiliation",
                "tags": [
                    "Character"
                ],
                "x-alternate-versions": [
                    "dev",
                    "latest",
                    "v1"
                ],
                "x-cached-seconds": 3600
            }
        },
        "/characters/names/": {
            "get": {
                "description": "Resolve a set of character IDs to character names\n\n---\n\nAlternate route: `/v1/characters/names/`\n\nAlternate route: `/latest/characters/names/`\n\nAlternate route: `/dev/characters/names/`\n\n\n---\n\nThis route is cached for up to 3600 seconds",
                "operationId": "get_characters_names",
                "parameters": [
                    {
                        "description": "A comma separated list of character IDs",
                        "in": "query",
                        "items": {
                            "format": "int64",
                            "type": "integer"
                        },
                        "minItems": 1,
                        "name": "character_ids",
                        "required": true,
                        "type": "array"
                    },
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of id/name associations",
                        "examples": {
                            "application/json": [
                                {
                                    "character_id": 95465499,
                                    "character_name": "CCP Bartender"
                                }
                            ]
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok array",
                            "items": {
                                "description": "200 ok object",
                                "properties": {
                                    "character_id": {
                                        "description": "character_id integer",
                                        "format": "int64",
                                        "title": "get_characters_names_character_id",
                                        "type": "integer"
                                    },
                                    "character_name": {
                                        "description": "character_name string",
                                        "title": "get_characters_names_character_name",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "character_id",
                                    "character_name"
                                ],
                                "title": "get_characters_names_200_ok",
                                "type": "object"
                            },
                            "title": "get_characters_names_ok",
                            "type": "array"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_characters_names_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_names_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "summary": "Get character names",
                "tags": [
                    "Character"
                ],
                "x-alternate-versions": [
                    "dev",
                    "latest",
                    "v1"
                ],
                "x-cached-seconds": 3600
            }
        },
        "/characters/{character_id}/": {
            "get": {
                "deprecated": true,
                "description": "Public information about a character\n\n---\n\nAlternate route: `/v3/characters/{character_id}/`\n\n\n---\n\nThis route is cached for up to 3600 seconds",
                "operationId": "get_characters_character_id",
                "parameters": [
                    {
                        "description": "An EVE character ID",
                        "format": "int32",
                        "in": "path",
                        "name": "character_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Public data for the given character",
                        "examples": {
                            "application/json": {
                                "ancestry_id": 19,
                                "birthday": "2015-03-24T11:37:00Z",
                                "bloodline_id": 3,
                                "corporation_id": 109299958,
                                "description": "",
                                "gender": "male",
                                "name": "CCP Bartender",
                                "race_id": 2
                            }
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok object",
                            "properties": {
                                "ancestry_id": {
                                    "description": "ancestry_id integer",
                                    "format": "int32",
                                    "title": "get_characters_character_id_ancestry_id",
                                    "type": "integer"
                                },
                                "birthday": {
                                    "description": "Creation date of the character",
                                    "format": "date-time",
                                    "title": "get_characters_character_id_birthday",
                                    "type": "string"
                                },
                                "bloodline_id": {
                                    "description": "bloodline_id integer",
                                    "format": "int32",
                                    "title": "get_characters_character_id_bloodline_id",
                                    "type": "integer"
                                },
                                "corporation_id": {
                                    "description": "The character's corporation ID",
                                    "format": "int32",
                                    "title": "get_characters_character_id_corporation_id",
                                    "type": "integer"
                                },
                                "description": {
                                    "description": "description string",
                                    "title": "get_characters_character_id_description",
                                    "type": "string"
                                },
                                "gender": {
                                    "description": "gender string",
                                    "enum": [
                                        "female",
                                        "male"
                                    ],
                                    "title": "get_characters_character_id_gender",
                                    "type": "string"
                                },
                                "name": {
                                    "description": "The name of the character",
                                    "title": "get_characters_character_id_name",
                                    "type": "string"
                                },
                                "race_id": {
                                    "description": "race_id integer",
                                    "format": "int32",
                                    "title": "get_characters_character_id_race_id",
                                    "type": "integer"
                                },
                                "security_status": {
                                    "description": "security_status number",
                                    "format": "float",
                                    "maximum": 10,
                                    "minimum": -10,
                                    "title": "get_characters_character_id_security_status",
                                    "type": "number"
                                }
                            },
                            "required": [
                                "corporation_id",
                                "birthday",
                                "name",
                                "gender",
                                "race_id",
                                "description",
                                "bloodline_id"
                            ],
                            "title": "get_characters_character_id_ok",
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Is not a character ID",
                        "examples": {
                            "application/json": {
                                "error": "98000001 is not a character ID"
                            }
                        },
                        "schema": {
                            "description": "Is not a character ID",
                            "properties": {
                                "error": {
                                    "description": "error message",
                                    "title": "get_characters_character_id_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_character_id_unprocessable_entity",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_characters_character_id_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_character_id_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "summary": "Get character's public information",
                "tags": [
                    "Character"
                ],
                "x-alternate-versions": [
                    "v3"
                ],
                "x-cached-seconds": 3600
            }
        },
        "/characters/{character_id}/agents_research/": {
            "get": {
                "description": "Return a list of agents research information for a character. The formula for finding the current research points with an agent is: currentPoints = remainderPoints + pointsPerDay * days(currentTime - researchStartDate)\n\n---\n\nAlternate route: `/v1/characters/{character_id}/agents_research/`\n\nAlternate route: `/latest/characters/{character_id}/agents_research/`\n\nAlternate route: `/dev/characters/{character_id}/agents_research/`\n\n\n---\n\nThis route is cached for up to 3600 seconds",
                "operationId": "get_characters_character_id_agents_research",
                "parameters": [
                    {
                        "description": "ID for a character",
                        "format": "int32",
                        "in": "path",
                        "name": "character_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "description": "Access token to use, if preferred over a header",
                        "in": "query",
                        "name": "token",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of agents research information",
                        "examples": {
                            "application/json": [
                                {
                                    "agent_id": 3009358,
                                    "points_per_day": 53.5346162146776,
                                    "remainder_points": 53604.0634303189,
                                    "skill_type_id": 11450,
                                    "started_at": "2017-03-23T14:47:00Z"
                                }
                            ]
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok array",
                            "items": {
                                "description": "200 ok object",
                                "properties": {
                                    "agent_id": {
                                        "description": "agent_id integer",
                                        "format": "int32",
                                        "title": "get_characters_character_id_agents_research_agent_id",
                                        "type": "integer"
                                    },
                                    "points_per_day": {
                                        "description": "points_per_day number",
                                        "format": "float",
                                        "title": "get_characters_character_id_agents_research_points_per_day",
                                        "type": "number"
                                    },
                                    "remainder_points": {
                                        "description": "remainder_points number",
                                        "format": "float",
                                        "title": "get_characters_character_id_agents_research_remainder_points",
                                        "type": "number"
                                    },
                                    "skill_type_id": {
                                        "description": "skill_type_id integer",
                                        "format": "int32",
                                        "title": "get_characters_character_id_agents_research_skill_type_id",
                                        "type": "integer"
                                    },
                                    "started_at": {
                                        "description": "started_at string",
                                        "format": "date-time",
                                        "title": "get_characters_character_id_agents_research_started_at",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "agent_id",
                                    "skill_type_id",
                                    "started_at",
                                    "points_per_day",
                                    "remainder_points"
                                ],
                                "title": "get_characters_character_id_agents_research_200_ok",
                                "type": "object"
                            },
                            "title": "get_characters_character_id_agents_research_ok",
                            "type": "array"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "examples": {
                            "application/json": {
                                "error": "Token is not valid for scope(s): esi-characters.read_agents_research.v1"
                            }
                        },
                        "schema": {
                            "description": "Forbidden",
                            "properties": {
                                "error": {
                                    "description": "Forbidden message",
                                    "title": "get_characters_character_id_agents_research_403_forbidden",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_character_id_agents_research_forbidden",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_characters_character_id_agents_research_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_character_id_agents_research_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "evesso": [
                            "esi-characters.read_agents_research.v1"
                        ]
                    }
                ],
                "summary": "Get agents research",
                "tags": [
                    "Character"
                ],
                "x-alternate-versions": [
                    "dev",
                    "latest",
                    "v1"
                ],
                "x-cached-seconds": 3600
            }
        },
        "/characters/{character_id}/assets/": {
            "get": {
                "description": "Return a list of the characters assets\n\n---\n\nAlternate route: `/v1/characters/{character_id}/assets/`\n\nAlternate route: `/latest/characters/{character_id}/assets/`\n\nAlternate route: `/dev/characters/{character_id}/assets/`\n\n\n---\n\nThis route is cached for up to 3600 seconds",
                "operationId": "get_characters_character_id_assets",
                "parameters": [
                    {
                        "description": "Character id of the target character",
                        "format": "int32",
                        "in": "path",
                        "name": "character_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "description": "Access token to use, if preferred over a header",
                        "in": "query",
                        "name": "token",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A flat list of the users assets",
                        "examples": {
                            "application/json": [
                                {
                                    "is_singleton": true,
                                    "item_id": 1000000016835,
                                    "location_flag": "Hangar",
                                    "location_id": 60002959,
                                    "location_type": "station",
                                    "type_id": 3516
                                }
                            ]
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok array",
                            "items": {
                                "description": "200 ok object",
                                "properties": {
                                    "is_singleton": {
                                        "description": "is_singleton boolean",
                                        "title": "get_characters_character_id_assets_is_singleton",
                                        "type": "boolean"
                                    },
                                    "item_id": {
                                        "description": "item_id integer",
                                        "format": "int64",
                                        "title": "get_characters_character_id_assets_item_id",
                                        "type": "integer"
                                    },
                                    "location_flag": {
                                        "description": "location_flag string",
                                        "enum": [
                                            "AutoFit",
                                            "Cargo",
                                            "CorpseBay",
                                            "DroneBay",
                                            "FleetHangar",
                                            "Deliveries",
                                            "HiddenModifiers",
                                            "Hangar",
                                            "HangarAll",
                                            "LoSlot0",
                                            "LoSlot1",
                                            "LoSlot2",
                                            "LoSlot3",
                                            "LoSlot4",
                                            "LoSlot5",
                                            "LoSlot6",
                                            "LoSlot7",
                                            "MedSlot0",
                                            "MedSlot1",
                                            "MedSlot2",
                                            "MedSlot3",
                                            "MedSlot4",
                                            "MedSlot5",
                                            "MedSlot6",
                                            "MedSlot7",
                                            "HiSlot0",
                                            "HiSlot1",
                                            "HiSlot2",
                                            "HiSlot3",
                                            "HiSlot4",
                                            "HiSlot5",
                                            "HiSlot6",
                                            "HiSlot7",
                                            "AssetSafety",
                                            "Locked",
                                            "Unlocked",
                                            "Implant",
                                            "QuafeBay",
                                            "RigSlot0",
                                            "RigSlot1",
                                            "RigSlot2",
                                            "RigSlot3",
                                            "RigSlot4",
                                            "RigSlot5",
                                            "RigSlot6",
                                            "RigSlot7",
                                            "ShipHangar",
                                            "SpecializedFuelBay",
                                            "SpecializedOreHold",
                                            "SpecializedGasHold",
                                            "SpecializedMineralHold",
                                            "SpecializedSalvageHold",
                                            "SpecializedShipHold",
                                            "SpecializedSmallShipHold",
                                            "SpecializedMediumShipHold",
                                            "SpecializedLargeShipHold",
                                            "SpecializedIndustrialShipHold",
                                            "SpecializedAmmoHold",
                                            "SpecializedCommandCenterHold",
                                            "SpecializedPlanetaryCommoditiesHold",
                                            "SpecializedMaterialBay",
                                            "SubSystemSlot0",
                                            "SubSystemSlot1",
                                            "SubSystemSlot2",
                                            "SubSystemSlot3",
                                            "SubSystemSlot4",
                                            "SubSystemSlot5",
                                            "SubSystemSlot6",
                                            "SubSystemSlot7",
                                            "FighterBay",
                                            "FighterTube0",
                                            "FighterTube1",
                                            "FighterTube2",
                                            "FighterTube3",
                                            "FighterTube4",
                                            "Module",
                                            "Wardrobe"
                                        ],
                                        "title": "get_characters_character_id_assets_location_flag",
                                        "type": "string"
                                    },
                                    "location_id": {
                                        "description": "location_id integer",
                                        "format": "int64",
                                        "title": "get_characters_character_id_assets_location_id",
                                        "type": "integer"
                                    },
                                    "location_type": {
                                        "description": "location_type string",
                                        "enum": [
                                            "station",
                                            "solar_system",
                                            "other"
                                        ],
                                        "title": "get_characters_character_id_assets_location_type",
                                        "type": "string"
                                    },
                                    "quantity": {
                                        "description": "quantity integer",
                                        "format": "int32",
                                        "title": "get_characters_character_id_assets_quantity",
                                        "type": "integer"
                                    },
                                    "type_id": {
                                        "description": "type_id integer",
                                        "format": "int32",
                                        "title": "get_characters_character_id_assets_type_id",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "type_id",
                                    "location_id",
                                    "location_type",
                                    "item_id",
                                    "location_flag",
                                    "is_singleton"
                                ],
                                "title": "get_characters_character_id_assets_200_ok",
                                "type": "object"
                            },
                            "title": "get_characters_character_id_assets_ok",
                            "type": "array"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "examples": {
                            "application/json": {
                                "error": "Token is not valid for scope(s): esi-assets.read_assets.v1"
                            }
                        },
                        "schema": {
                            "description": "Forbidden",
                            "properties": {
                                "error": {
                                    "description": "Forbidden message",
                                    "title": "get_characters_character_id_assets_403_forbidden",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_character_id_assets_forbidden",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_characters_character_id_assets_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_character_id_assets_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "evesso": [
                            "esi-assets.read_assets.v1"
                        ]
                    }
                ],
                "summary": "Get character assets",
                "tags": [
                    "Assets"
                ],
                "x-alternate-versions": [
                    "dev",
                    "latest",
                    "v1"
                ],
                "x-cached-seconds": 3600
            }
        },
        "/characters/{character_id}/blueprints/": {
            "get": {
                "description": "Return a list of blueprints the character has\n\n---\n\nAlternate route: `/v1/characters/{character_id}/blueprints/`\n\nAlternate route: `/latest/characters/{character_id}/blueprints/`\n\nAlternate route: `/dev/characters/{character_id}/blueprints/`\n\n\n---\n\nThis route is cached for up to 3600 seconds",
                "operationId": "get_characters_character_id_blueprints",
                "parameters": [
                    {
                        "description": "ID for a character",
                        "format": "int32",
                        "in": "path",
                        "name": "character_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "description": "Access token to use, if preferred over a header",
                        "in": "query",
                        "name": "token",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of blueprints",
                        "examples": {
                            "application/json": [
                                {
                                    "item_id": 1000000010495,
                                    "location_flag": "Hangar",
                                    "location_id": 60014719,
                                    "material_efficiency": 0,
                                    "quantity": 1,
                                    "runs": -1,
                                    "time_efficiency": 0,
                                    "type_id": 691
                                }
                            ]
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok array",
                            "items": {
                                "description": "200 ok object",
                                "properties": {
                                    "item_id": {
                                        "description": "Unique ID for this item. The ID of an item is stable if that item is not repackaged, stacked, detached from a stack, assembled, or otherwise altered. If an item is changed in one of these ways, then the ID will also change (see notes below).",
                                        "format": "int64",
                                        "title": "get_characters_character_id_blueprints_item_id",
                                        "type": "integer"
                                    },
                                    "location_flag": {
                                        "description": "Indicates something about this item's storage location. The flag is used to differentiate between hangar divisions, drone bay, fitting location, and similar.",
                                        "enum": [
                                            "AutoFit",
                                            "Cargo",
                                            "CorpseBay",
                                            "DroneBay",
                                            "FleetHangar",
                                            "Deliveries",
                                            "HiddenModifiers",
                                            "Hangar",
                                            "HangarAll",
                                            "LoSlot0",
                                            "LoSlot1",
                                            "LoSlot2",
                                            "LoSlot3",
                                            "LoSlot4",
                                            "LoSlot5",
                                            "LoSlot6",
                                            "LoSlot7",
                                            "MedSlot0",
                                            "MedSlot1",
                                            "MedSlot2",
                                            "MedSlot3",
                                            "MedSlot4",
                                            "MedSlot5",
                                            "MedSlot6",
                                            "MedSlot7",
                                            "HiSlot0",
                                            "HiSlot1",
                                            "HiSlot2",
                                            "HiSlot3",
                                            "HiSlot4",
                                            "HiSlot5",
                                            "HiSlot6",
                                            "HiSlot7",
                                            "AssetSafety",
                                            "Locked",
                                            "Unlocked",
                                            "Implant",
                                            "QuafeBay",
                                            "RigSlot0",
                                            "RigSlot1",
                                            "RigSlot2",
                                            "RigSlot3",
                                            "RigSlot4",
                                            "RigSlot5",
                                            "RigSlot6",
                                            "RigSlot7",
                                            "ShipHangar",
                                            "SpecializedFuelBay",
                                            "SpecializedOreHold",
                                            "SpecializedGasHold",
                                            "SpecializedMineralHold",
                                            "SpecializedSalvageHold",
                                            "SpecializedShipHold",
                                            "SpecializedSmallShipHold",
                                            "SpecializedMediumShipHold",
                                            "SpecializedLargeShipHold",
                                            "SpecializedIndustrialShipHold",
                                            "SpecializedAmmoHold",
                                            "SpecializedCommandCenterHold",
                                            "SpecializedPlanetaryCommoditiesHold",
                                            "SpecializedMaterialBay",
                                            "SubSystemSlot0",
                                            "SubSystemSlot1",
                                            "SubSystemSlot2",
                                            "SubSystemSlot3",
                                            "SubSystemSlot4",
                                            "SubSystemSlot5",
                                            "SubSystemSlot6",
                                            "SubSystemSlot7",
                                            "FighterBay",
                                            "FighterTube0",
                                            "FighterTube1",
                                            "FighterTube2",
                                            "FighterTube3",
                                            "FighterTube4",
                                            "Module"
                                        ],
                                        "title": "get_characters_character_id_blueprints_location_flag",
                                        "type": "string"
                                    },
                                    "location_id": {
                                        "description": "References a solar system, station or itemID if this blueprint is located within a container. If an itemID the Character - AssetList API must be queried to find the container using the itemID, from which the correct location of the Blueprint can be derived.",
                                        "format": "int64",
                                        "title": "get_characters_character_id_blueprints_location_id",
                                        "type": "integer"
                                    },
                                    "material_efficiency": {
                                        "description": "Material Efficiency Level of the blueprint, can be any integer between 0 and 10.",
                                        "format": "int32",
                                        "title": "get_characters_character_id_blueprints_material_efficiency",
                                        "type": "integer"
                                    },
                                    "quantity": {
                                        "description": "Typically will be -1 or -2 designating a singleton item, where -1 is an original and -2 is a copy. It can be a positive integer if it is a stack of blueprint originals fresh from the market (no activities performed on them yet).",
                                        "format": "int32",
                                        "title": "get_characters_character_id_blueprints_quantity",
                                        "type": "integer"
                                    },
                                    "runs": {
                                        "description": "Number of runs remaining if the blueprint is a copy, -1 if it is an original.",
                                        "format": "int32",
                                        "title": "get_characters_character_id_blueprints_runs",
                                        "type": "integer"
                                    },
                                    "time_efficiency": {
                                        "description": "Time Efficiency Level of the blueprint, can be any even integer between 0 and 20.",
                                        "format": "int32",
                                        "title": "get_characters_character_id_blueprints_time_efficiency",
                                        "type": "integer"
                                    },
                                    "type_id": {
                                        "description": "type_id integer",
                                        "format": "int32",
                                        "title": "get_characters_character_id_blueprints_type_id",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "item_id",
                                    "type_id",
                                    "location_id",
                                    "location_flag",
                                    "quantity",
                                    "time_efficiency",
                                    "material_efficiency",
                                    "runs"
                                ],
                                "title": "get_characters_character_id_blueprints_200_ok",
                                "type": "object"
                            },
                            "title": "get_characters_character_id_blueprints_ok",
                            "type": "array"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "examples": {
                            "application/json": {
                                "error": "Token is not valid for scope(s): esi-characters.read_blueprints.v1"
                            }
                        },
                        "schema": {
                            "description": "Forbidden",
                            "properties": {
                                "error": {
                                    "description": "Forbidden message",
                                    "title": "get_characters_character_id_blueprints_403_forbidden",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_character_id_blueprints_forbidden",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_characters_character_id_blueprints_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_character_id_blueprints_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "evesso": [
                            "esi-characters.read_blueprints.v1"
                        ]
                    }
                ],
                "summary": "Get blueprints",
                "tags": [
                    "Character"
                ],
                "x-alternate-versions": [
                    "dev",
                    "latest",
                    "v1"
                ],
                "x-cached-seconds": 3600
            }
        },
        "/characters/{character_id}/bookmarks/": {
            "get": {
                "description": "List your character's personal bookmarks\n\n---\n\nAlternate route: `/v1/characters/{character_id}/bookmarks/`\n\nAlternate route: `/latest/characters/{character_id}/bookmarks/`\n\nAlternate route: `/dev/characters/{character_id}/bookmarks/`\n\n\n---\n\nThis route is cached for up to 3600 seconds",
                "operationId": "get_characters_character_id_bookmarks",
                "parameters": [
                    {
                        "description": "An EVE character ID",
                        "format": "int32",
                        "in": "path",
                        "name": "character_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "description": "Access token to use, if preferred over a header",
                        "in": "query",
                        "name": "token",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of bookmarks",
                        "examples": {
                            "application/json": [
                                {
                                    "bookmark_id": 32,
                                    "create_date": "2016-08-09T11:57:47Z",
                                    "creator_id": 90000001,
                                    "folder_id": 5,
                                    "memo": "aoeu ( Citadel )",
                                    "note": "",
                                    "owner_id": 90000001,
                                    "target": {
                                        "item": {
                                            "item_id": 1000000012668,
                                            "type_id": 35832
                                        },
                                        "location_id": 30000005
                                    }
                                }
                            ]
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok array",
                            "items": {
                                "description": "200 ok object",
                                "properties": {
                                    "bookmark_id": {
                                        "description": "bookmark_id integer",
                                        "format": "int64",
                                        "title": "get_characters_character_id_bookmarks_bookmark_id",
                                        "type": "integer"
                                    },
                                    "create_date": {
                                        "description": "create_date string",
                                        "format": "date-time",
                                        "title": "get_characters_character_id_bookmarks_create_date",
                                        "type": "string"
                                    },
                                    "creator_id": {
                                        "description": "creator_id integer",
                                        "format": "int32",
                                        "title": "get_characters_character_id_bookmarks_creator_id",
                                        "type": "integer"
                                    },
                                    "folder_id": {
                                        "description": "folder_id integer",
                                        "format": "int32",
                                        "title": "get_characters_character_id_bookmarks_folder_id",
                                        "type": "integer"
                                    },
                                    "memo": {
                                        "description": "memo string",
                                        "title": "get_characters_character_id_bookmarks_memo",
                                        "type": "string"
                                    },
                                    "note": {
                                        "description": "note string",
                                        "title": "get_characters_character_id_bookmarks_note",
                                        "type": "string"
                                    },
                                    "owner_id": {
                                        "description": "owner_id integer",
                                        "format": "int32",
                                        "title": "get_characters_character_id_bookmarks_owner_id",
                                        "type": "integer"
                                    },
                                    "target": {
                                        "description": "target object",
                                        "properties": {
                                            "coordinates": {
                                                "description": "coordinates object",
                                                "properties": {
                                                    "x": {
                                                        "description": "x number",
                                                        "format": "double",
                                                        "title": "get_characters_character_id_bookmarks_x",
                                                        "type": "number"
                                                    },
                                                    "y": {
                                                        "description": "y number",
                                                        "format": "double",
                                                        "title": "get_characters_character_id_bookmarks_y",
                                                        "type": "number"
                                                    },
                                                    "z": {
                                                        "description": "z number",
                                                        "format": "double",
                                                        "title": "get_characters_character_id_bookmarks_z",
                                                        "type": "number"
                                                    }
                                                },
                                                "required": [
                                                    "x",
                                                    "y",
                                                    "z"
                                                ],
                                                "title": "get_characters_character_id_bookmarks_coordinates",
                                                "type": "object"
                                            },
                                            "item": {
                                                "description": "item object",
                                                "properties": {
                                                    "item_id": {
                                                        "description": "item_id integer",
                                                        "format": "int64",
                                                        "title": "get_characters_character_id_bookmarks_item_id",
                                                        "type": "integer"
                                                    },
                                                    "type_id": {
                                                        "description": "type_id integer",
                                                        "format": "int32",
                                                        "title": "get_characters_character_id_bookmarks_type_id",
                                                        "type": "integer"
                                                    }
                                                },
                                                "required": [
                                                    "item_id",
                                                    "type_id"
                                                ],
                                                "title": "get_characters_character_id_bookmarks_item",
                                                "type": "object"
                                            },
                                            "location_id": {
                                                "description": "location_id integer",
                                                "format": "int64",
                                                "title": "get_characters_character_id_bookmarks_location_id",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "location_id"
                                        ],
                                        "title": "get_characters_character_id_bookmarks_target",
                                        "type": "object"
                                    }
                                },
                                "required": [
                                    "bookmark_id",
                                    "creator_id",
                                    "owner_id",
                                    "create_date",
                                    "memo",
                                    "note",
                                    "target"
                                ],
                                "title": "get_characters_character_id_bookmarks_200_ok",
                                "type": "object"
                            },
                            "title": "get_characters_character_id_bookmarks_ok",
                            "type": "array"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "examples": {
                            "application/json": {
                                "error": "Token is not valid for scope(s): esi-bookmarks.read_character_bookmarks.v1"
                            }
                        },
                        "schema": {
                            "description": "Forbidden",
                            "properties": {
                                "error": {
                                    "description": "Forbidden message",
                                    "title": "get_characters_character_id_bookmarks_403_forbidden",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_character_id_bookmarks_forbidden",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_characters_character_id_bookmarks_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_character_id_bookmarks_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "evesso": [
                            "esi-bookmarks.read_character_bookmarks.v1"
                        ]
                    }
                ],
                "summary": "List bookmarks",
                "tags": [
                    "Bookmarks"
                ],
                "x-alternate-versions": [
                    "dev",
                    "latest",
                    "v1"
                ],
                "x-cached-seconds": 3600
            }
        },
        "/characters/{character_id}/bookmarks/folders/": {
            "get": {
                "description": "List your character's personal bookmark folders\n\n---\n\nAlternate route: `/v1/characters/{character_id}/bookmarks/folders/`\n\nAlternate route: `/latest/characters/{character_id}/bookmarks/folders/`\n\nAlternate route: `/dev/characters/{character_id}/bookmarks/folders/`\n\n\n---\n\nThis route is cached for up to 3600 seconds",
                "operationId": "get_characters_character_id_bookmarks_folders",
                "parameters": [
                    {
                        "description": "An EVE character ID",
                        "format": "int32",
                        "in": "path",
                        "name": "character_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "description": "Access token to use, if preferred over a header",
                        "in": "query",
                        "name": "token",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of bookmark folders",
                        "examples": {
                            "application/json": [
                                {
                                    "folder_id": 5,
                                    "name": "Icecream",
                                    "owner_id": 90000001
                                }
                            ]
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok array",
                            "items": {
                                "description": "200 ok object",
                                "properties": {
                                    "folder_id": {
                                        "description": "folder_id integer",
                                        "format": "int32",
                                        "title": "get_characters_character_id_bookmarks_folders_folder_id",
                                        "type": "integer"
                                    },
                                    "name": {
                                        "description": "name string",
                                        "title": "get_characters_character_id_bookmarks_folders_name",
                                        "type": "string"
                                    },
                                    "owner_id": {
                                        "description": "owner_id integer",
                                        "format": "int32",
                                        "title": "get_characters_character_id_bookmarks_folders_owner_id",
                                        "type": "integer"
                                    }
                                },
                                "title": "get_characters_character_id_bookmarks_folders_200_ok",
                                "type": "object"
                            },
                            "title": "get_characters_character_id_bookmarks_folders_ok",
                            "type": "array"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "examples": {
                            "application/json": {
                                "error": "Token is not valid for scope(s): esi-bookmarks.read_character_bookmarks.v1"
                            }
                        },
                        "schema": {
                            "description": "Forbidden",
                            "properties": {
                                "error": {
                                    "description": "Forbidden message",
                                    "title": "get_characters_character_id_bookmarks_folders_403_forbidden",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_character_id_bookmarks_folders_forbidden",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_characters_character_id_bookmarks_folders_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_character_id_bookmarks_folders_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "evesso": [
                            "esi-bookmarks.read_character_bookmarks.v1"
                        ]
                    }
                ],
                "summary": "List bookmark folders",
                "tags": [
                    "Bookmarks"
                ],
                "x-alternate-versions": [
                    "dev",
                    "latest",
                    "v1"
                ],
                "x-cached-seconds": 3600
            }
        },
        "/characters/{character_id}/calendar/": {
            "get": {
                "description": "Get 50 event summaries from the calendar. If no event ID is given,\nthe resource will return the next 50 chronological event summaries\nfrom now. If an event ID is specified, it will return the next 50\nchronological event summaries from after that event.\n\n\n---\n\nAlternate route: `/v1/characters/{character_id}/calendar/`\n\nAlternate route: `/latest/characters/{character_id}/calendar/`\n\nAlternate route: `/dev/characters/{character_id}/calendar/`\n\n\n---\n\nThis route is cached for up to 5 seconds",
                "operationId": "get_characters_character_id_calendar",
                "parameters": [
                    {
                        "description": "The character to retrieve events from",
                        "format": "int32",
                        "in": "path",
                        "name": "character_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "description": "The event ID to retrieve events from",
                        "format": "int32",
                        "in": "query",
                        "name": "from_event",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "description": "Access token to use, if preferred over a header",
                        "in": "query",
                        "name": "token",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A collection of event summaries",
                        "examples": {
                            "application/json": [
                                {
                                    "event_date": "2016-06-26T20:00:00Z",
                                    "event_id": 1386435,
                                    "event_response": "accepted",
                                    "importance": 0,
                                    "title": "o7 The EVE Online Show"
                                }
                            ]
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "Up to 50 events from now or the event you requested\n",
                            "items": {
                                "description": "event",
                                "properties": {
                                    "event_date": {
                                        "description": "event_date string",
                                        "format": "date-time",
                                        "title": "get_characters_character_id_calendar_event_date",
                                        "type": "string"
                                    },
                                    "event_id": {
                                        "description": "event_id integer",
                                        "format": "int32",
                                        "title": "get_characters_character_id_calendar_event_id",
                                        "type": "integer"
                                    },
                                    "event_response": {
                                        "description": "event_response string",
                                        "enum": [
                                            "declined",
                                            "not_responded",
                                            "accepted",
                                            "tentative"
                                        ],
                                        "title": "get_characters_character_id_calendar_event_response",
                                        "type": "string"
                                    },
                                    "importance": {
                                        "description": "importance integer",
                                        "format": "int32",
                                        "title": "get_characters_character_id_calendar_importance",
                                        "type": "integer"
                                    },
                                    "title": {
                                        "description": "title string",
                                        "title": "get_characters_character_id_calendar_title",
                                        "type": "string"
                                    }
                                },
                                "title": "get_characters_character_id_calendar_200_ok",
                                "type": "object"
                            },
                            "title": "get_characters_character_id_calendar_ok",
                            "type": "array"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "examples": {
                            "application/json": {
                                "error": "Token is not valid for scope(s): esi-calendar.read_calendar_events.v1"
                            }
                        },
                        "schema": {
                            "description": "Forbidden",
                            "properties": {
                                "error": {
                                    "description": "Forbidden message",
                                    "title": "get_characters_character_id_calendar_403_forbidden",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_character_id_calendar_forbidden",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_characters_character_id_calendar_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_character_id_calendar_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "evesso": [
                            "esi-calendar.read_calendar_events.v1"
                        ]
                    }
                ],
                "summary": "List calendar event summaries",
                "tags": [
                    "Calendar"
                ],
                "x-alternate-versions": [
                    "dev",
                    "latest",
                    "v1"
                ],
                "x-cached-seconds": 5
            }
        },
        "/characters/{character_id}/calendar/{event_id}/": {
            "get": {
                "deprecated": true,
                "description": "Get all the information for a specific event\n\n---\n\nAlternate route: `/v2/characters/{character_id}/calendar/{event_id}/`\n\n\n---\n\nThis route is cached for up to 5 seconds",
                "operationId": "get_characters_character_id_calendar_event_id",
                "parameters": [
                    {
                        "description": "The character id requesting the event",
                        "format": "int32",
                        "in": "path",
                        "name": "character_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "description": "The id of the event requested",
                        "format": "int32",
                        "in": "path",
                        "name": "event_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Access token to use, if preferred over a header",
                        "in": "query",
                        "name": "token",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Full details of a specific event",
                        "examples": {
                            "application/json": {
                                "duration_in_minutes": 60,
                                "event_date": "2016-06-26T21:00:00Z",
                                "event_id": 1386435,
                                "event_response": "Undecided",
                                "event_text": "o7: The EVE Online Show features latest developer news, fast paced action, community overviews and a lot more with CCP Guard and CCP Mimic. Join the thrilling o7 live broadcast at 20:00 EVE time (=UTC) on <a href=\"http://www.twitch.tv/ccp\">EVE TV</a>. Don't miss it!",
                                "importance": 1,
                                "owner_id": 1,
                                "owner_name": "EVE System",
                                "owner_type_id": 0,
                                "title": "o7 The EVE Online Show"
                            }
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "Full details of a specific event",
                            "properties": {
                                "duration_in_minutes": {
                                    "description": "duration_in_minutes integer",
                                    "format": "int32",
                                    "title": "get_characters_character_id_calendar_event_id_duration_in_minutes",
                                    "type": "integer"
                                },
                                "event_date": {
                                    "description": "event_date string",
                                    "format": "date-time",
                                    "title": "get_characters_character_id_calendar_event_id_event_date",
                                    "type": "string"
                                },
                                "event_id": {
                                    "description": "event_id integer",
                                    "format": "int32",
                                    "title": "get_characters_character_id_calendar_event_id_event_id",
                                    "type": "integer"
                                },
                                "event_response": {
                                    "description": "event_response string",
                                    "title": "get_characters_character_id_calendar_event_id_event_response",
                                    "type": "string"
                                },
                                "event_text": {
                                    "description": "event_text string",
                                    "title": "get_characters_character_id_calendar_event_id_event_text",
                                    "type": "string"
                                },
                                "importance": {
                                    "description": "importance integer",
                                    "format": "int32",
                                    "title": "get_characters_character_id_calendar_event_id_importance",
                                    "type": "integer"
                                },
                                "owner_id": {
                                    "description": "owner_id integer",
                                    "format": "int32",
                                    "title": "get_characters_character_id_calendar_event_id_owner_id",
                                    "type": "integer"
                                },
                                "owner_name": {
                                    "description": "owner_name string",
                                    "title": "get_characters_character_id_calendar_event_id_owner_name",
                                    "type": "string"
                                },
                                "owner_type_id": {
                                    "description": "owner_type_id integer",
                                    "format": "int32",
                                    "title": "get_characters_character_id_calendar_event_id_owner_type_id",
                                    "type": "integer"
                                },
                                "title": {
                                    "description": "title string",
                                    "title": "get_characters_character_id_calendar_event_id_title",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_character_id_calendar_event_id_ok",
                            "type": "object"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "examples": {
                            "application/json": {
                                "error": "Token is not valid for scope(s): esi-calendar.read_calendar_events.v1"
                            }
                        },
                        "schema": {
                            "description": "Forbidden",
                            "properties": {
                                "error": {
                                    "description": "Forbidden message",
                                    "title": "get_characters_character_id_calendar_event_id_403_forbidden",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_character_id_calendar_event_id_forbidden",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_characters_character_id_calendar_event_id_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_character_id_calendar_event_id_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "evesso": [
                            "esi-calendar.read_calendar_events.v1"
                        ]
                    }
                ],
                "summary": "Get an event",
                "tags": [
                    "Calendar"
                ],
                "x-alternate-versions": [
                    "v2"
                ],
                "x-cached-seconds": 5
            }
        },
        "/characters/{character_id}/chat_channels/": {
            "get": {
                "description": "Return chat channels that a character is the owner or an operator of\n\n---\n\nAlternate route: `/v1/characters/{character_id}/chat_channels/`\n\nAlternate route: `/latest/characters/{character_id}/chat_channels/`\n\nAlternate route: `/dev/characters/{character_id}/chat_channels/`\n\n\n---\n\nThis route is cached for up to 300 seconds",
                "operationId": "get_characters_character_id_chat_channels",
                "parameters": [
                    {
                        "description": "ID for a character",
                        "format": "int32",
                        "in": "path",
                        "name": "character_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "description": "Access token to use, if preferred over a header",
                        "in": "query",
                        "name": "token",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of chat channels",
                        "examples": {
                            "application/json": [
                                {
                                    "allowed": [],
                                    "blocked": [],
                                    "channel_id": -69329950,
                                    "comparison_key": "players'haven",
                                    "has_password": false,
                                    "motd": "<b>Feed pineapples to the cats!</b>",
                                    "muted": [],
                                    "name": "Players' Haven",
                                    "operators": [],
                                    "owner_id": 95578451
                                }
                            ]
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok array",
                            "items": {
                                "description": "200 ok object",
                                "properties": {
                                    "allowed": {
                                        "description": "allowed array",
                                        "items": {
                                            "description": "allowed object",
                                            "properties": {
                                                "accessor_id": {
                                                    "description": "ID of an allowed channel member",
                                                    "format": "int32",
                                                    "title": "get_characters_character_id_chat_channels_accessor_id",
                                                    "type": "integer"
                                                },
                                                "accessor_type": {
                                                    "description": "accessor_type string",
                                                    "enum": [
                                                        "character",
                                                        "corporation",
                                                        "alliance"
                                                    ],
                                                    "title": "get_characters_character_id_chat_channels_accessor_type",
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "accessor_id",
                                                "accessor_type"
                                            ],
                                            "title": "get_characters_character_id_chat_channels_allowed",
                                            "type": "object"
                                        },
                                        "title": "get_characters_character_id_chat_channels_allowed",
                                        "type": "array"
                                    },
                                    "blocked": {
                                        "description": "blocked array",
                                        "items": {
                                            "description": "blocked object",
                                            "properties": {
                                                "accessor_id": {
                                                    "description": "ID of a blocked channel member",
                                                    "format": "int32",
                                                    "title": "get_characters_character_id_chat_channels_accessor_id",
                                                    "type": "integer"
                                                },
                                                "accessor_type": {
                                                    "description": "accessor_type string",
                                                    "enum": [
                                                        "character",
                                                        "corporation",
                                                        "alliance"
                                                    ],
                                                    "title": "get_characters_character_id_chat_channels_accessor_type",
                                                    "type": "string"
                                                },
                                                "end_at": {
                                                    "description": "Time at which this accessor will no longer be blocked",
                                                    "format": "date-time",
                                                    "title": "get_characters_character_id_chat_channels_end_at",
                                                    "type": "string"
                                                },
                                                "reason": {
                                                    "description": "Reason this accessor is blocked",
                                                    "title": "get_characters_character_id_chat_channels_reason",
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "accessor_id",
                                                "accessor_type"
                                            ],
                                            "title": "get_characters_character_id_chat_channels_blocked",
                                            "type": "object"
                                        },
                                        "title": "get_characters_character_id_chat_channels_blocked",
                                        "type": "array"
                                    },
                                    "channel_id": {
                                        "description": "Unique channel ID. Always negative for player-created channels. Permanent (CCP created) channels have a positive ID, but don't appear in the API",
                                        "format": "int32",
                                        "title": "get_characters_character_id_chat_channels_channel_id",
                                        "type": "integer"
                                    },
                                    "comparison_key": {
                                        "description": "Normalized, unique string used to compare channel names",
                                        "title": "get_characters_character_id_chat_channels_comparison_key",
                                        "type": "string"
                                    },
                                    "has_password": {
                                        "description": "Whether this is a password protected channel",
                                        "title": "get_characters_character_id_chat_channels_has_password",
                                        "type": "boolean"
                                    },
                                    "motd": {
                                        "description": "Message of the day for this channel",
                                        "title": "get_characters_character_id_chat_channels_motd",
                                        "type": "string"
                                    },
                                    "muted": {
                                        "description": "muted array",
                                        "items": {
                                            "description": "muted object",
                                            "properties": {
                                                "accessor_id": {
                                                    "description": "ID of a muted channel member",
                                                    "format": "int32",
                                                    "title": "get_characters_character_id_chat_channels_accessor_id",
                                                    "type": "integer"
                                                },
                                                "accessor_type": {
                                                    "description": "accessor_type string",
                                                    "enum": [
                                                        "character",
                                                        "corporation",
                                                        "alliance"
                                                    ],
                                                    "title": "get_characters_character_id_chat_channels_accessor_type",
                                                    "type": "string"
                                                },
                                                "end_at": {
                                                    "description": "Time at which this accessor will no longer be muted",
                                                    "format": "date-time",
                                                    "title": "get_characters_character_id_chat_channels_end_at",
                                                    "type": "string"
                                                },
                                                "reason": {
                                                    "description": "Reason this accessor is muted",
                                                    "title": "get_characters_character_id_chat_channels_reason",
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "accessor_id",
                                                "accessor_type"
                                            ],
                                            "title": "get_characters_character_id_chat_channels_muted",
                                            "type": "object"
                                        },
                                        "title": "get_characters_character_id_chat_channels_muted",
                                        "type": "array"
                                    },
                                    "name": {
                                        "description": "Displayed name of channel",
                                        "title": "get_characters_character_id_chat_channels_name",
                                        "type": "string"
                                    },
                                    "operators": {
                                        "description": "operators array",
                                        "items": {
                                            "description": "operator object",
                                            "properties": {
                                                "accessor_id": {
                                                    "description": "ID of a channel operator",
                                                    "format": "int32",
                                                    "title": "get_characters_character_id_chat_channels_accessor_id",
                                                    "type": "integer"
                                                },
                                                "accessor_type": {
                                                    "description": "accessor_type string",
                                                    "enum": [
                                                        "character",
                                                        "corporation",
                                                        "alliance"
                                                    ],
                                                    "title": "get_characters_character_id_chat_channels_accessor_type",
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "accessor_id",
                                                "accessor_type"
                                            ],
                                            "title": "get_characters_character_id_chat_channels_operator",
                                            "type": "object"
                                        },
                                        "title": "get_characters_character_id_chat_channels_operators",
                                        "type": "array"
                                    },
                                    "owner_id": {
                                        "description": "owner_id integer",
                                        "format": "int32",
                                        "title": "get_characters_character_id_chat_channels_owner_id",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "channel_id",
                                    "name",
                                    "owner_id",
                                    "comparison_key",
                                    "has_password",
                                    "motd",
                                    "allowed",
                                    "operators",
                                    "blocked",
                                    "muted"
                                ],
                                "title": "get_characters_character_id_chat_channels_200_ok",
                                "type": "object"
                            },
                            "title": "get_characters_character_id_chat_channels_ok",
                            "type": "array"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "examples": {
                            "application/json": {
                                "error": "Token is not valid for scope(s): esi-characters.read_chat_channels.v1"
                            }
                        },
                        "schema": {
                            "description": "Forbidden",
                            "properties": {
                                "error": {
                                    "description": "Forbidden message",
                                    "title": "get_characters_character_id_chat_channels_403_forbidden",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_character_id_chat_channels_forbidden",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_characters_character_id_chat_channels_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_character_id_chat_channels_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "evesso": [
                            "esi-characters.read_chat_channels.v1"
                        ]
                    }
                ],
                "summary": "Get chat channels",
                "tags": [
                    "Character"
                ],
                "x-alternate-versions": [
                    "dev",
                    "latest",
                    "v1"
                ],
                "x-cached-seconds": 300
            }
        },
        "/characters/{character_id}/clones/": {
            "get": {
                "deprecated": true,
                "description": "A list of the character's clones\n\n---\n\nAlternate route: `/v1/characters/{character_id}/clones/`\n\n\n---\n\nThis route is cached for up to 3600 seconds",
                "operationId": "get_characters_character_id_clones",
                "parameters": [
                    {
                        "description": "An EVE character ID",
                        "format": "int32",
                        "in": "path",
                        "name": "character_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "description": "Access token to use, if preferred over a header",
                        "in": "query",
                        "name": "token",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Jump clones for the given character",
                        "examples": {
                            "application/json": [
                                {
                                    "implants": [
                                        22118
                                    ],
                                    "location_id": 60003463,
                                    "location_type": "station"
                                },
                                {
                                    "implants": [],
                                    "location_id": 1021348135816,
                                    "location_type": "structure"
                                }
                            ]
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok array",
                            "items": {
                                "description": "200 ok object",
                                "properties": {
                                    "implants": {
                                        "description": "implants array",
                                        "items": {
                                            "description": "implant integer",
                                            "format": "int32",
                                            "title": "get_characters_character_id_clones_implant",
                                            "type": "integer"
                                        },
                                        "title": "get_characters_character_id_clones_implants",
                                        "type": "array"
                                    },
                                    "location_id": {
                                        "description": "location_id integer",
                                        "format": "int64",
                                        "title": "get_characters_character_id_clones_location_id",
                                        "type": "integer"
                                    },
                                    "location_type": {
                                        "description": "location_type string",
                                        "enum": [
                                            "station",
                                            "structure"
                                        ],
                                        "title": "get_characters_character_id_clones_location_type",
                                        "type": "string"
                                    }
                                },
                                "title": "get_characters_character_id_clones_200_ok",
                                "type": "object"
                            },
                            "title": "get_characters_character_id_clones_ok",
                            "type": "array"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "examples": {
                            "application/json": {
                                "error": "Token is not valid for scope(s): esi-clones.read_clones.v1"
                            }
                        },
                        "schema": {
                            "description": "Forbidden",
                            "properties": {
                                "error": {
                                    "description": "Forbidden message",
                                    "title": "get_characters_character_id_clones_403_forbidden",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_character_id_clones_forbidden",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_characters_character_id_clones_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_character_id_clones_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "evesso": [
                            "esi-clones.read_clones.v1"
                        ]
                    }
                ],
                "summary": "Get clones",
                "tags": [
                    "Clones"
                ],
                "x-alternate-versions": [
                    "v1"
                ],
                "x-cached-seconds": 3600
            }
        },
        "/characters/{character_id}/contacts/": {
            "delete": {
                "description": "Bulk delete contacts\n\n---\n\nAlternate route: `/v1/characters/{character_id}/contacts/`\n\nAlternate route: `/latest/characters/{character_id}/contacts/`\n\nAlternate route: `/dev/characters/{character_id}/contacts/`\n",
                "operationId": "delete_characters_character_id_contacts",
                "parameters": [
                    {
                        "description": "ID for a character",
                        "format": "int32",
                        "in": "path",
                        "name": "character_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "A list of contacts to edit",
                        "in": "body",
                        "name": "contact_ids",
                        "required": true,
                        "schema": {
                            "description": "contact_ids array",
                            "items": {
                                "description": "ID of the contact to edit",
                                "format": "int32",
                                "title": "delete_characters_character_id_contacts_contact_id",
                                "type": "integer"
                            },
                            "maxItems": 20,
                            "minItems": 1,
                            "title": "delete_characters_character_id_contacts_contact_ids",
                            "type": "array"
                        }
                    },
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "description": "Access token to use, if preferred over a header",
                        "in": "query",
                        "name": "token",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Contacts deleted"
                    },
                    "403": {
                        "description": "Forbidden",
                        "examples": {
                            "application/json": {
                                "error": "Token is not valid for scope(s): esi-characters.write_contacts.v1"
                            }
                        },
                        "schema": {
                            "description": "Forbidden",
                            "properties": {
                                "error": {
                                    "description": "Forbidden message",
                                    "title": "delete_characters_character_id_contacts_403_forbidden",
                                    "type": "string"
                                }
                            },
                            "title": "delete_characters_character_id_contacts_forbidden",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "delete_characters_character_id_contacts_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "delete_characters_character_id_contacts_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "evesso": [
                            "esi-characters.write_contacts.v1"
                        ]
                    }
                ],
                "summary": "Delete contacts",
                "tags": [
                    "Contacts"
                ],
                "x-alternate-versions": [
                    "dev",
                    "latest",
                    "v1"
                ]
            },
            "get": {
                "description": "Return contacts of a character\n\n---\n\nAlternate route: `/v1/characters/{character_id}/contacts/`\n\nAlternate route: `/latest/characters/{character_id}/contacts/`\n\nAlternate route: `/dev/characters/{character_id}/contacts/`\n\n\n---\n\nThis route is cached for up to 300 seconds",
                "operationId": "get_characters_character_id_contacts",
                "parameters": [
                    {
                        "description": "ID for a character",
                        "format": "int32",
                        "in": "path",
                        "name": "character_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "default": 1,
                        "description": "page integer",
                        "format": "int32",
                        "in": "query",
                        "minimum": 1,
                        "name": "page",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "description": "Access token to use, if preferred over a header",
                        "in": "query",
                        "name": "token",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of contacts",
                        "examples": {
                            "application/json": [
                                {
                                    "contact_id": 123,
                                    "contact_type": "character",
                                    "is_blocked": false,
                                    "is_watched": true,
                                    "standing": 10.0
                                }
                            ]
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok array",
                            "items": {
                                "description": "200 ok object",
                                "properties": {
                                    "contact_id": {
                                        "description": "contact_id integer",
                                        "format": "int32",
                                        "title": "get_characters_character_id_contacts_contact_id",
                                        "type": "integer"
                                    },
                                    "contact_type": {
                                        "description": "contact_type string",
                                        "enum": [
                                            "character",
                                            "corporation",
                                            "alliance",
                                            "faction"
                                        ],
                                        "title": "get_characters_character_id_contacts_contact_type",
                                        "type": "string"
                                    },
                                    "is_blocked": {
                                        "description": "Whether this contact is in the blocked list. Note a missing value denotes unknown, not true or false",
                                        "title": "get_characters_character_id_contacts_is_blocked",
                                        "type": "boolean"
                                    },
                                    "is_watched": {
                                        "description": "Whether this contact is being watched",
                                        "title": "get_characters_character_id_contacts_is_watched",
                                        "type": "boolean"
                                    },
                                    "label_id": {
                                        "description": "Custom label of the contact",
                                        "format": "int64",
                                        "title": "get_characters_character_id_contacts_label_id",
                                        "type": "integer"
                                    },
                                    "standing": {
                                        "description": "Standing of the contact",
                                        "format": "float",
                                        "title": "get_characters_character_id_contacts_standing",
                                        "type": "number"
                                    }
                                },
                                "required": [
                                    "standing",
                                    "contact_type",
                                    "contact_id"
                                ],
                                "title": "get_characters_character_id_contacts_200_ok",
                                "type": "object"
                            },
                            "title": "get_characters_character_id_contacts_ok",
                            "type": "array"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "examples": {
                            "application/json": {
                                "error": "Token is not valid for scope(s): esi-characters.read_contacts.v1"
                            }
                        },
                        "schema": {
                            "description": "Forbidden",
                            "properties": {
                                "error": {
                                    "description": "Forbidden message",
                                    "title": "get_characters_character_id_contacts_403_forbidden",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_character_id_contacts_forbidden",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_characters_character_id_contacts_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_character_id_contacts_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "evesso": [
                            "esi-characters.read_contacts.v1"
                        ]
                    }
                ],
                "summary": "Get contacts",
                "tags": [
                    "Contacts"
                ],
                "x-alternate-versions": [
                    "dev",
                    "latest",
                    "v1"
                ],
                "x-cached-seconds": 300
            },
            "post": {
                "description": "Bulk add contacts with same settings\n\n---\n\nAlternate route: `/v1/characters/{character_id}/contacts/`\n\nAlternate route: `/latest/characters/{character_id}/contacts/`\n\nAlternate route: `/dev/characters/{character_id}/contacts/`\n",
                "operationId": "post_characters_character_id_contacts",
                "parameters": [
                    {
                        "description": "ID for a character",
                        "format": "int32",
                        "in": "path",
                        "name": "character_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "A list of contacts to add",
                        "in": "body",
                        "name": "contact_ids",
                        "required": true,
                        "schema": {
                            "description": "contact_ids array",
                            "items": {
                                "description": "ID of the contact to add",
                                "format": "int32",
                                "title": "post_characters_character_id_contacts_contact_id",
                                "type": "integer"
                            },
                            "maxItems": 100,
                            "minItems": 1,
                            "title": "post_characters_character_id_contacts_contact_ids",
                            "type": "array"
                        }
                    },
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "default": 0,
                        "description": "Add a custom label to the new contact",
                        "format": "int64",
                        "in": "query",
                        "name": "label_id",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "description": "Standing for the new contact",
                        "format": "float",
                        "in": "query",
                        "maximum": 10,
                        "minimum": -10,
                        "name": "standing",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "description": "Access token to use, if preferred over a header",
                        "in": "query",
                        "name": "token",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "Whether the new contact should be watched, note this is only effective on characters",
                        "in": "query",
                        "name": "watched",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "A list of contact ids that successfully created",
                        "examples": {
                            "application/json": [
                                123,
                                456
                            ]
                        },
                        "schema": {
                            "description": "201 created array",
                            "items": {
                                "description": "201 created integer",
                                "format": "int32",
                                "title": "post_characters_character_id_contacts_201_created",
                                "type": "integer"
                            },
                            "title": "post_characters_character_id_contacts_created",
                            "type": "array"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "examples": {
                            "application/json": {
                                "error": "Token is not valid for scope(s): esi-characters.write_contacts.v1"
                            }
                        },
                        "schema": {
                            "description": "Forbidden",
                            "properties": {
                                "error": {
                                    "description": "Forbidden message",
                                    "title": "post_characters_character_id_contacts_403_forbidden",
                                    "type": "string"
                                }
                            },
                            "title": "post_characters_character_id_contacts_forbidden",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "post_characters_character_id_contacts_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "post_characters_character_id_contacts_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "evesso": [
                            "esi-characters.write_contacts.v1"
                        ]
                    }
                ],
                "summary": "Add contacts",
                "tags": [
                    "Contacts"
                ],
                "x-alternate-versions": [
                    "dev",
                    "latest",
                    "v1"
                ]
            },
            "put": {
                "description": "Bulk edit contacts with same settings\n\n---\n\nAlternate route: `/v1/characters/{character_id}/contacts/`\n\nAlternate route: `/latest/characters/{character_id}/contacts/`\n\nAlternate route: `/dev/characters/{character_id}/contacts/`\n",
                "operationId": "put_characters_character_id_contacts",
                "parameters": [
                    {
                        "description": "ID for a character",
                        "format": "int32",
                        "in": "path",
                        "name": "character_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "A list of contacts to edit",
                        "in": "body",
                        "name": "contact_ids",
                        "required": true,
                        "schema": {
                            "description": "contact_ids array",
                            "items": {
                                "description": "ID of the contact to edit",
                                "format": "int32",
                                "title": "put_characters_character_id_contacts_contact_id",
                                "type": "integer"
                            },
                            "maxItems": 100,
                            "minItems": 1,
                            "title": "put_characters_character_id_contacts_contact_ids",
                            "type": "array"
                        }
                    },
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "default": 0,
                        "description": "Add a custom label to the contact, use 0 for clearing label",
                        "format": "int64",
                        "in": "query",
                        "name": "label_id",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "description": "Standing for the contact",
                        "format": "float",
                        "in": "query",
                        "maximum": 10,
                        "minimum": -10,
                        "name": "standing",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "description": "Access token to use, if preferred over a header",
                        "in": "query",
                        "name": "token",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "Whether the contact should be watched, note this is only effective on characters",
                        "in": "query",
                        "name": "watched",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Contacts updated"
                    },
                    "403": {
                        "description": "Forbidden",
                        "examples": {
                            "application/json": {
                                "error": "Token is not valid for scope(s): esi-characters.write_contacts.v1"
                            }
                        },
                        "schema": {
                            "description": "Forbidden",
                            "properties": {
                                "error": {
                                    "description": "Forbidden message",
                                    "title": "put_characters_character_id_contacts_403_forbidden",
                                    "type": "string"
                                }
                            },
                            "title": "put_characters_character_id_contacts_forbidden",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "put_characters_character_id_contacts_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "put_characters_character_id_contacts_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "evesso": [
                            "esi-characters.write_contacts.v1"
                        ]
                    }
                ],
                "summary": "Edit contacts",
                "tags": [
                    "Contacts"
                ],
                "x-alternate-versions": [
                    "dev",
                    "latest",
                    "v1"
                ]
            }
        },
        "/characters/{character_id}/contacts/labels/": {
            "get": {
                "description": "Return custom labels for contacts the character defined\n\n---\n\nAlternate route: `/v1/characters/{character_id}/contacts/labels/`\n\nAlternate route: `/latest/characters/{character_id}/contacts/labels/`\n\nAlternate route: `/dev/characters/{character_id}/contacts/labels/`\n\n\n---\n\nThis route is cached for up to 300 seconds",
                "operationId": "get_characters_character_id_contacts_labels",
                "parameters": [
                    {
                        "description": "ID for a character",
                        "format": "int32",
                        "in": "path",
                        "name": "character_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "description": "Access token to use, if preferred over a header",
                        "in": "query",
                        "name": "token",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of contact labels",
                        "examples": {
                            "application/json": [
                                {
                                    "label_id": 123,
                                    "label_name": "Friends"
                                }
                            ]
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok array",
                            "items": {
                                "description": "200 ok object",
                                "properties": {
                                    "label_id": {
                                        "description": "label_id integer",
                                        "format": "int64",
                                        "title": "get_characters_character_id_contacts_labels_label_id",
                                        "type": "integer"
                                    },
                                    "label_name": {
                                        "description": "label_name string",
                                        "title": "get_characters_character_id_contacts_labels_label_name",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "label_id",
                                    "label_name"
                                ],
                                "title": "get_characters_character_id_contacts_labels_200_ok",
                                "type": "object"
                            },
                            "title": "get_characters_character_id_contacts_labels_ok",
                            "type": "array"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "examples": {
                            "application/json": {
                                "error": "Token is not valid for scope(s): esi-characters.read_contacts.v1"
                            }
                        },
                        "schema": {
                            "description": "Forbidden",
                            "properties": {
                                "error": {
                                    "description": "Forbidden message",
                                    "title": "get_characters_character_id_contacts_labels_403_forbidden",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_character_id_contacts_labels_forbidden",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_characters_character_id_contacts_labels_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_character_id_contacts_labels_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "evesso": [
                            "esi-characters.read_contacts.v1"
                        ]
                    }
                ],
                "summary": "Get contact labels",
                "tags": [
                    "Contacts"
                ],
                "x-alternate-versions": [
                    "dev",
                    "latest",
                    "v1"
                ],
                "x-cached-seconds": 300
            }
        },
        "/characters/{character_id}/corporationhistory/": {
            "get": {
                "description": "Get a list of all the corporations a character has been a member of\n\n---\n\nAlternate route: `/v1/characters/{character_id}/corporationhistory/`\n\nAlternate route: `/latest/characters/{character_id}/corporationhistory/`\n\nAlternate route: `/dev/characters/{character_id}/corporationhistory/`\n\n\n---\n\nThis route is cached for up to 3600 seconds",
                "operationId": "get_characters_character_id_corporationhistory",
                "parameters": [
                    {
                        "description": "An EVE character ID",
                        "format": "int32",
                        "in": "path",
                        "name": "character_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Corporation history for the given character",
                        "examples": {
                            "application/json": [
                                {
                                    "corporation_id": 90000001,
                                    "is_deleted": false,
                                    "record_id": 500,
                                    "start_date": "2016-06-26T20:00:00Z"
                                },
                                {
                                    "corporation_id": 90000002,
                                    "is_deleted": false,
                                    "record_id": 501,
                                    "start_date": "2016-07-26T20:00:00Z"
                                }
                            ]
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok array",
                            "items": {
                                "description": "200 ok object",
                                "properties": {
                                    "corporation_id": {
                                        "description": "corporation_id integer",
                                        "format": "int32",
                                        "title": "get_characters_character_id_corporationhistory_corporation_id",
                                        "type": "integer"
                                    },
                                    "is_deleted": {
                                        "description": "True if the corporation has been deleted",
                                        "title": "get_characters_character_id_corporationhistory_is_deleted",
                                        "type": "boolean"
                                    },
                                    "record_id": {
                                        "description": "An incrementing ID that can be used to canonically establish order of records in cases where dates may be ambiguous",
                                        "format": "int32",
                                        "title": "get_characters_character_id_corporationhistory_record_id",
                                        "type": "integer"
                                    },
                                    "start_date": {
                                        "description": "start_date string",
                                        "format": "date-time",
                                        "title": "get_characters_character_id_corporationhistory_start_date",
                                        "type": "string"
                                    }
                                },
                                "title": "get_characters_character_id_corporationhistory_200_ok",
                                "type": "object"
                            },
                            "title": "get_characters_character_id_corporationhistory_ok",
                            "type": "array"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_characters_character_id_corporationhistory_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_character_id_corporationhistory_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "summary": "Get corporation history",
                "tags": [
                    "Character"
                ],
                "x-alternate-versions": [
                    "dev",
                    "latest",
                    "v1"
                ],
                "x-cached-seconds": 3600
            }
        },
        "/characters/{character_id}/cspa/": {
            "post": {
                "description": "Takes a source character ID in the url and a set of target character ID's in the body, returns a CSPA charge cost\n\n---\n\nAlternate route: `/v3/characters/{character_id}/cspa/`\n\nAlternate route: `/latest/characters/{character_id}/cspa/`\n\nAlternate route: `/dev/characters/{character_id}/cspa/`\n",
                "operationId": "post_characters_character_id_cspa",
                "parameters": [
                    {
                        "description": "An EVE character ID",
                        "format": "int32",
                        "in": "path",
                        "name": "character_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "The target characters to calculate the charge for",
                        "in": "body",
                        "name": "characters",
                        "required": true,
                        "schema": {
                            "description": "characters schema",
                            "properties": {
                                "characters": {
                                    "description": "characters array",
                                    "items": {
                                        "description": "character integer",
                                        "format": "int32",
                                        "title": "post_characters_character_id_cspa_character",
                                        "type": "integer"
                                    },
                                    "minItems": 1,
                                    "title": "post_characters_character_id_cspa_characters",
                                    "type": "array",
                                    "uniqueItems": true
                                }
                            },
                            "required": [
                                "characters"
                            ],
                            "title": "post_characters_character_id_cspa_characters"
                        }
                    },
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "description": "Access token to use, if preferred over a header",
                        "in": "query",
                        "name": "token",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Aggregate cost of sending a mail from the source character to the target characters, in ISK hundredths",
                        "examples": {
                            "application/json": {
                                "cost": 295000
                            }
                        },
                        "schema": {
                            "description": "201 created object",
                            "properties": {
                                "cost": {
                                    "description": "cost integer",
                                    "format": "int64",
                                    "title": "post_characters_character_id_cspa_cost",
                                    "type": "integer"
                                }
                            },
                            "title": "post_characters_character_id_cspa_created",
                            "type": "object"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "examples": {
                            "application/json": {
                                "error": "Token is not valid for scope(s): esi-characters.read_contacts.v1"
                            }
                        },
                        "schema": {
                            "description": "Forbidden",
                            "properties": {
                                "error": {
                                    "description": "Forbidden message",
                                    "title": "post_characters_character_id_cspa_403_forbidden",
                                    "type": "string"
                                }
                            },
                            "title": "post_characters_character_id_cspa_forbidden",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "post_characters_character_id_cspa_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "post_characters_character_id_cspa_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "evesso": [
                            "esi-characters.read_contacts.v1"
                        ]
                    }
                ],
                "summary": "Calculate a CSPA charge cost",
                "tags": [
                    "Character"
                ],
                "x-alternate-versions": [
                    "dev",
                    "latest",
                    "v3"
                ]
            }
        },
        "/characters/{character_id}/fittings/": {
            "get": {
                "description": "Return fittings of a character\n\n---\n\nAlternate route: `/v1/characters/{character_id}/fittings/`\n\nAlternate route: `/latest/characters/{character_id}/fittings/`\n\nAlternate route: `/dev/characters/{character_id}/fittings/`\n\n\n---\n\nThis route is cached for up to 300 seconds",
                "operationId": "get_characters_character_id_fittings",
                "parameters": [
                    {
                        "description": "ID for a character",
                        "format": "int32",
                        "in": "path",
                        "name": "character_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "description": "Access token to use, if preferred over a header",
                        "in": "query",
                        "name": "token",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of fittings",
                        "examples": {
                            "application/json": [
                                {
                                    "description": "Awesome Vindi fitting",
                                    "fitting_id": 1,
                                    "items": [
                                        {
                                            "flag": 12,
                                            "quantity": 1,
                                            "type_id": 1234
                                        }
                                    ],
                                    "name": "Best Vindicator",
                                    "ship_type_id": 123
                                }
                            ]
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok array",
                            "items": {
                                "description": "200 ok object",
                                "properties": {
                                    "description": {
                                        "description": "description string",
                                        "title": "get_characters_character_id_fittings_description",
                                        "type": "string"
                                    },
                                    "fitting_id": {
                                        "description": "fitting_id integer",
                                        "format": "int32",
                                        "title": "get_characters_character_id_fittings_fitting_id",
                                        "type": "integer"
                                    },
                                    "items": {
                                        "description": "items array",
                                        "items": {
                                            "description": "item object",
                                            "properties": {
                                                "flag": {
                                                    "description": "flag integer",
                                                    "format": "int32",
                                                    "title": "get_characters_character_id_fittings_flag",
                                                    "type": "integer"
                                                },
                                                "quantity": {
                                                    "description": "quantity integer",
                                                    "format": "int32",
                                                    "title": "get_characters_character_id_fittings_quantity",
                                                    "type": "integer"
                                                },
                                                "type_id": {
                                                    "description": "type_id integer",
                                                    "format": "int32",
                                                    "title": "get_characters_character_id_fittings_type_id",
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "type_id",
                                                "flag",
                                                "quantity"
                                            ],
                                            "title": "get_characters_character_id_fittings_item",
                                            "type": "object"
                                        },
                                        "title": "get_characters_character_id_fittings_items",
                                        "type": "array"
                                    },
                                    "name": {
                                        "description": "name string",
                                        "title": "get_characters_character_id_fittings_name",
                                        "type": "string"
                                    },
                                    "ship_type_id": {
                                        "description": "ship_type_id integer",
                                        "format": "int32",
                                        "title": "get_characters_character_id_fittings_ship_type_id",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "fitting_id",
                                    "name",
                                    "description",
                                    "ship_type_id",
                                    "items"
                                ],
                                "title": "get_characters_character_id_fittings_200_ok",
                                "type": "object"
                            },
                            "title": "get_characters_character_id_fittings_ok",
                            "type": "array"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "examples": {
                            "application/json": {
                                "error": "Token is not valid for scope(s): esi-fittings.read_fittings.v1"
                            }
                        },
                        "schema": {
                            "description": "Forbidden",
                            "properties": {
                                "error": {
                                    "description": "Forbidden message",
                                    "title": "get_characters_character_id_fittings_403_forbidden",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_character_id_fittings_forbidden",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_characters_character_id_fittings_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_character_id_fittings_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "evesso": [
                            "esi-fittings.read_fittings.v1"
                        ]
                    }
                ],
                "summary": "Get fittings",
                "tags": [
                    "Fittings"
                ],
                "x-alternate-versions": [
                    "dev",
                    "latest",
                    "v1"
                ],
                "x-cached-seconds": 300
            },
            "post": {
                "description": "Save a new fitting for a character\n\n---\n\nAlternate route: `/v1/characters/{character_id}/fittings/`\n\nAlternate route: `/latest/characters/{character_id}/fittings/`\n\nAlternate route: `/dev/characters/{character_id}/fittings/`\n",
                "operationId": "post_characters_character_id_fittings",
                "parameters": [
                    {
                        "description": "ID for a character",
                        "format": "int32",
                        "in": "path",
                        "name": "character_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "description": "Details about the new fitting",
                        "in": "body",
                        "name": "fitting",
                        "schema": {
                            "description": "fitting object",
                            "properties": {
                                "description": {
                                    "description": "description string",
                                    "maxLength": 500,
                                    "minLength": 0,
                                    "title": "post_characters_character_id_fittings_description",
                                    "type": "string"
                                },
                                "items": {
                                    "description": "items array",
                                    "items": {
                                        "description": "item object",
                                        "properties": {
                                            "flag": {
                                                "description": "flag integer",
                                                "format": "int32",
                                                "title": "post_characters_character_id_fittings_flag",
                                                "type": "integer"
                                            },
                                            "quantity": {
                                                "description": "quantity integer",
                                                "format": "int32",
                                                "title": "post_characters_character_id_fittings_quantity",
                                                "type": "integer"
                                            },
                                            "type_id": {
                                                "description": "type_id integer",
                                                "format": "int32",
                                                "title": "post_characters_character_id_fittings_type_id",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "type_id",
                                            "flag",
                                            "quantity"
                                        ],
                                        "title": "post_characters_character_id_fittings_item",
                                        "type": "object"
                                    },
                                    "maxItems": 255,
                                    "minItems": 1,
                                    "title": "post_characters_character_id_fittings_items",
                                    "type": "array"
                                },
                                "name": {
                                    "description": "name string",
                                    "maxLength": 50,
                                    "minLength": 1,
                                    "title": "post_characters_character_id_fittings_name",
                                    "type": "string"
                                },
                                "ship_type_id": {
                                    "description": "ship_type_id integer",
                                    "format": "int32",
                                    "title": "post_characters_character_id_fittings_ship_type_id",
                                    "type": "integer"
                                }
                            },
                            "required": [
                                "name",
                                "description",
                                "ship_type_id",
                                "items"
                            ],
                            "title": "post_characters_character_id_fittings_fitting",
                            "type": "object"
                        }
                    },
                    {
                        "description": "Access token to use, if preferred over a header",
                        "in": "query",
                        "name": "token",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "A list of fittings",
                        "examples": {
                            "application/json": {
                                "fitting_id": 2
                            }
                        },
                        "schema": {
                            "description": "201 created object",
                            "properties": {
                                "fitting_id": {
                                    "description": "fitting_id integer",
                                    "format": "int32",
                                    "title": "post_characters_character_id_fittings_fitting_id",
                                    "type": "integer"
                                }
                            },
                            "required": [
                                "fitting_id"
                            ],
                            "title": "post_characters_character_id_fittings_created",
                            "type": "object"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "examples": {
                            "application/json": {
                                "error": "Token is not valid for scope(s): esi-fittings.write_fittings.v1"
                            }
                        },
                        "schema": {
                            "description": "Forbidden",
                            "properties": {
                                "error": {
                                    "description": "Forbidden message",
                                    "title": "post_characters_character_id_fittings_403_forbidden",
                                    "type": "string"
                                }
                            },
                            "title": "post_characters_character_id_fittings_forbidden",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "post_characters_character_id_fittings_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "post_characters_character_id_fittings_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "evesso": [
                            "esi-fittings.write_fittings.v1"
                        ]
                    }
                ],
                "summary": "Create fitting",
                "tags": [
                    "Fittings"
                ],
                "x-alternate-versions": [
                    "dev",
                    "latest",
                    "v1"
                ]
            }
        },
        "/characters/{character_id}/fittings/{fitting_id}/": {
            "delete": {
                "description": "Delete a fitting from a character\n\n---\n\nAlternate route: `/v1/characters/{character_id}/fittings/{fitting_id}/`\n\nAlternate route: `/latest/characters/{character_id}/fittings/{fitting_id}/`\n\nAlternate route: `/dev/characters/{character_id}/fittings/{fitting_id}/`\n",
                "operationId": "delete_characters_character_id_fittings_fitting_id",
                "parameters": [
                    {
                        "description": "ID for a character",
                        "format": "int32",
                        "in": "path",
                        "name": "character_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "description": "ID for a fitting of this character",
                        "format": "int32",
                        "in": "path",
                        "name": "fitting_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Access token to use, if preferred over a header",
                        "in": "query",
                        "name": "token",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Fitting deleted"
                    },
                    "403": {
                        "description": "Forbidden",
                        "examples": {
                            "application/json": {
                                "error": "Token is not valid for scope(s): esi-fittings.write_fittings.v1"
                            }
                        },
                        "schema": {
                            "description": "Forbidden",
                            "properties": {
                                "error": {
                                    "description": "Forbidden message",
                                    "title": "delete_characters_character_id_fittings_fitting_id_403_forbidden",
                                    "type": "string"
                                }
                            },
                            "title": "delete_characters_character_id_fittings_fitting_id_forbidden",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "delete_characters_character_id_fittings_fitting_id_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "delete_characters_character_id_fittings_fitting_id_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "evesso": [
                            "esi-fittings.write_fittings.v1"
                        ]
                    }
                ],
                "summary": "Delete fitting",
                "tags": [
                    "Fittings"
                ],
                "x-alternate-versions": [
                    "dev",
                    "latest",
                    "v1"
                ]
            }
        },
        "/characters/{character_id}/industry/jobs/": {
            "get": {
                "description": "List industry jobs placed by a character\n\n---\n\nAlternate route: `/v1/characters/{character_id}/industry/jobs/`\n\nAlternate route: `/latest/characters/{character_id}/industry/jobs/`\n\nAlternate route: `/dev/characters/{character_id}/industry/jobs/`\n\n\n---\n\nThis route is cached for up to 300 seconds",
                "operationId": "get_characters_character_id_industry_jobs",
                "parameters": [
                    {
                        "description": "An EVE character ID",
                        "format": "int32",
                        "in": "path",
                        "name": "character_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "description": "Whether retrieve completed character industry jobs as well",
                        "in": "query",
                        "name": "include_completed",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "Access token to use, if preferred over a header",
                        "in": "query",
                        "name": "token",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Industry jobs placed by a character",
                        "examples": {
                            "application/json": [
                                {
                                    "activity_id": 1,
                                    "blueprint_id": 1015116533326,
                                    "blueprint_location_id": 60006382,
                                    "blueprint_type_id": 2047,
                                    "cost": 118.0,
                                    "duration": 548,
                                    "end_date": "2014-07-19T15:56:14Z",
                                    "facility_id": 60006382,
                                    "installer_id": 498338451,
                                    "job_id": 229136101,
                                    "licensed_runs": 200,
                                    "output_location_id": 60006382,
                                    "runs": 1,
                                    "start_date": "2014-07-19T15:47:06Z",
                                    "station_id": 60006382,
                                    "status": "active"
                                }
                            ]
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok array",
                            "items": {
                                "description": "200 ok object",
                                "properties": {
                                    "activity_id": {
                                        "description": "Job activity ID",
                                        "format": "int32",
                                        "title": "get_characters_character_id_industry_jobs_activity_id",
                                        "type": "integer"
                                    },
                                    "blueprint_id": {
                                        "description": "blueprint_id integer",
                                        "format": "int64",
                                        "title": "get_characters_character_id_industry_jobs_blueprint_id",
                                        "type": "integer"
                                    },
                                    "blueprint_location_id": {
                                        "description": "Location ID of the location from which the blueprint was installed. Normally a station ID, but can also be an asset (e.g. container) or corporation facility",
                                        "format": "int64",
                                        "title": "get_characters_character_id_industry_jobs_blueprint_location_id",
                                        "type": "integer"
                                    },
                                    "blueprint_type_id": {
                                        "description": "blueprint_type_id integer",
                                        "format": "int32",
                                        "title": "get_characters_character_id_industry_jobs_blueprint_type_id",
                                        "type": "integer"
                                    },
                                    "completed_character_id": {
                                        "description": "ID of the character which completed this job",
                                        "format": "int32",
                                        "title": "get_characters_character_id_industry_jobs_completed_character_id",
                                        "type": "integer"
                                    },
                                    "completed_date": {
                                        "description": "Date and time when this job was completed",
                                        "format": "date-time",
                                        "title": "get_characters_character_id_industry_jobs_completed_date",
                                        "type": "string"
                                    },
                                    "cost": {
                                        "description": "The sume of job installation fee and industry facility tax",
                                        "format": "float",
                                        "title": "get_characters_character_id_industry_jobs_cost",
                                        "type": "number"
                                    },
                                    "duration": {
                                        "description": "Job duration in seconds",
                                        "format": "int32",
                                        "title": "get_characters_character_id_industry_jobs_duration",
                                        "type": "integer"
                                    },
                                    "end_date": {
                                        "description": "Date and time when this job finished",
                                        "format": "date-time",
                                        "title": "get_characters_character_id_industry_jobs_end_date",
                                        "type": "string"
                                    },
                                    "facility_id": {
                                        "description": "ID of the facility where this job is running",
                                        "format": "int64",
                                        "title": "get_characters_character_id_industry_jobs_facility_id",
                                        "type": "integer"
                                    },
                                    "installer_id": {
                                        "description": "ID of the character which installed this job",
                                        "format": "int32",
                                        "title": "get_characters_character_id_industry_jobs_installer_id",
                                        "type": "integer"
                                    },
                                    "job_id": {
                                        "description": "Unique job ID",
                                        "format": "int32",
                                        "title": "get_characters_character_id_industry_jobs_job_id",
                                        "type": "integer"
                                    },
                                    "licensed_runs": {
                                        "description": "Number of runs blueprint is licensed for",
                                        "format": "int32",
                                        "title": "get_characters_character_id_industry_jobs_licensed_runs",
                                        "type": "integer"
                                    },
                                    "output_location_id": {
                                        "description": "Location ID of the location to which the output of the job will be delivered. Normally a station ID, but can also be a corporation facility",
                                        "format": "int64",
                                        "title": "get_characters_character_id_industry_jobs_output_location_id",
                                        "type": "integer"
                                    },
                                    "pause_date": {
                                        "description": "Date and time when this job was paused (i.e. time when the facility where this job was installed went offline)",
                                        "format": "date-time",
                                        "title": "get_characters_character_id_industry_jobs_pause_date",
                                        "type": "string"
                                    },
                                    "probability": {
                                        "description": "Chance of success for invention",
                                        "format": "float",
                                        "title": "get_characters_character_id_industry_jobs_probability",
                                        "type": "number"
                                    },
                                    "product_type_id": {
                                        "description": "Type ID of product (manufactured, copied or invented)",
                                        "format": "int32",
                                        "title": "get_characters_character_id_industry_jobs_product_type_id",
                                        "type": "integer"
                                    },
                                    "runs": {
                                        "description": "Number of runs for a manufacturing job, or number of copies to make for a blueprint copy",
                                        "format": "int32",
                                        "title": "get_characters_character_id_industry_jobs_runs",
                                        "type": "integer"
                                    },
                                    "start_date": {
                                        "description": "Date and time when this job started",
                                        "format": "date-time",
                                        "title": "get_characters_character_id_industry_jobs_start_date",
                                        "type": "string"
                                    },
                                    "station_id": {
                                        "description": "ID of the station where industry facility is located",
                                        "format": "int64",
                                        "title": "get_characters_character_id_industry_jobs_station_id",
                                        "type": "integer"
                                    },
                                    "status": {
                                        "description": "status string",
                                        "enum": [
                                            "active",
                                            "paused",
                                            "ready",
                                            "delivered",
                                            "cancelled",
                                            "reverted"
                                        ],
                                        "title": "get_characters_character_id_industry_jobs_status",
                                        "type": "string"
                                    },
                                    "successful_runs": {
                                        "description": "Number of successful runs for this job. Equal to runs unless this is an invention job",
                                        "format": "int32",
                                        "title": "get_characters_character_id_industry_jobs_successful_runs",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "job_id",
                                    "installer_id",
                                    "facility_id",
                                    "station_id",
                                    "activity_id",
                                    "blueprint_id",
                                    "blueprint_type_id",
                                    "blueprint_location_id",
                                    "output_location_id",
                                    "runs",
                                    "status",
                                    "duration",
                                    "start_date",
                                    "end_date"
                                ],
                                "title": "get_characters_character_id_industry_jobs_200_ok",
                                "type": "object"
                            },
                            "title": "get_characters_character_id_industry_jobs_ok",
                            "type": "array"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "examples": {
                            "application/json": {
                                "error": "Token is not valid for scope(s): esi-industry.read_character_jobs.v1"
                            }
                        },
                        "schema": {
                            "description": "Forbidden",
                            "properties": {
                                "error": {
                                    "description": "Forbidden message",
                                    "title": "get_characters_character_id_industry_jobs_403_forbidden",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_character_id_industry_jobs_forbidden",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_characters_character_id_industry_jobs_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_character_id_industry_jobs_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "evesso": [
                            "esi-industry.read_character_jobs.v1"
                        ]
                    }
                ],
                "summary": "List character industry jobs",
                "tags": [
                    "Industry"
                ],
                "x-alternate-versions": [
                    "dev",
                    "latest",
                    "v1"
                ],
                "x-cached-seconds": 300
            }
        },
        "/characters/{character_id}/killmails/recent/": {
            "get": {
                "description": "Return a list of character's recent kills and losses\n\n---\n\nAlternate route: `/v1/characters/{character_id}/killmails/recent/`\n\nAlternate route: `/latest/characters/{character_id}/killmails/recent/`\n\nAlternate route: `/dev/characters/{character_id}/killmails/recent/`\n\n\n---\n\nThis route is cached for up to 120 seconds",
                "operationId": "get_characters_character_id_killmails_recent",
                "parameters": [
                    {
                        "description": "An EVE character ID",
                        "format": "int32",
                        "in": "path",
                        "name": "character_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "default": 50,
                        "description": "How many killmails to return at maximum",
                        "format": "int32",
                        "in": "query",
                        "maximum": 5000,
                        "name": "max_count",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "description": "Only return killmails with ID smaller than this.\n",
                        "format": "int32",
                        "in": "query",
                        "name": "max_kill_id",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "description": "Access token to use, if preferred over a header",
                        "in": "query",
                        "name": "token",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of killmail IDs and hashes",
                        "examples": {
                            "application/json": [
                                {
                                    "killmail_hash": "8eef5e8fb6b88fe3407c489df33822b2e3b57a5e",
                                    "killmail_id": 2
                                },
                                {
                                    "killmail_hash": "b41ccb498ece33d64019f64c0db392aa3aa701fb",
                                    "killmail_id": 1
                                }
                            ]
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok array",
                            "items": {
                                "description": "200 ok object",
                                "properties": {
                                    "killmail_hash": {
                                        "description": "A hash of this killmail",
                                        "title": "get_characters_character_id_killmails_recent_killmail_hash",
                                        "type": "string"
                                    },
                                    "killmail_id": {
                                        "description": "ID of this killmail",
                                        "format": "int32",
                                        "title": "get_characters_character_id_killmails_recent_killmail_id",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "killmail_id",
                                    "killmail_hash"
                                ],
                                "title": "get_characters_character_id_killmails_recent_200_ok",
                                "type": "object"
                            },
                            "title": "get_characters_character_id_killmails_recent_ok",
                            "type": "array"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "examples": {
                            "application/json": {
                                "error": "Token is not valid for scope(s): esi-killmails.read_killmails.v1"
                            }
                        },
                        "schema": {
                            "description": "Forbidden",
                            "properties": {
                                "error": {
                                    "description": "Forbidden message",
                                    "title": "get_characters_character_id_killmails_recent_403_forbidden",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_character_id_killmails_recent_forbidden",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_characters_character_id_killmails_recent_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_character_id_killmails_recent_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "evesso": [
                            "esi-killmails.read_killmails.v1"
                        ]
                    }
                ],
                "summary": "List kills and losses",
                "tags": [
                    "Killmails"
                ],
                "x-alternate-versions": [
                    "dev",
                    "latest",
                    "v1"
                ],
                "x-cached-seconds": 120
            }
        },
        "/characters/{character_id}/loyalty/points/": {
            "get": {
                "description": "Return a list of loyalty points for all corporations the character has worked for\n\n---\n\nAlternate route: `/v1/characters/{character_id}/loyalty/points/`\n\nAlternate route: `/latest/characters/{character_id}/loyalty/points/`\n\nAlternate route: `/dev/characters/{character_id}/loyalty/points/`\n",
                "operationId": "get_characters_character_id_loyalty_points",
                "parameters": [
                    {
                        "description": "ID for a character",
                        "format": "int32",
                        "in": "path",
                        "name": "character_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "description": "Access token to use, if preferred over a header",
                        "in": "query",
                        "name": "token",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of loyalty points",
                        "examples": {
                            "application/json": [
                                {
                                    "corporation_id": 123,
                                    "loyalty_points": 100
                                }
                            ]
                        },
                        "schema": {
                            "description": "200 ok array",
                            "items": {
                                "description": "200 ok object",
                                "properties": {
                                    "corporation_id": {
                                        "description": "corporation_id integer",
                                        "format": "int32",
                                        "title": "get_characters_character_id_loyalty_points_corporation_id",
                                        "type": "integer"
                                    },
                                    "loyalty_points": {
                                        "description": "loyalty_points integer",
                                        "format": "int32",
                                        "title": "get_characters_character_id_loyalty_points_loyalty_points",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "corporation_id",
                                    "loyalty_points"
                                ],
                                "title": "get_characters_character_id_loyalty_points_200_ok",
                                "type": "object"
                            },
                            "title": "get_characters_character_id_loyalty_points_ok",
                            "type": "array"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "examples": {
                            "application/json": {
                                "error": "Token is not valid for scope(s): esi-characters.read_loyalty.v1"
                            }
                        },
                        "schema": {
                            "description": "Forbidden",
                            "properties": {
                                "error": {
                                    "description": "Forbidden message",
                                    "title": "get_characters_character_id_loyalty_points_403_forbidden",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_character_id_loyalty_points_forbidden",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_characters_character_id_loyalty_points_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_character_id_loyalty_points_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "evesso": [
                            "esi-characters.read_loyalty.v1"
                        ]
                    }
                ],
                "summary": "Get loyalty points",
                "tags": [
                    "Loyalty"
                ],
                "x-alternate-versions": [
                    "dev",
                    "latest",
                    "v1"
                ]
            }
        },
        "/characters/{character_id}/mail/": {
            "get": {
                "description": "Return the 50 most recent mail headers belonging to the character that match the query criteria. Queries can be filtered by label, and last_mail_id can be used to paginate backwards.\n\n---\n\nAlternate route: `/v1/characters/{character_id}/mail/`\n\nAlternate route: `/latest/characters/{character_id}/mail/`\n\nAlternate route: `/dev/characters/{character_id}/mail/`\n\n\n---\n\nThis route is cached for up to 30 seconds",
                "operationId": "get_characters_character_id_mail",
                "parameters": [
                    {
                        "description": "An EVE character ID",
                        "format": "int32",
                        "in": "path",
                        "name": "character_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "description": "Fetch only mails that match one or more of the given labels",
                        "in": "query",
                        "items": {
                            "format": "int64",
                            "minimum": 0,
                            "type": "integer"
                        },
                        "minItems": 1,
                        "name": "labels",
                        "required": false,
                        "type": "array",
                        "uniqueItems": true
                    },
                    {
                        "description": "List only mail with an ID lower than the given ID, if present",
                        "format": "int32",
                        "in": "query",
                        "name": "last_mail_id",
                        "type": "integer"
                    },
                    {
                        "description": "Access token to use, if preferred over a header",
                        "in": "query",
                        "name": "token",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The requested mail",
                        "examples": {
                            "application/json": [
                                {
                                    "from": 90000001,
                                    "is_read": true,
                                    "labels": [
                                        3
                                    ],
                                    "mail_id": 7,
                                    "recipients": [
                                        {
                                            "recipient_id": 90000002,
                                            "recipient_type": "character"
                                        }
                                    ],
                                    "subject": "Title for EVE Mail",
                                    "timestamp": "2015-09-30T16:07:00Z"
                                }
                            ]
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok array",
                            "items": {
                                "description": "200 ok object",
                                "properties": {
                                    "from": {
                                        "description": "From whom the mail was sent",
                                        "format": "int32",
                                        "title": "get_characters_character_id_mail_from",
                                        "type": "integer"
                                    },
                                    "is_read": {
                                        "description": "is_read boolean",
                                        "title": "get_characters_character_id_mail_is_read",
                                        "type": "boolean"
                                    },
                                    "labels": {
                                        "description": "labels array",
                                        "items": {
                                            "description": "label integer",
                                            "format": "int64",
                                            "title": "get_characters_character_id_mail_label",
                                            "type": "integer"
                                        },
                                        "maxItems": 25,
                                        "minimum": 0,
                                        "title": "get_characters_character_id_mail_labels",
                                        "type": "array",
                                        "uniqueItems": true
                                    },
                                    "mail_id": {
                                        "description": "mail_id integer",
                                        "format": "int64",
                                        "title": "get_characters_character_id_mail_mail_id",
                                        "type": "integer"
                                    },
                                    "recipients": {
                                        "description": "Recipients of the mail",
                                        "items": {
                                            "description": "recipient object",
                                            "properties": {
                                                "recipient_id": {
                                                    "description": "recipient_id integer",
                                                    "format": "int32",
                                                    "title": "get_characters_character_id_mail_recipient_id",
                                                    "type": "integer"
                                                },
                                                "recipient_type": {
                                                    "description": "recipient_type string",
                                                    "enum": [
                                                        "alliance",
                                                        "character",
                                                        "corporation",
                                                        "mailing_list"
                                                    ],
                                                    "title": "get_characters_character_id_mail_recipient_type",
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "recipient_type",
                                                "recipient_id"
                                            ],
                                            "title": "get_characters_character_id_mail_recipient",
                                            "type": "object"
                                        },
                                        "maxItems": 50,
                                        "minItems": 1,
                                        "title": "get_characters_character_id_mail_recipients",
                                        "type": "array",
                                        "uniqueItems": true
                                    },
                                    "subject": {
                                        "description": "Mail subject",
                                        "title": "get_characters_character_id_mail_subject",
                                        "type": "string"
                                    },
                                    "timestamp": {
                                        "description": "When the mail was sent",
                                        "format": "date-time",
                                        "title": "get_characters_character_id_mail_timestamp",
                                        "type": "string"
                                    }
                                },
                                "title": "get_characters_character_id_mail_200_ok",
                                "type": "object"
                            },
                            "title": "get_characters_character_id_mail_ok",
                            "type": "array"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "examples": {
                            "application/json": {
                                "error": "Token is not valid for scope(s): esi-mail.read_mail.v1"
                            }
                        },
                        "schema": {
                            "description": "Forbidden",
                            "properties": {
                                "error": {
                                    "description": "Forbidden message",
                                    "title": "get_characters_character_id_mail_403_forbidden",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_character_id_mail_forbidden",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_characters_character_id_mail_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_character_id_mail_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "evesso": [
                            "esi-mail.read_mail.v1"
                        ]
                    }
                ],
                "summary": "Return mail headers",
                "tags": [
                    "Mail"
                ],
                "x-alternate-versions": [
                    "dev",
                    "latest",
                    "v1"
                ],
                "x-cached-seconds": 30
            },
            "post": {
                "description": "Create and send a new mail\n\n---\n\nAlternate route: `/v1/characters/{character_id}/mail/`\n\nAlternate route: `/latest/characters/{character_id}/mail/`\n\nAlternate route: `/dev/characters/{character_id}/mail/`\n",
                "operationId": "post_characters_character_id_mail",
                "parameters": [
                    {
                        "description": "The sender's character ID",
                        "format": "int32",
                        "in": "path",
                        "name": "character_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "description": "The mail to send",
                        "in": "body",
                        "name": "mail",
                        "required": true,
                        "schema": {
                            "description": "mail schema",
                            "properties": {
                                "approved_cost": {
                                    "default": 0,
                                    "description": "approved_cost integer",
                                    "format": "int64",
                                    "title": "post_characters_character_id_mail_approved_cost",
                                    "type": "integer"
                                },
                                "body": {
                                    "description": "body string",
                                    "maxLength": 10000,
                                    "title": "post_characters_character_id_mail_body",
                                    "type": "string"
                                },
                                "recipients": {
                                    "description": "recipients array",
                                    "items": {
                                        "description": "recipient object",
                                        "properties": {
                                            "recipient_id": {
                                                "description": "recipient_id integer",
                                                "format": "int32",
                                                "title": "post_characters_character_id_mail_recipient_id",
                                                "type": "integer"
                                            },
                                            "recipient_type": {
                                                "description": "recipient_type string",
                                                "enum": [
                                                    "alliance",
                                                    "character",
                                                    "corporation",
                                                    "mailing_list"
                                                ],
                                                "title": "post_characters_character_id_mail_recipient_type",
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "recipient_type",
                                            "recipient_id"
                                        ],
                                        "title": "post_characters_character_id_mail_recipient",
                                        "type": "object"
                                    },
                                    "maxItems": 50,
                                    "minItems": 1,
                                    "title": "post_characters_character_id_mail_recipients",
                                    "type": "array"
                                },
                                "subject": {
                                    "description": "subject string",
                                    "maxLength": 1000,
                                    "title": "post_characters_character_id_mail_subject",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "recipients",
                                "subject",
                                "body"
                            ],
                            "title": "post_characters_character_id_mail_mail"
                        }
                    },
                    {
                        "description": "Access token to use, if preferred over a header",
                        "in": "query",
                        "name": "token",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Mail created",
                        "examples": {
                            "application/json": 13
                        },
                        "schema": {
                            "description": "Mail ID",
                            "format": "int32",
                            "title": "post_characters_character_id_mail_created",
                            "type": "integer"
                        }
                    },
                    "400": {
                        "description": "Only one corporation, alliance, or mailing list can be the\nrecipient of a mail\n",
                        "examples": {
                            "application/json": {
                                "error": "Bad request message"
                            }
                        },
                        "schema": {
                            "description": "Bad request",
                            "properties": {
                                "error": {
                                    "description": "Bad request message",
                                    "title": "post_characters_character_id_mail_400_bad_request",
                                    "type": "string"
                                }
                            },
                            "title": "post_characters_character_id_mail_bad_request",
                            "type": "object"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "examples": {
                            "application/json": {
                                "error": "Token is not valid for scope(s): esi-mail.send_mail.v1"
                            }
                        },
                        "schema": {
                            "description": "Forbidden",
                            "properties": {
                                "error": {
                                    "description": "Forbidden message",
                                    "title": "post_characters_character_id_mail_403_forbidden",
                                    "type": "string"
                                }
                            },
                            "title": "post_characters_character_id_mail_forbidden",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "post_characters_character_id_mail_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "post_characters_character_id_mail_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "evesso": [
                            "esi-mail.send_mail.v1"
                        ]
                    }
                ],
                "summary": "Send a new mail",
                "tags": [
                    "Mail"
                ],
                "x-alternate-versions": [
                    "dev",
                    "latest",
                    "v1"
                ]
            }
        },
        "/characters/{character_id}/mail/labels/": {
            "get": {
                "deprecated": true,
                "description": "Return a list of the users mail labels\n\n---\n\nAlternate route: `/v2/characters/{character_id}/mail/labels/`\n\n\n---\n\nThis route is cached for up to 30 seconds",
                "operationId": "get_characters_character_id_mail_labels",
                "parameters": [
                    {
                        "description": "An EVE character ID",
                        "format": "int32",
                        "in": "path",
                        "name": "character_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "description": "Access token to use, if preferred over a header",
                        "in": "query",
                        "name": "token",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of mail labels",
                        "examples": {
                            "application/json": [
                                {
                                    "color": "#660066",
                                    "label_id": 16,
                                    "name": "PINK"
                                }
                            ]
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok array",
                            "items": {
                                "description": "200 ok object",
                                "properties": {
                                    "color": {
                                        "default": "#ffffff",
                                        "description": "color string",
                                        "enum": [
                                            "#ffffff",
                                            "#ffff01",
                                            "#ff6600",
                                            "#fe0000",
                                            "#9a0000",
                                            "#660066",
                                            "#0000fe",
                                            "#0099ff",
                                            "#01ffff",
                                            "#00ff33",
                                            "#349800",
                                            "#006634",
                                            "#666666",
                                            "#999999",
                                            "#e6e6e6",
                                            "#ffffcd",
                                            "#99ffff",
                                            "#ccff9a"
                                        ],
                                        "title": "get_characters_character_id_mail_labels_color",
                                        "type": "string"
                                    },
                                    "label_id": {
                                        "description": "label_id integer",
                                        "format": "int32",
                                        "minimum": 0,
                                        "title": "get_characters_character_id_mail_labels_label_id",
                                        "type": "integer"
                                    },
                                    "name": {
                                        "description": "name string",
                                        "maxLength": 40,
                                        "title": "get_characters_character_id_mail_labels_name",
                                        "type": "string"
                                    }
                                },
                                "title": "get_characters_character_id_mail_labels_200_ok",
                                "type": "object"
                            },
                            "title": "get_characters_character_id_mail_labels_ok",
                            "type": "array"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "examples": {
                            "application/json": {
                                "error": "Token is not valid for scope(s): esi-mail.read_mail.v1"
                            }
                        },
                        "schema": {
                            "description": "Forbidden",
                            "properties": {
                                "error": {
                                    "description": "Forbidden message",
                                    "title": "get_characters_character_id_mail_labels_403_forbidden",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_character_id_mail_labels_forbidden",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_characters_character_id_mail_labels_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_character_id_mail_labels_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "evesso": [
                            "esi-mail.read_mail.v1"
                        ]
                    }
                ],
                "summary": "Get mail labels",
                "tags": [
                    "Mail"
                ],
                "x-alternate-versions": [
                    "v2"
                ],
                "x-cached-seconds": 30
            },
            "post": {
                "description": "Create a mail label\n\n---\n\nAlternate route: `/v2/characters/{character_id}/mail/labels/`\n\nAlternate route: `/latest/characters/{character_id}/mail/labels/`\n\nAlternate route: `/dev/characters/{character_id}/mail/labels/`\n",
                "operationId": "post_characters_character_id_mail_labels",
                "parameters": [
                    {
                        "description": "An EVE character ID",
                        "format": "int32",
                        "in": "path",
                        "name": "character_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "description": "Label to create",
                        "in": "body",
                        "name": "label",
                        "schema": {
                            "description": "label object",
                            "properties": {
                                "color": {
                                    "default": "#ffffff",
                                    "description": "Hexadecimal string representing label color,\nin RGB format\n",
                                    "enum": [
                                        "#ffffff",
                                        "#ffff01",
                                        "#ff6600",
                                        "#fe0000",
                                        "#9a0000",
                                        "#660066",
                                        "#0000fe",
                                        "#0099ff",
                                        "#01ffff",
                                        "#00ff33",
                                        "#349800",
                                        "#006634",
                                        "#666666",
                                        "#999999",
                                        "#e6e6e6",
                                        "#ffffcd",
                                        "#99ffff",
                                        "#ccff9a"
                                    ],
                                    "title": "post_characters_character_id_mail_labels_color",
                                    "type": "string"
                                },
                                "name": {
                                    "description": "name string",
                                    "maxLength": 40,
                                    "minLength": 1,
                                    "title": "post_characters_character_id_mail_labels_name",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "name"
                            ],
                            "title": "post_characters_character_id_mail_labels_label",
                            "type": "object"
                        }
                    },
                    {
                        "description": "Access token to use, if preferred over a header",
                        "in": "query",
                        "name": "token",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Label created",
                        "examples": {
                            "application/json": 128
                        },
                        "schema": {
                            "description": "Label ID",
                            "format": "int64",
                            "title": "post_characters_character_id_mail_labels_created",
                            "type": "integer"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "examples": {
                            "application/json": {
                                "error": "Token is not valid for scope(s): esi-mail.organize_mail.v1"
                            }
                        },
                        "schema": {
                            "description": "Forbidden",
                            "properties": {
                                "error": {
                                    "description": "Forbidden message",
                                    "title": "post_characters_character_id_mail_labels_403_forbidden",
                                    "type": "string"
                                }
                            },
                            "title": "post_characters_character_id_mail_labels_forbidden",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "post_characters_character_id_mail_labels_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "post_characters_character_id_mail_labels_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "evesso": [
                            "esi-mail.organize_mail.v1"
                        ]
                    }
                ],
                "summary": "Create a mail label",
                "tags": [
                    "Mail"
                ],
                "x-alternate-versions": [
                    "dev",
                    "latest",
                    "v2"
                ]
            }
        },
        "/characters/{character_id}/mail/labels/{label_id}/": {
            "delete": {
                "description": "Delete a mail label\n\n---\n\nAlternate route: `/v1/characters/{character_id}/mail/labels/{label_id}/`\n\nAlternate route: `/latest/characters/{character_id}/mail/labels/{label_id}/`\n\nAlternate route: `/dev/characters/{character_id}/mail/labels/{label_id}/`\n",
                "operationId": "delete_characters_character_id_mail_labels_label_id",
                "parameters": [
                    {
                        "description": "An EVE character ID",
                        "format": "int32",
                        "in": "path",
                        "name": "character_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "description": "An EVE label id",
                        "format": "int32",
                        "in": "path",
                        "name": "label_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Access token to use, if preferred over a header",
                        "in": "query",
                        "name": "token",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Label deleted"
                    },
                    "403": {
                        "description": "Forbidden",
                        "examples": {
                            "application/json": {
                                "error": "Token is not valid for scope(s): esi-mail.organize_mail.v1"
                            }
                        },
                        "schema": {
                            "description": "Forbidden",
                            "properties": {
                                "error": {
                                    "description": "Forbidden message",
                                    "title": "delete_characters_character_id_mail_labels_label_id_403_forbidden",
                                    "type": "string"
                                }
                            },
                            "title": "delete_characters_character_id_mail_labels_label_id_forbidden",
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Default labels cannot be deleted",
                        "examples": {
                            "application/json": {
                                "error": "Unprocessable entity message"
                            }
                        },
                        "schema": {
                            "description": "Unprocessable entity",
                            "properties": {
                                "error": {
                                    "description": "Unprocessable entity message",
                                    "title": "delete_characters_character_id_mail_labels_label_id_422_unprocessable_entity",
                                    "type": "string"
                                }
                            },
                            "title": "delete_characters_character_id_mail_labels_label_id_unprocessable_entity",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "delete_characters_character_id_mail_labels_label_id_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "delete_characters_character_id_mail_labels_label_id_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "evesso": [
                            "esi-mail.organize_mail.v1"
                        ]
                    }
                ],
                "summary": "Delete a mail label",
                "tags": [
                    "Mail"
                ],
                "x-alternate-versions": [
                    "dev",
                    "latest",
                    "v1"
                ]
            }
        },
        "/characters/{character_id}/mail/lists/": {
            "get": {
                "description": "Return all mailing lists that the character is subscribed to\n\n\n---\n\nAlternate route: `/v1/characters/{character_id}/mail/lists/`\n\nAlternate route: `/latest/characters/{character_id}/mail/lists/`\n\nAlternate route: `/dev/characters/{character_id}/mail/lists/`\n\n\n---\n\nThis route is cached for up to 120 seconds",
                "operationId": "get_characters_character_id_mail_lists",
                "parameters": [
                    {
                        "description": "An EVE character ID",
                        "format": "int32",
                        "in": "path",
                        "name": "character_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "description": "Access token to use, if preferred over a header",
                        "in": "query",
                        "name": "token",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Mailing lists",
                        "examples": {
                            "application/json": [
                                {
                                    "mailing_list_id": 1,
                                    "name": "test_mailing_list"
                                }
                            ]
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok array",
                            "items": {
                                "description": "200 ok object",
                                "properties": {
                                    "mailing_list_id": {
                                        "description": "Mailing list ID",
                                        "format": "int32",
                                        "title": "get_characters_character_id_mail_lists_mailing_list_id",
                                        "type": "integer"
                                    },
                                    "name": {
                                        "description": "name string",
                                        "title": "get_characters_character_id_mail_lists_name",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "mailing_list_id",
                                    "name"
                                ],
                                "title": "get_characters_character_id_mail_lists_200_ok",
                                "type": "object"
                            },
                            "title": "get_characters_character_id_mail_lists_ok",
                            "type": "array"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "examples": {
                            "application/json": {
                                "error": "Token is not valid for scope(s): esi-mail.read_mail.v1"
                            }
                        },
                        "schema": {
                            "description": "Forbidden",
                            "properties": {
                                "error": {
                                    "description": "Forbidden message",
                                    "title": "get_characters_character_id_mail_lists_403_forbidden",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_character_id_mail_lists_forbidden",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_characters_character_id_mail_lists_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_character_id_mail_lists_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "evesso": [
                            "esi-mail.read_mail.v1"
                        ]
                    }
                ],
                "summary": "Return mailing list subscriptions",
                "tags": [
                    "Mail"
                ],
                "x-alternate-versions": [
                    "dev",
                    "latest",
                    "v1"
                ],
                "x-cached-seconds": 120
            }
        },
        "/characters/{character_id}/mail/unread/": {
            "get": {
                "deprecated": true,
                "description": "Return the number of unread mails for the character\n\n\n---\n\nAlternate route: `/v1/characters/{character_id}/mail/unread/`\n\n\n---\n\nThis route is cached for up to 5 seconds",
                "operationId": "get_characters_character_id_mail_unread",
                "parameters": [
                    {
                        "description": "An EVE character ID",
                        "format": "int32",
                        "in": "path",
                        "name": "character_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "description": "Access token to use, if preferred over a header",
                        "in": "query",
                        "name": "token",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Unread mail count",
                        "examples": {
                            "application/json": 5
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok integer",
                            "format": "int32",
                            "minimum": 0,
                            "title": "get_characters_character_id_mail_unread_ok",
                            "type": "integer"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "examples": {
                            "application/json": {
                                "error": "Token is not valid for scope(s): esi-mail.read_mail.v1"
                            }
                        },
                        "schema": {
                            "description": "Forbidden",
                            "properties": {
                                "error": {
                                    "description": "Forbidden message",
                                    "title": "get_characters_character_id_mail_unread_403_forbidden",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_character_id_mail_unread_forbidden",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_characters_character_id_mail_unread_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_character_id_mail_unread_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "evesso": [
                            "esi-mail.read_mail.v1"
                        ]
                    }
                ],
                "summary": "Return the number of unread mails",
                "tags": [
                    "Mail"
                ],
                "x-alternate-versions": [
                    "v1"
                ],
                "x-cached-seconds": 5
            }
        },
        "/characters/{character_id}/mail/{mail_id}/": {
            "delete": {
                "description": "Delete a mail\n\n---\n\nAlternate route: `/v1/characters/{character_id}/mail/{mail_id}/`\n\nAlternate route: `/latest/characters/{character_id}/mail/{mail_id}/`\n\nAlternate route: `/dev/characters/{character_id}/mail/{mail_id}/`\n",
                "operationId": "delete_characters_character_id_mail_mail_id",
                "parameters": [
                    {
                        "description": "An EVE character ID",
                        "format": "int32",
                        "in": "path",
                        "name": "character_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "description": "An EVE mail ID",
                        "format": "int32",
                        "in": "path",
                        "name": "mail_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Access token to use, if preferred over a header",
                        "in": "query",
                        "name": "token",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Mail deleted"
                    },
                    "403": {
                        "description": "Forbidden",
                        "examples": {
                            "application/json": {
                                "error": "Token is not valid for scope(s): esi-mail.organize_mail.v1"
                            }
                        },
                        "schema": {
                            "description": "Forbidden",
                            "properties": {
                                "error": {
                                    "description": "Forbidden message",
                                    "title": "delete_characters_character_id_mail_mail_id_403_forbidden",
                                    "type": "string"
                                }
                            },
                            "title": "delete_characters_character_id_mail_mail_id_forbidden",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "delete_characters_character_id_mail_mail_id_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "delete_characters_character_id_mail_mail_id_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "evesso": [
                            "esi-mail.organize_mail.v1"
                        ]
                    }
                ],
                "summary": "Delete a mail",
                "tags": [
                    "Mail"
                ],
                "x-alternate-versions": [
                    "dev",
                    "latest",
                    "v1"
                ]
            },
            "get": {
                "description": "Return the contents of an EVE mail\n\n---\n\nAlternate route: `/v1/characters/{character_id}/mail/{mail_id}/`\n\nAlternate route: `/latest/characters/{character_id}/mail/{mail_id}/`\n\nAlternate route: `/dev/characters/{character_id}/mail/{mail_id}/`\n\n\n---\n\nThis route is cached for up to 30 seconds",
                "operationId": "get_characters_character_id_mail_mail_id",
                "parameters": [
                    {
                        "description": "An EVE character ID",
                        "format": "int32",
                        "in": "path",
                        "name": "character_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "description": "An EVE mail ID",
                        "format": "int32",
                        "in": "path",
                        "name": "mail_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Access token to use, if preferred over a header",
                        "in": "query",
                        "name": "token",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Contents of a mail",
                        "examples": {
                            "application/json": {
                                "body": "blah blah blah",
                                "from": 90000001,
                                "labels": [
                                    2,
                                    32
                                ],
                                "read": false,
                                "subject": "test",
                                "timestamp": "2015-09-30T16:07:00Z"
                            }
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok object",
                            "properties": {
                                "body": {
                                    "description": "Mail's body",
                                    "title": "get_characters_character_id_mail_mail_id_body",
                                    "type": "string"
                                },
                                "from": {
                                    "description": "From whom the mail was sent",
                                    "format": "int32",
                                    "title": "get_characters_character_id_mail_mail_id_from",
                                    "type": "integer"
                                },
                                "labels": {
                                    "description": "Labels attached to the mail",
                                    "items": {
                                        "description": "label integer",
                                        "format": "int64",
                                        "minimum": 0,
                                        "title": "get_characters_character_id_mail_mail_id_label",
                                        "type": "integer",
                                        "uniqueItems": true
                                    },
                                    "title": "get_characters_character_id_mail_mail_id_labels",
                                    "type": "array"
                                },
                                "read": {
                                    "description": "Whether the mail is flagged as read",
                                    "title": "get_characters_character_id_mail_mail_id_read",
                                    "type": "boolean"
                                },
                                "recipients": {
                                    "description": "Recipients of the mail",
                                    "items": {
                                        "description": "recipient object",
                                        "properties": {
                                            "recipient_id": {
                                                "description": "recipient_id integer",
                                                "format": "int32",
                                                "title": "get_characters_character_id_mail_mail_id_recipient_id",
                                                "type": "integer"
                                            },
                                            "recipient_type": {
                                                "description": "recipient_type string",
                                                "enum": [
                                                    "alliance",
                                                    "character",
                                                    "corporation",
                                                    "mailing_list"
                                                ],
                                                "title": "get_characters_character_id_mail_mail_id_recipient_type",
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "recipient_type",
                                            "recipient_id"
                                        ],
                                        "title": "get_characters_character_id_mail_mail_id_recipient",
                                        "type": "object"
                                    },
                                    "maxItems": 50,
                                    "minItems": 1,
                                    "title": "get_characters_character_id_mail_mail_id_recipients",
                                    "type": "array",
                                    "uniqueItems": true
                                },
                                "subject": {
                                    "description": "Mail subject",
                                    "title": "get_characters_character_id_mail_mail_id_subject",
                                    "type": "string"
                                },
                                "timestamp": {
                                    "description": "When the mail was sent",
                                    "format": "date-time",
                                    "title": "get_characters_character_id_mail_mail_id_timestamp",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_character_id_mail_mail_id_ok",
                            "type": "object"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "examples": {
                            "application/json": {
                                "error": "Token is not valid for scope(s): esi-mail.read_mail.v1"
                            }
                        },
                        "schema": {
                            "description": "Forbidden",
                            "properties": {
                                "error": {
                                    "description": "Forbidden message",
                                    "title": "get_characters_character_id_mail_mail_id_403_forbidden",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_character_id_mail_mail_id_forbidden",
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "Mail not found",
                        "examples": {
                            "application/json": {
                                "error": "Not found message"
                            }
                        },
                        "schema": {
                            "description": "Not found",
                            "properties": {
                                "error": {
                                    "description": "Not found message",
                                    "title": "get_characters_character_id_mail_mail_id_404_not_found",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_character_id_mail_mail_id_not_found",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_characters_character_id_mail_mail_id_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_character_id_mail_mail_id_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "evesso": [
                            "esi-mail.read_mail.v1"
                        ]
                    }
                ],
                "summary": "Return a mail",
                "tags": [
                    "Mail"
                ],
                "x-alternate-versions": [
                    "dev",
                    "latest",
                    "v1"
                ],
                "x-cached-seconds": 30
            },
            "put": {
                "description": "Update metadata about a mail\n\n---\n\nAlternate route: `/v1/characters/{character_id}/mail/{mail_id}/`\n\nAlternate route: `/latest/characters/{character_id}/mail/{mail_id}/`\n\nAlternate route: `/dev/characters/{character_id}/mail/{mail_id}/`\n",
                "operationId": "put_characters_character_id_mail_mail_id",
                "parameters": [
                    {
                        "description": "An EVE character ID",
                        "format": "int32",
                        "in": "path",
                        "name": "character_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Data used to update the mail",
                        "in": "body",
                        "name": "contents",
                        "required": true,
                        "schema": {
                            "description": "contents object",
                            "properties": {
                                "labels": {
                                    "description": "Labels to assign to the mail. Pre-existing labels are unassigned.",
                                    "items": {
                                        "description": "label integer",
                                        "format": "int64",
                                        "minimum": 0,
                                        "title": "put_characters_character_id_mail_mail_id_label",
                                        "type": "integer",
                                        "uniqueItems": true
                                    },
                                    "title": "put_characters_character_id_mail_mail_id_labels",
                                    "type": "array"
                                },
                                "read": {
                                    "description": "Whether the mail is flagged as read",
                                    "title": "put_characters_character_id_mail_mail_id_read",
                                    "type": "boolean"
                                }
                            },
                            "title": "put_characters_character_id_mail_mail_id_contents",
                            "type": "object"
                        }
                    },
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "description": "An EVE mail ID",
                        "format": "int32",
                        "in": "path",
                        "name": "mail_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Access token to use, if preferred over a header",
                        "in": "query",
                        "name": "token",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Mail updated"
                    },
                    "400": {
                        "description": "Invalid label ID; or No parameters in body -- nothing to do",
                        "examples": {
                            "application/json": {
                                "error": "Bad request message"
                            }
                        },
                        "schema": {
                            "description": "Bad request",
                            "properties": {
                                "error": {
                                    "description": "Bad request message",
                                    "title": "put_characters_character_id_mail_mail_id_400_bad_request",
                                    "type": "string"
                                }
                            },
                            "title": "put_characters_character_id_mail_mail_id_bad_request",
                            "type": "object"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "examples": {
                            "application/json": {
                                "error": "Token is not valid for scope(s): esi-mail.organize_mail.v1"
                            }
                        },
                        "schema": {
                            "description": "Forbidden",
                            "properties": {
                                "error": {
                                    "description": "Forbidden message",
                                    "title": "put_characters_character_id_mail_mail_id_403_forbidden",
                                    "type": "string"
                                }
                            },
                            "title": "put_characters_character_id_mail_mail_id_forbidden",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "put_characters_character_id_mail_mail_id_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "put_characters_character_id_mail_mail_id_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "evesso": [
                            "esi-mail.organize_mail.v1"
                        ]
                    }
                ],
                "summary": "Update metadata about a mail",
                "tags": [
                    "Mail"
                ],
                "x-alternate-versions": [
                    "dev",
                    "latest",
                    "v1"
                ]
            }
        },
        "/characters/{character_id}/medals/": {
            "get": {
                "description": "Return a list of medals the character has\n\n---\n\nAlternate route: `/v1/characters/{character_id}/medals/`\n\nAlternate route: `/latest/characters/{character_id}/medals/`\n\nAlternate route: `/dev/characters/{character_id}/medals/`\n\n\n---\n\nThis route is cached for up to 3600 seconds",
                "operationId": "get_characters_character_id_medals",
                "parameters": [
                    {
                        "description": "ID for a character",
                        "format": "int32",
                        "in": "path",
                        "name": "character_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "description": "Access token to use, if preferred over a header",
                        "in": "query",
                        "name": "token",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of medals",
                        "examples": {
                            "application/json": [
                                {
                                    "corporation_id": 98000001,
                                    "date": "2017-03-16T15:01:45Z",
                                    "description": "For 33 corp!",
                                    "graphics": [
                                        {
                                            "color": -1,
                                            "graphic": "gallente.1_1",
                                            "layer": 0,
                                            "part": 1
                                        }
                                    ],
                                    "issuer_id": 2112000002,
                                    "medal_id": 3,
                                    "reason": "Thanks!",
                                    "status": "private",
                                    "title": "33 tester medal"
                                }
                            ]
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok array",
                            "items": {
                                "description": "200 ok object",
                                "properties": {
                                    "corporation_id": {
                                        "description": "corporation_id integer",
                                        "format": "int32",
                                        "title": "get_characters_character_id_medals_corporation_id",
                                        "type": "integer"
                                    },
                                    "date": {
                                        "description": "date string",
                                        "format": "date-time",
                                        "title": "get_characters_character_id_medals_date",
                                        "type": "string"
                                    },
                                    "description": {
                                        "description": "description string",
                                        "title": "get_characters_character_id_medals_description",
                                        "type": "string"
                                    },
                                    "graphics": {
                                        "description": "graphics array",
                                        "items": {
                                            "description": "graphic object",
                                            "properties": {
                                                "color": {
                                                    "description": "color integer",
                                                    "format": "int32",
                                                    "title": "get_characters_character_id_medals_color",
                                                    "type": "integer"
                                                },
                                                "graphic": {
                                                    "description": "graphic string",
                                                    "title": "get_characters_character_id_medals_graphic",
                                                    "type": "string"
                                                },
                                                "layer": {
                                                    "description": "layer integer",
                                                    "format": "int32",
                                                    "title": "get_characters_character_id_medals_layer",
                                                    "type": "integer"
                                                },
                                                "part": {
                                                    "description": "part integer",
                                                    "format": "int32",
                                                    "title": "get_characters_character_id_medals_part",
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "part",
                                                "layer",
                                                "graphic"
                                            ],
                                            "title": "get_characters_character_id_medals_graphic",
                                            "type": "object"
                                        },
                                        "title": "get_characters_character_id_medals_graphics",
                                        "type": "array"
                                    },
                                    "issuer_id": {
                                        "description": "issuer_id integer",
                                        "format": "int32",
                                        "title": "get_characters_character_id_medals_issuer_id",
                                        "type": "integer"
                                    },
                                    "medal_id": {
                                        "description": "medal_id integer",
                                        "format": "int32",
                                        "title": "get_characters_character_id_medals_medal_id",
                                        "type": "integer"
                                    },
                                    "reason": {
                                        "description": "reason string",
                                        "title": "get_characters_character_id_medals_reason",
                                        "type": "string"
                                    },
                                    "status": {
                                        "description": "status string",
                                        "enum": [
                                            "public",
                                            "private"
                                        ],
                                        "title": "get_characters_character_id_medals_status",
                                        "type": "string"
                                    },
                                    "title": {
                                        "description": "title string",
                                        "title": "get_characters_character_id_medals_title",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "medal_id",
                                    "title",
                                    "description",
                                    "corporation_id",
                                    "issuer_id",
                                    "date",
                                    "reason",
                                    "status",
                                    "graphics"
                                ],
                                "title": "get_characters_character_id_medals_200_ok",
                                "type": "object"
                            },
                            "title": "get_characters_character_id_medals_ok",
                            "type": "array"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "examples": {
                            "application/json": {
                                "error": "Token is not valid for scope(s): esi-characters.read_medals.v1"
                            }
                        },
                        "schema": {
                            "description": "Forbidden",
                            "properties": {
                                "error": {
                                    "description": "Forbidden message",
                                    "title": "get_characters_character_id_medals_403_forbidden",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_character_id_medals_forbidden",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_characters_character_id_medals_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_character_id_medals_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "evesso": [
                            "esi-characters.read_medals.v1"
                        ]
                    }
                ],
                "summary": "Get medals",
                "tags": [
                    "Character"
                ],
                "x-alternate-versions": [
                    "dev",
                    "latest",
                    "v1"
                ],
                "x-cached-seconds": 3600
            }
        },
        "/characters/{character_id}/opportunities/": {
            "get": {
                "description": "Return a list of tasks finished by a character\n\n---\n\nAlternate route: `/v1/characters/{character_id}/opportunities/`\n\nAlternate route: `/latest/characters/{character_id}/opportunities/`\n\nAlternate route: `/dev/characters/{character_id}/opportunities/`\n\n\n---\n\nThis route is cached for up to 3600 seconds",
                "operationId": "get_characters_character_id_opportunities",
                "parameters": [
                    {
                        "description": "ID for a character",
                        "format": "int32",
                        "in": "path",
                        "name": "character_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "description": "Access token to use, if preferred over a header",
                        "in": "query",
                        "name": "token",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of opportunities task ids",
                        "examples": {
                            "application/json": [
                                {
                                    "completed_at": "2016-04-29T12:34:56Z",
                                    "task_id": 1
                                }
                            ]
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok array",
                            "items": {
                                "description": "200 ok object",
                                "properties": {
                                    "completed_at": {
                                        "description": "completed_at string",
                                        "format": "date-time",
                                        "title": "get_characters_character_id_opportunities_completed_at",
                                        "type": "string"
                                    },
                                    "task_id": {
                                        "description": "task_id integer",
                                        "format": "int32",
                                        "title": "get_characters_character_id_opportunities_task_id",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "task_id",
                                    "completed_at"
                                ],
                                "title": "get_characters_character_id_opportunities_200_ok",
                                "type": "object"
                            },
                            "title": "get_characters_character_id_opportunities_ok",
                            "type": "array"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "examples": {
                            "application/json": {
                                "error": "Token is not valid for scope(s): esi-characters.read_opportunities.v1"
                            }
                        },
                        "schema": {
                            "description": "Forbidden",
                            "properties": {
                                "error": {
                                    "description": "Forbidden message",
                                    "title": "get_characters_character_id_opportunities_403_forbidden",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_character_id_opportunities_forbidden",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_characters_character_id_opportunities_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_character_id_opportunities_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "evesso": [
                            "esi-characters.read_opportunities.v1"
                        ]
                    }
                ],
                "summary": "Get a character's completed tasks",
                "tags": [
                    "Opportunities"
                ],
                "x-alternate-versions": [
                    "dev",
                    "latest",
                    "v1"
                ],
                "x-cached-seconds": 3600
            }
        },
        "/characters/{character_id}/orders/": {
            "get": {
                "description": "List market orders placed by a character\n\n---\n\nAlternate route: `/v1/characters/{character_id}/orders/`\n\nAlternate route: `/latest/characters/{character_id}/orders/`\n\nAlternate route: `/dev/characters/{character_id}/orders/`\n\n\n---\n\nThis route is cached for up to 3600 seconds",
                "operationId": "get_characters_character_id_orders",
                "parameters": [
                    {
                        "description": "An EVE character ID",
                        "format": "int32",
                        "in": "path",
                        "name": "character_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "description": "Access token to use, if preferred over a header",
                        "in": "query",
                        "name": "token",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Market orders placed by a character",
                        "examples": {
                            "application/json": [
                                {
                                    "account_id": 1000,
                                    "duration": 30,
                                    "escrow": 45.6,
                                    "is_buy_order": true,
                                    "is_corp": false,
                                    "issued": "2016-09-03T05:12:25Z",
                                    "location_id": 456,
                                    "min_volume": 1,
                                    "order_id": 123,
                                    "price": 33.3,
                                    "range": "station",
                                    "region_id": 123,
                                    "state": "open",
                                    "type_id": 456,
                                    "volume_remain": 4422,
                                    "volume_total": 123456
                                }
                            ]
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok array",
                            "items": {
                                "description": "200 ok object",
                                "properties": {
                                    "account_id": {
                                        "description": "Wallet division for the buyer or seller of this order. Always 1000 for characters. Currently 1000 through 1006 for corporations",
                                        "format": "int32",
                                        "title": "get_characters_character_id_orders_account_id",
                                        "type": "integer"
                                    },
                                    "duration": {
                                        "description": "Numer of days for which order is valid (starting from the issued date). An order expires at time issued + duration",
                                        "format": "int32",
                                        "title": "get_characters_character_id_orders_duration",
                                        "type": "integer"
                                    },
                                    "escrow": {
                                        "description": "For buy orders, the amount of ISK in escrow",
                                        "format": "float",
                                        "title": "get_characters_character_id_orders_escrow",
                                        "type": "number"
                                    },
                                    "is_buy_order": {
                                        "description": "True for a bid (buy) order. False for an offer (sell) order",
                                        "title": "get_characters_character_id_orders_is_buy_order",
                                        "type": "boolean"
                                    },
                                    "is_corp": {
                                        "description": "is_corp boolean",
                                        "title": "get_characters_character_id_orders_is_corp",
                                        "type": "boolean"
                                    },
                                    "issued": {
                                        "description": "Date and time when this order was issued",
                                        "format": "date-time",
                                        "title": "get_characters_character_id_orders_issued",
                                        "type": "string"
                                    },
                                    "location_id": {
                                        "description": "ID of the location where order was placed",
                                        "format": "int64",
                                        "title": "get_characters_character_id_orders_location_id",
                                        "type": "integer"
                                    },
                                    "min_volume": {
                                        "description": "For bids (buy orders), the minimum quantity that will be accepted in a matching offer (sell order)",
                                        "format": "int32",
                                        "title": "get_characters_character_id_orders_min_volume",
                                        "type": "integer"
                                    },
                                    "order_id": {
                                        "description": "Unique order ID",
                                        "format": "int64",
                                        "title": "get_characters_character_id_orders_order_id",
                                        "type": "integer"
                                    },
                                    "price": {
                                        "description": "Cost per unit for this order",
                                        "format": "float",
                                        "title": "get_characters_character_id_orders_price",
                                        "type": "number"
                                    },
                                    "range": {
                                        "description": "Valid order range, numbers are ranges in jumps",
                                        "enum": [
                                            "station",
                                            "region",
                                            "solarsystem",
                                            "1",
                                            "2",
                                            "3",
                                            "4",
                                            "5",
                                            "10",
                                            "20",
                                            "30",
                                            "40"
                                        ],
                                        "title": "get_characters_character_id_orders_range",
                                        "type": "string"
                                    },
                                    "region_id": {
                                        "description": "ID of the region where order was placed",
                                        "format": "int32",
                                        "title": "get_characters_character_id_orders_region_id",
                                        "type": "integer"
                                    },
                                    "state": {
                                        "description": "Current order state",
                                        "enum": [
                                            "open",
                                            "closed",
                                            "expired",
                                            "cancelled",
                                            "pending",
                                            "character_deleted"
                                        ],
                                        "title": "get_characters_character_id_orders_state",
                                        "type": "string"
                                    },
                                    "type_id": {
                                        "description": "The type ID of the item transacted in this order",
                                        "format": "int32",
                                        "title": "get_characters_character_id_orders_type_id",
                                        "type": "integer"
                                    },
                                    "volume_remain": {
                                        "description": "Quantity of items still required or offered",
                                        "format": "int32",
                                        "title": "get_characters_character_id_orders_volume_remain",
                                        "type": "integer"
                                    },
                                    "volume_total": {
                                        "description": "Quantity of items required or offered at time order was placed",
                                        "format": "int32",
                                        "title": "get_characters_character_id_orders_volume_total",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "order_id",
                                    "type_id",
                                    "region_id",
                                    "location_id",
                                    "range",
                                    "is_buy_order",
                                    "price",
                                    "volume_total",
                                    "volume_remain",
                                    "issued",
                                    "state",
                                    "min_volume",
                                    "account_id",
                                    "duration",
                                    "is_corp",
                                    "escrow"
                                ],
                                "title": "get_characters_character_id_orders_200_ok",
                                "type": "object"
                            },
                            "title": "get_characters_character_id_orders_ok",
                            "type": "array"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "examples": {
                            "application/json": {
                                "error": "Token is not valid for scope(s): esi-markets.read_character_orders.v1"
                            }
                        },
                        "schema": {
                            "description": "Forbidden",
                            "properties": {
                                "error": {
                                    "description": "Forbidden message",
                                    "title": "get_characters_character_id_orders_403_forbidden",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_character_id_orders_forbidden",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_characters_character_id_orders_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_character_id_orders_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "evesso": [
                            "esi-markets.read_character_orders.v1"
                        ]
                    }
                ],
                "summary": "List orders from a character",
                "tags": [
                    "Market"
                ],
                "x-alternate-versions": [
                    "dev",
                    "latest",
                    "v1"
                ],
                "x-cached-seconds": 3600
            }
        },
        "/characters/{character_id}/planets/": {
            "get": {
                "description": "Returns a list of all planetary colonies owned by a character.\n\n---\n\nAlternate route: `/v1/characters/{character_id}/planets/`\n\nAlternate route: `/latest/characters/{character_id}/planets/`\n\nAlternate route: `/dev/characters/{character_id}/planets/`\n\n\n---\n\nThis route is cached for up to 600 seconds",
                "operationId": "get_characters_character_id_planets",
                "parameters": [
                    {
                        "description": "Character id of the target character",
                        "format": "int32",
                        "in": "path",
                        "name": "character_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "description": "Access token to use, if preferred over a header",
                        "in": "query",
                        "name": "token",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of colonies",
                        "examples": {
                            "application/json": [
                                {
                                    "last_update": "2016-11-28T16:42:51Z",
                                    "num_pins": 1,
                                    "owner_id": 90000001,
                                    "planet_id": 40023691,
                                    "planet_type": "plasma",
                                    "solar_system_id": 30000379,
                                    "upgrade_level": 0
                                },
                                {
                                    "last_update": "2016-11-28T16:41:54Z",
                                    "num_pins": 1,
                                    "owner_id": 90000001,
                                    "planet_id": 40023697,
                                    "planet_type": "barren",
                                    "solar_system_id": 30000379,
                                    "upgrade_level": 0
                                }
                            ]
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok array",
                            "items": {
                                "description": "200 ok object",
                                "properties": {
                                    "last_update": {
                                        "description": "last_update string",
                                        "format": "date-time",
                                        "title": "get_characters_character_id_planets_last_update",
                                        "type": "string"
                                    },
                                    "num_pins": {
                                        "description": "num_pins integer",
                                        "format": "int32",
                                        "minimum": 1,
                                        "title": "get_characters_character_id_planets_num_pins",
                                        "type": "integer"
                                    },
                                    "owner_id": {
                                        "description": "owner_id integer",
                                        "format": "int32",
                                        "title": "get_characters_character_id_planets_owner_id",
                                        "type": "integer"
                                    },
                                    "planet_id": {
                                        "description": "planet_id integer",
                                        "format": "int32",
                                        "title": "get_characters_character_id_planets_planet_id",
                                        "type": "integer"
                                    },
                                    "planet_type": {
                                        "description": "planet_type string",
                                        "enum": [
                                            "temperate",
                                            "barren",
                                            "oceanic",
                                            "ice",
                                            "gas",
                                            "lava",
                                            "storm",
                                            "plasma"
                                        ],
                                        "title": "get_characters_character_id_planets_planet_type",
                                        "type": "string"
                                    },
                                    "solar_system_id": {
                                        "description": "solar_system_id integer",
                                        "format": "int32",
                                        "title": "get_characters_character_id_planets_solar_system_id",
                                        "type": "integer"
                                    },
                                    "upgrade_level": {
                                        "description": "upgrade_level integer",
                                        "format": "int32",
                                        "maximum": 5,
                                        "minimum": 0,
                                        "title": "get_characters_character_id_planets_upgrade_level",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "solar_system_id",
                                    "planet_id",
                                    "planet_type",
                                    "owner_id",
                                    "last_update",
                                    "upgrade_level",
                                    "num_pins"
                                ],
                                "title": "get_characters_character_id_planets_200_ok",
                                "type": "object"
                            },
                            "title": "get_characters_character_id_planets_ok",
                            "type": "array"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "examples": {
                            "application/json": {
                                "error": "Token is not valid for scope(s): esi-planets.manage_planets.v1"
                            }
                        },
                        "schema": {
                            "description": "Forbidden",
                            "properties": {
                                "error": {
                                    "description": "Forbidden message",
                                    "title": "get_characters_character_id_planets_403_forbidden",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_character_id_planets_forbidden",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_characters_character_id_planets_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_character_id_planets_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "evesso": [
                            "esi-planets.manage_planets.v1"
                        ]
                    }
                ],
                "summary": "Get colonies",
                "tags": [
                    "Planetary Interaction"
                ],
                "x-alternate-versions": [
                    "dev",
                    "latest",
                    "v1"
                ],
                "x-cached-seconds": 600
            }
        },
        "/characters/{character_id}/planets/{planet_id}/": {
            "get": {
                "deprecated": true,
                "description": "Returns full details on the layout of a single planetary colony, including links, pins and routes. Note: Planetary information is only recalculated when the colony is viewed through the client. Information on this endpoint will not update until this criteria is met.\n\n---\n\nAlternate route: `/v1/characters/{character_id}/planets/{planet_id}/`\n\n\n---\n\nThis route is cached for up to 600 seconds",
                "operationId": "get_characters_character_id_planets_planet_id",
                "parameters": [
                    {
                        "description": "Character id of the target character",
                        "format": "int32",
                        "in": "path",
                        "name": "character_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "description": "Planet id of the target planet",
                        "format": "int32",
                        "in": "path",
                        "name": "planet_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Access token to use, if preferred over a header",
                        "in": "query",
                        "name": "token",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Colony layout",
                        "examples": {
                            "application/json": {
                                "links": [
                                    {
                                        "destination_pin_id": 1000000017022,
                                        "link_level": 0,
                                        "source_pin_id": 1000000017021
                                    }
                                ],
                                "pins": [
                                    {
                                        "is_running": true,
                                        "latitude": 1.55087844973,
                                        "longitude": 0.717145933308,
                                        "pin_id": 1000000017021,
                                        "type_id": 2254
                                    },
                                    {
                                        "is_running": true,
                                        "latitude": 1.53360639935,
                                        "longitude": 0.709775584394,
                                        "pin_id": 1000000017022,
                                        "type_id": 2256
                                    }
                                ],
                                "routes": [
                                    {
                                        "content_type_id": 2393,
                                        "destination_pin_id": 1000000017030,
                                        "quantity": 20,
                                        "route_id": 4,
                                        "source_pin_id": 1000000017029
                                    }
                                ]
                            }
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok object",
                            "properties": {
                                "links": {
                                    "description": "links array",
                                    "items": {
                                        "description": "link object",
                                        "properties": {
                                            "destination_pin_id": {
                                                "description": "destination_pin_id integer",
                                                "format": "int64",
                                                "title": "get_characters_character_id_planets_planet_id_destination_pin_id",
                                                "type": "integer"
                                            },
                                            "link_level": {
                                                "description": "link_level integer",
                                                "format": "int32",
                                                "maximum": 10,
                                                "minimum": 0,
                                                "title": "get_characters_character_id_planets_planet_id_link_level",
                                                "type": "integer"
                                            },
                                            "source_pin_id": {
                                                "description": "source_pin_id integer",
                                                "format": "int64",
                                                "title": "get_characters_character_id_planets_planet_id_source_pin_id",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "source_pin_id",
                                            "destination_pin_id",
                                            "link_level"
                                        ],
                                        "title": "get_characters_character_id_planets_planet_id_link",
                                        "type": "object"
                                    },
                                    "title": "get_characters_character_id_planets_planet_id_links",
                                    "type": "array"
                                },
                                "pins": {
                                    "description": "pins array",
                                    "items": {
                                        "description": "pin object",
                                        "properties": {
                                            "expiry_time": {
                                                "description": "expiry_time string",
                                                "format": "date-time",
                                                "title": "get_characters_character_id_planets_planet_id_expiry_time",
                                                "type": "string"
                                            },
                                            "extractor_details": {
                                                "description": "extractor_details object",
                                                "properties": {
                                                    "cycle_time": {
                                                        "description": "in seconds",
                                                        "format": "int32",
                                                        "title": "get_characters_character_id_planets_planet_id_cycle_time",
                                                        "type": "integer"
                                                    },
                                                    "head_radius": {
                                                        "description": "head_radius number",
                                                        "format": "float",
                                                        "title": "get_characters_character_id_planets_planet_id_head_radius",
                                                        "type": "number"
                                                    },
                                                    "heads": {
                                                        "description": "heads array",
                                                        "items": {
                                                            "description": "head object",
                                                            "properties": {
                                                                "head_id": {
                                                                    "description": "head_id integer",
                                                                    "format": "int32",
                                                                    "maximum": 9,
                                                                    "minimum": 0,
                                                                    "title": "get_characters_character_id_planets_planet_id_head_id",
                                                                    "type": "integer"
                                                                },
                                                                "latitude": {
                                                                    "description": "latitude number",
                                                                    "format": "float",
                                                                    "title": "get_characters_character_id_planets_planet_id_latitude",
                                                                    "type": "number"
                                                                },
                                                                "longitude": {
                                                                    "description": "longitude number",
                                                                    "format": "float",
                                                                    "title": "get_characters_character_id_planets_planet_id_longitude",
                                                                    "type": "number"
                                                                }
                                                            },
                                                            "required": [
                                                                "head_id",
                                                                "latitude",
                                                                "longitude"
                                                            ],
                                                            "title": "get_characters_character_id_planets_planet_id_head",
                                                            "type": "object"
                                                        },
                                                        "title": "get_characters_character_id_planets_planet_id_heads",
                                                        "type": "array"
                                                    },
                                                    "product_type_id": {
                                                        "description": "product_type_id integer",
                                                        "format": "int32",
                                                        "title": "get_characters_character_id_planets_planet_id_product_type_id",
                                                        "type": "integer"
                                                    },
                                                    "qty_per_cycle": {
                                                        "description": "qty_per_cycle integer",
                                                        "format": "int32",
                                                        "title": "get_characters_character_id_planets_planet_id_qty_per_cycle",
                                                        "type": "integer"
                                                    }
                                                },
                                                "required": [
                                                    "heads",
                                                    "product_type_id",
                                                    "cycle_time",
                                                    "head_radius",
                                                    "qty_per_cycle"
                                                ],
                                                "title": "get_characters_character_id_planets_planet_id_extractor_details",
                                                "type": "object"
                                            },
                                            "factory_details": {
                                                "description": "factory_details object",
                                                "properties": {
                                                    "schematic_id": {
                                                        "description": "schematic_id integer",
                                                        "format": "int32",
                                                        "title": "get_characters_character_id_planets_planet_id_schematic_id",
                                                        "type": "integer"
                                                    }
                                                },
                                                "required": [
                                                    "schematic_id"
                                                ],
                                                "title": "get_characters_character_id_planets_planet_id_factory_details",
                                                "type": "object"
                                            },
                                            "install_time": {
                                                "description": "install_time string",
                                                "format": "date-time",
                                                "title": "get_characters_character_id_planets_planet_id_install_time",
                                                "type": "string"
                                            },
                                            "last_cycle_start": {
                                                "description": "last_cycle_start string",
                                                "format": "date-time",
                                                "title": "get_characters_character_id_planets_planet_id_last_cycle_start",
                                                "type": "string"
                                            },
                                            "latitude": {
                                                "description": "latitude number",
                                                "format": "float",
                                                "title": "get_characters_character_id_planets_planet_id_latitude",
                                                "type": "number"
                                            },
                                            "longitude": {
                                                "description": "longitude number",
                                                "format": "float",
                                                "title": "get_characters_character_id_planets_planet_id_longitude",
                                                "type": "number"
                                            },
                                            "pin_id": {
                                                "description": "pin_id integer",
                                                "format": "int64",
                                                "title": "get_characters_character_id_planets_planet_id_pin_id",
                                                "type": "integer"
                                            },
                                            "schematic_id": {
                                                "description": "schematic_id integer",
                                                "format": "int32",
                                                "title": "get_characters_character_id_planets_planet_id_schematic_id",
                                                "type": "integer"
                                            },
                                            "type_id": {
                                                "description": "type_id integer",
                                                "format": "int32",
                                                "title": "get_characters_character_id_planets_planet_id_type_id",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "pin_id",
                                            "type_id",
                                            "latitude",
                                            "longitude"
                                        ],
                                        "title": "get_characters_character_id_planets_planet_id_pin",
                                        "type": "object"
                                    },
                                    "title": "get_characters_character_id_planets_planet_id_pins",
                                    "type": "array"
                                },
                                "routes": {
                                    "description": "routes array",
                                    "items": {
                                        "description": "route object",
                                        "properties": {
                                            "content_type_id": {
                                                "description": "content_type_id integer",
                                                "format": "int32",
                                                "title": "get_characters_character_id_planets_planet_id_content_type_id",
                                                "type": "integer"
                                            },
                                            "destination_pin_id": {
                                                "description": "destination_pin_id integer",
                                                "format": "int64",
                                                "title": "get_characters_character_id_planets_planet_id_destination_pin_id",
                                                "type": "integer"
                                            },
                                            "quantity": {
                                                "description": "quantity integer",
                                                "format": "int64",
                                                "title": "get_characters_character_id_planets_planet_id_quantity",
                                                "type": "integer"
                                            },
                                            "route_id": {
                                                "description": "route_id integer",
                                                "format": "int64",
                                                "title": "get_characters_character_id_planets_planet_id_route_id",
                                                "type": "integer"
                                            },
                                            "source_pin_id": {
                                                "description": "source_pin_id integer",
                                                "format": "int64",
                                                "title": "get_characters_character_id_planets_planet_id_source_pin_id",
                                                "type": "integer"
                                            },
                                            "waypoints": {
                                                "description": "waypoints array",
                                                "items": {
                                                    "description": "waypoint object",
                                                    "properties": {
                                                        "order": {
                                                            "description": "order integer",
                                                            "format": "int32",
                                                            "maximum": 5,
                                                            "minimum": 1,
                                                            "title": "get_characters_character_id_planets_planet_id_order",
                                                            "type": "integer"
                                                        },
                                                        "pin_id": {
                                                            "description": "pin_id integer",
                                                            "format": "int64",
                                                            "title": "get_characters_character_id_planets_planet_id_pin_id",
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "required": [
                                                        "pin_id",
                                                        "order"
                                                    ],
                                                    "title": "get_characters_character_id_planets_planet_id_waypoint",
                                                    "type": "object"
                                                },
                                                "title": "get_characters_character_id_planets_planet_id_waypoints",
                                                "type": "array"
                                            }
                                        },
                                        "required": [
                                            "route_id",
                                            "source_pin_id",
                                            "destination_pin_id",
                                            "content_type_id",
                                            "quantity"
                                        ],
                                        "title": "get_characters_character_id_planets_planet_id_route",
                                        "type": "object"
                                    },
                                    "title": "get_characters_character_id_planets_planet_id_routes",
                                    "type": "array"
                                }
                            },
                            "required": [
                                "links",
                                "pins",
                                "routes"
                            ],
                            "title": "get_characters_character_id_planets_planet_id_ok",
                            "type": "object"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "examples": {
                            "application/json": {
                                "error": "Token is not valid for scope(s): esi-planets.manage_planets.v1"
                            }
                        },
                        "schema": {
                            "description": "Forbidden",
                            "properties": {
                                "error": {
                                    "description": "Forbidden message",
                                    "title": "get_characters_character_id_planets_planet_id_403_forbidden",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_character_id_planets_planet_id_forbidden",
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "Colony not found",
                        "examples": {
                            "application/json": {
                                "error": "Colony not found"
                            }
                        },
                        "schema": {
                            "description": "Colony not found",
                            "properties": {
                                "error": {
                                    "description": "error message",
                                    "title": "get_characters_character_id_planets_planet_id_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_character_id_planets_planet_id_not_found",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_characters_character_id_planets_planet_id_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_character_id_planets_planet_id_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "evesso": [
                            "esi-planets.manage_planets.v1"
                        ]
                    }
                ],
                "summary": "Get colony layout",
                "tags": [
                    "Planetary Interaction"
                ],
                "x-alternate-versions": [
                    "v1"
                ],
                "x-cached-seconds": 600
            }
        },
        "/characters/{character_id}/portrait/": {
            "get": {
                "deprecated": true,
                "description": "Get portrait urls for a character\n\n---\n\nAlternate route: `/v1/characters/{character_id}/portrait/`\n\n\n---\n\nThis route is cached for up to 3600 seconds",
                "operationId": "get_characters_character_id_portrait",
                "parameters": [
                    {
                        "description": "An EVE character ID",
                        "format": "int32",
                        "in": "path",
                        "name": "character_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Public data for the given character",
                        "examples": {
                            "application/json": {
                                "128x128": "https://imageserver.eveonline.com/Character/95465499_128.jpg",
                                "256x256": "https://imageserver.eveonline.com/Character/95465499_256.jpg",
                                "512x512": "https://imageserver.eveonline.com/Character/95465499_512.jpg",
                                "64x64": "https://imageserver.eveonline.com/Character/95465499_64.jpg"
                            }
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok object",
                            "properties": {
                                "128x128": {
                                    "description": "128x128 string",
                                    "title": "get_characters_character_id_portrait_128x128",
                                    "type": "string"
                                },
                                "256x256": {
                                    "description": "256x256 string",
                                    "title": "get_characters_character_id_portrait_256x256",
                                    "type": "string"
                                },
                                "512x512": {
                                    "description": "512x512 string",
                                    "title": "get_characters_character_id_portrait_512x512",
                                    "type": "string"
                                },
                                "64x64": {
                                    "description": "64x64 string",
                                    "title": "get_characters_character_id_portrait_64x64",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_character_id_portrait_ok",
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "No image server for this datasource",
                        "examples": {
                            "application/json": {
                                "error": "No image server for this datasource"
                            }
                        },
                        "schema": {
                            "description": "No image server for this datasource",
                            "properties": {
                                "error": {
                                    "description": "error message",
                                    "title": "get_characters_character_id_portrait_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_character_id_portrait_not_found",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_characters_character_id_portrait_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_character_id_portrait_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "summary": "Get character portraits",
                "tags": [
                    "Character"
                ],
                "x-alternate-versions": [
                    "v1"
                ],
                "x-cached-seconds": 3600
            }
        },
        "/characters/{character_id}/roles/": {
            "get": {
                "description": "Returns a character's corporation roles\n\n---\n\nAlternate route: `/v1/characters/{character_id}/roles/`\n\nAlternate route: `/latest/characters/{character_id}/roles/`\n\nAlternate route: `/dev/characters/{character_id}/roles/`\n\n\n---\n\nThis route is cached for up to 3600 seconds",
                "operationId": "get_characters_character_id_roles",
                "parameters": [
                    {
                        "description": "A character ID",
                        "format": "int32",
                        "in": "path",
                        "name": "character_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "description": "Access token to use, if preferred over a header",
                        "in": "query",
                        "name": "token",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The character's roles in thier corporation",
                        "examples": {
                            "application/json": [
                                "Director",
                                "Station_Manager"
                            ]
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok array",
                            "items": {
                                "description": "200 ok string",
                                "enum": [
                                    "Director",
                                    "Personnel_Manager",
                                    "Accountant",
                                    "Security_Officer",
                                    "Factory_Manager",
                                    "Station_Manager",
                                    "Auditor",
                                    "Hangar_Take_1",
                                    "Hangar_Take_2",
                                    "Hangar_Take_3",
                                    "Hangar_Take_4",
                                    "Hangar_Take_5",
                                    "Hangar_Take_6",
                                    "Hangar_Take_7",
                                    "Hangar_Query_1",
                                    "Hangar_Query_2",
                                    "Hangar_Query_3",
                                    "Hangar_Query_4",
                                    "Hangar_Query_5",
                                    "Hangar_Query_6",
                                    "Hangar_Query_7",
                                    "Account_Take_1",
                                    "Account_Take_2",
                                    "Account_Take_3",
                                    "Account_Take_4",
                                    "Account_Take_5",
                                    "Account_Take_6",
                                    "Account_Take_7",
                                    "Diplomat",
                                    "Config_Equipment",
                                    "Container_Take_1",
                                    "Container_Take_2",
                                    "Container_Take_3",
                                    "Container_Take_4",
                                    "Container_Take_5",
                                    "Container_Take_6",
                                    "Container_Take_7",
                                    "Rent_Office",
                                    "Rent_Factory_Facility",
                                    "Rent_Research_Facility",
                                    "Junior_Accountant",
                                    "Config_Starbase_Equipment",
                                    "Trader",
                                    "Communications_Officer",
                                    "Contract_Manager",
                                    "Starbase_Defense_Operator",
                                    "Starbase_Fuel_Technician",
                                    "Fitting_Manager",
                                    "Terrestrial_Combat_Officer",
                                    "Terrestrial_Logistics_Officer"
                                ],
                                "title": "get_characters_character_id_roles_200_ok",
                                "type": "string",
                                "uniqueItems": true
                            },
                            "title": "get_characters_character_id_roles_ok",
                            "type": "array"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "examples": {
                            "application/json": {
                                "error": "Token is not valid for scope(s): esi-characters.read_corporation_roles.v1"
                            }
                        },
                        "schema": {
                            "description": "Forbidden",
                            "properties": {
                                "error": {
                                    "description": "Forbidden message",
                                    "title": "get_characters_character_id_roles_403_forbidden",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_character_id_roles_forbidden",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_characters_character_id_roles_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_character_id_roles_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "evesso": [
                            "esi-characters.read_corporation_roles.v1"
                        ]
                    }
                ],
                "summary": "Get character corporation roles",
                "tags": [
                    "Character"
                ],
                "x-alternate-versions": [
                    "dev",
                    "latest",
                    "v1"
                ],
                "x-cached-seconds": 3600
            }
        },
        "/characters/{character_id}/search/": {
            "get": {
                "deprecated": true,
                "description": "Search for entities that match a given sub-string.\n\n---\n\nAlternate route: `/v1/characters/{character_id}/search/`\n\n\n---\n\nThis route is cached for up to 3600 seconds",
                "operationId": "get_characters_character_id_search",
                "parameters": [
                    {
                        "description": "Type of entities to search for",
                        "in": "query",
                        "items": {
                            "enum": [
                                "agent",
                                "alliance",
                                "character",
                                "constellation",
                                "corporation",
                                "faction",
                                "inventorytype",
                                "region",
                                "solarsystem",
                                "station",
                                "structure",
                                "wormhole"
                            ],
                            "type": "string"
                        },
                        "minItems": 1,
                        "name": "categories",
                        "required": true,
                        "type": "array",
                        "uniqueItems": true
                    },
                    {
                        "description": "An EVE character ID",
                        "format": "int32",
                        "in": "path",
                        "name": "character_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "default": "en-us",
                        "description": "Search locale",
                        "enum": [
                            "en-us",
                            "de",
                            "fr",
                            "ru",
                            "ja",
                            "zh"
                        ],
                        "in": "query",
                        "name": "language",
                        "type": "string"
                    },
                    {
                        "description": "The string to search on",
                        "in": "query",
                        "minLength": 3,
                        "name": "search",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Access token to use, if preferred over a header",
                        "in": "query",
                        "name": "token",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of search results",
                        "examples": {
                            "application/json": [
                                60004588,
                                60004594,
                                60005725,
                                60009106,
                                60012721,
                                60012724,
                                60012727,
                                30002510
                            ]
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok array",
                            "items": {
                                "description": "200 ok integer",
                                "format": "int64",
                                "title": "get_characters_character_id_search_200_ok",
                                "type": "integer"
                            },
                            "title": "get_characters_character_id_search_ok",
                            "type": "array"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "examples": {
                            "application/json": {
                                "error": "Token is not valid for scope(s): esi-search.search_structures.v1"
                            }
                        },
                        "schema": {
                            "description": "Forbidden",
                            "properties": {
                                "error": {
                                    "description": "Forbidden message",
                                    "title": "get_characters_character_id_search_403_forbidden",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_character_id_search_forbidden",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_characters_character_id_search_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_character_id_search_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "evesso": [
                            "esi-search.search_structures.v1"
                        ]
                    }
                ],
                "summary": "Search on a string",
                "tags": [
                    "Search"
                ],
                "x-alternate-versions": [
                    "v1"
                ],
                "x-cached-seconds": 3600
            }
        },
        "/characters/{character_id}/skillqueue/": {
            "get": {
                "description": "List the configured skill queue for the given character\n\n---\n\nAlternate route: `/v2/characters/{character_id}/skillqueue/`\n\nAlternate route: `/latest/characters/{character_id}/skillqueue/`\n\nAlternate route: `/dev/characters/{character_id}/skillqueue/`\n\n\n---\n\nThis route is cached for up to 120 seconds",
                "operationId": "get_characters_character_id_skillqueue",
                "parameters": [
                    {
                        "description": "Character id of the target character",
                        "format": "int32",
                        "in": "path",
                        "name": "character_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "description": "Access token to use, if preferred over a header",
                        "in": "query",
                        "name": "token",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The current skill queue, sorted ascending by finishing time",
                        "examples": {
                            "application/json": [
                                {
                                    "finish_date": "2016-06-29T10:47:00Z",
                                    "finished_level": 3,
                                    "queue_position": 0,
                                    "skill_id": 1,
                                    "start_date": "2016-06-29T10:46:00Z"
                                },
                                {
                                    "finish_date": "2016-07-15T10:47:00Z",
                                    "finished_level": 4,
                                    "queue_position": 1,
                                    "skill_id": 1,
                                    "start_date": "2016-06-29T10:47:00Z"
                                },
                                {
                                    "finish_date": "2016-08-30T10:47:00Z",
                                    "finished_level": 2,
                                    "queue_position": 2,
                                    "skill_id": 2,
                                    "start_date": "2016-07-15T10:47:00Z"
                                }
                            ]
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok array",
                            "items": {
                                "description": "200 ok object",
                                "properties": {
                                    "finish_date": {
                                        "description": "finish_date string",
                                        "format": "date-time",
                                        "title": "get_characters_character_id_skillqueue_finish_date",
                                        "type": "string"
                                    },
                                    "finished_level": {
                                        "description": "finished_level integer",
                                        "format": "int32",
                                        "maximum": 5,
                                        "minimum": 0,
                                        "title": "get_characters_character_id_skillqueue_finished_level",
                                        "type": "integer"
                                    },
                                    "level_end_sp": {
                                        "description": "level_end_sp integer",
                                        "format": "int32",
                                        "title": "get_characters_character_id_skillqueue_level_end_sp",
                                        "type": "integer"
                                    },
                                    "level_start_sp": {
                                        "description": "Amount of SP that was in the skill when it started training it's current level. Used to calculate % of current level complete.",
                                        "format": "int32",
                                        "title": "get_characters_character_id_skillqueue_level_start_sp",
                                        "type": "integer"
                                    },
                                    "queue_position": {
                                        "description": "queue_position integer",
                                        "format": "int32",
                                        "title": "get_characters_character_id_skillqueue_queue_position",
                                        "type": "integer"
                                    },
                                    "skill_id": {
                                        "description": "skill_id integer",
                                        "format": "int32",
                                        "title": "get_characters_character_id_skillqueue_skill_id",
                                        "type": "integer"
                                    },
                                    "start_date": {
                                        "description": "start_date string",
                                        "format": "date-time",
                                        "title": "get_characters_character_id_skillqueue_start_date",
                                        "type": "string"
                                    },
                                    "training_start_sp": {
                                        "description": "training_start_sp integer",
                                        "format": "int32",
                                        "title": "get_characters_character_id_skillqueue_training_start_sp",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "skill_id",
                                    "finished_level",
                                    "queue_position"
                                ],
                                "title": "get_characters_character_id_skillqueue_200_ok",
                                "type": "object"
                            },
                            "title": "get_characters_character_id_skillqueue_ok",
                            "type": "array"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "examples": {
                            "application/json": {
                                "error": "Token is not valid for scope(s): esi-skills.read_skillqueue.v1"
                            }
                        },
                        "schema": {
                            "description": "Forbidden",
                            "properties": {
                                "error": {
                                    "description": "Forbidden message",
                                    "title": "get_characters_character_id_skillqueue_403_forbidden",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_character_id_skillqueue_forbidden",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_characters_character_id_skillqueue_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_character_id_skillqueue_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "evesso": [
                            "esi-skills.read_skillqueue.v1"
                        ]
                    }
                ],
                "summary": "Get character's skill queue",
                "tags": [
                    "Skills"
                ],
                "x-alternate-versions": [
                    "dev",
                    "latest",
                    "v2"
                ],
                "x-cached-seconds": 120
            }
        },
        "/characters/{character_id}/skills/": {
            "get": {
                "deprecated": true,
                "description": "List all trained skills for the given character\n\n---\n\nAlternate route: `/v2/characters/{character_id}/skills/`\n\n\n---\n\nThis route is cached for up to 120 seconds",
                "operationId": "get_characters_character_id_skills",
                "parameters": [
                    {
                        "description": "An EVE character ID",
                        "format": "int32",
                        "in": "path",
                        "name": "character_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "description": "Access token to use, if preferred over a header",
                        "in": "query",
                        "name": "token",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Known skills for the character",
                        "examples": {
                            "application/json": [
                                {
                                    "current_skill_level": 1,
                                    "skill_id": 1,
                                    "skillpoints_in_skill": 10000
                                },
                                {
                                    "current_skill_level": 1,
                                    "skill_id": 2,
                                    "skillpoints_in_skill": 10000
                                }
                            ]
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok array",
                            "items": {
                                "description": "200 ok object",
                                "properties": {
                                    "current_skill_level": {
                                        "description": "current_skill_level integer",
                                        "format": "int32",
                                        "title": "get_characters_character_id_skills_current_skill_level",
                                        "type": "integer"
                                    },
                                    "skill_id": {
                                        "description": "skill_id integer",
                                        "format": "int32",
                                        "title": "get_characters_character_id_skills_skill_id",
                                        "type": "integer"
                                    },
                                    "skillpoints_in_skill": {
                                        "description": "skillpoints_in_skill integer",
                                        "format": "int64",
                                        "title": "get_characters_character_id_skills_skillpoints_in_skill",
                                        "type": "integer"
                                    }
                                },
                                "title": "get_characters_character_id_skills_200_ok",
                                "type": "object"
                            },
                            "title": "get_characters_character_id_skills_ok",
                            "type": "array"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "examples": {
                            "application/json": {
                                "error": "Token is not valid for scope(s): esi-skills.read_skills.v1"
                            }
                        },
                        "schema": {
                            "description": "Forbidden",
                            "properties": {
                                "error": {
                                    "description": "Forbidden message",
                                    "title": "get_characters_character_id_skills_403_forbidden",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_character_id_skills_forbidden",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_characters_character_id_skills_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_character_id_skills_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "evesso": [
                            "esi-skills.read_skills.v1"
                        ]
                    }
                ],
                "summary": "Get character skills",
                "tags": [
                    "Skills"
                ],
                "x-alternate-versions": [
                    "v2"
                ],
                "x-cached-seconds": 120
            }
        },
        "/characters/{character_id}/standings/": {
            "get": {
                "description": "Return character standings from agents, NPC corporations, and factions\n\n---\n\nAlternate route: `/v1/characters/{character_id}/standings/`\n\nAlternate route: `/latest/characters/{character_id}/standings/`\n\nAlternate route: `/dev/characters/{character_id}/standings/`\n\n\n---\n\nThis route is cached for up to 3600 seconds",
                "operationId": "get_characters_character_id_standings",
                "parameters": [
                    {
                        "description": "ID for a character",
                        "format": "int32",
                        "in": "path",
                        "name": "character_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "description": "Access token to use, if preferred over a header",
                        "in": "query",
                        "name": "token",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of standings",
                        "examples": {
                            "application/json": [
                                {
                                    "from_id": 3009841,
                                    "from_type": "agent",
                                    "standing": 0.1
                                },
                                {
                                    "from_id": 1000061,
                                    "from_type": "npc_corp",
                                    "standing": 0
                                },
                                {
                                    "from_id": 500003,
                                    "from_type": "faction",
                                    "standing": -1
                                }
                            ]
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok array",
                            "items": {
                                "description": "200 ok object",
                                "properties": {
                                    "from_id": {
                                        "description": "from_id integer",
                                        "format": "int32",
                                        "title": "get_characters_character_id_standings_from_id",
                                        "type": "integer"
                                    },
                                    "from_type": {
                                        "description": "from_type string",
                                        "enum": [
                                            "agent",
                                            "npc_corp",
                                            "faction"
                                        ],
                                        "title": "get_characters_character_id_standings_from_type",
                                        "type": "string"
                                    },
                                    "standing": {
                                        "description": "standing number",
                                        "format": "float",
                                        "maximum": 10,
                                        "minimum": -10,
                                        "title": "get_characters_character_id_standings_standing",
                                        "type": "number"
                                    }
                                },
                                "required": [
                                    "from_id",
                                    "from_type",
                                    "standing"
                                ],
                                "title": "get_characters_character_id_standings_200_ok",
                                "type": "object"
                            },
                            "title": "get_characters_character_id_standings_ok",
                            "type": "array"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "examples": {
                            "application/json": {
                                "error": "Token is not valid for scope(s): esi-characters.read_standings.v1"
                            }
                        },
                        "schema": {
                            "description": "Forbidden",
                            "properties": {
                                "error": {
                                    "description": "Forbidden message",
                                    "title": "get_characters_character_id_standings_403_forbidden",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_character_id_standings_forbidden",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_characters_character_id_standings_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_character_id_standings_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "evesso": [
                            "esi-characters.read_standings.v1"
                        ]
                    }
                ],
                "summary": "Get standings",
                "tags": [
                    "Character"
                ],
                "x-alternate-versions": [
                    "dev",
                    "latest",
                    "v1"
                ],
                "x-cached-seconds": 3600
            }
        },
        "/characters/{character_id}/wallets/": {
            "get": {
                "description": "List your wallets and their balances. Characters typically have only one wallet, with wallet_id 1000 being the master wallet.\n\n---\n\nAlternate route: `/v1/characters/{character_id}/wallets/`\n\nAlternate route: `/latest/characters/{character_id}/wallets/`\n\nAlternate route: `/dev/characters/{character_id}/wallets/`\n\n\n---\n\nThis route is cached for up to 120 seconds",
                "operationId": "get_characters_character_id_wallets",
                "parameters": [
                    {
                        "description": "An EVE character ID",
                        "format": "int32",
                        "in": "path",
                        "name": "character_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "description": "Access token to use, if preferred over a header",
                        "in": "query",
                        "name": "token",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Wallet data for selected user",
                        "examples": {
                            "application/json": [
                                {
                                    "balance": 295000,
                                    "wallet_id": 1000
                                }
                            ]
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok array",
                            "items": {
                                "description": "200 ok object",
                                "properties": {
                                    "balance": {
                                        "description": "Wallet's balance in ISK hundredths.",
                                        "format": "int64",
                                        "title": "get_characters_character_id_wallets_balance",
                                        "type": "integer"
                                    },
                                    "wallet_id": {
                                        "description": "wallet_id integer",
                                        "format": "int32",
                                        "title": "get_characters_character_id_wallets_wallet_id",
                                        "type": "integer"
                                    }
                                },
                                "title": "get_characters_character_id_wallets_200_ok",
                                "type": "object"
                            },
                            "title": "get_characters_character_id_wallets_ok",
                            "type": "array"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "examples": {
                            "application/json": {
                                "error": "Token is not valid for scope(s): esi-wallet.read_character_wallet.v1"
                            }
                        },
                        "schema": {
                            "description": "Forbidden",
                            "properties": {
                                "error": {
                                    "description": "Forbidden message",
                                    "title": "get_characters_character_id_wallets_403_forbidden",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_character_id_wallets_forbidden",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_characters_character_id_wallets_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_character_id_wallets_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "evesso": [
                            "esi-wallet.read_character_wallet.v1"
                        ]
                    }
                ],
                "summary": "List wallets and balances",
                "tags": [
                    "Wallet"
                ],
                "x-alternate-versions": [
                    "dev",
                    "latest",
                    "v1"
                ],
                "x-cached-seconds": 120
            }
        },
        "/corporations/names/": {
            "get": {
                "description": "Resolve a set of corporation IDs to corporation names\n\n---\n\nAlternate route: `/v1/corporations/names/`\n\nAlternate route: `/latest/corporations/names/`\n\nAlternate route: `/dev/corporations/names/`\n\n\n---\n\nThis route is cached for up to 3600 seconds",
                "operationId": "get_corporations_names",
                "parameters": [
                    {
                        "description": "A comma separated list of corporation IDs",
                        "in": "query",
                        "items": {
                            "format": "int64",
                            "type": "integer"
                        },
                        "minItems": 1,
                        "name": "corporation_ids",
                        "required": true,
                        "type": "array"
                    },
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of id/name associations",
                        "examples": {
                            "application/json": [
                                {
                                    "corporation_id": 1000171,
                                    "corporation_name": "Republic University"
                                }
                            ]
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok array",
                            "items": {
                                "description": "200 ok object",
                                "properties": {
                                    "corporation_id": {
                                        "description": "corporation_id integer",
                                        "format": "int32",
                                        "title": "get_corporations_names_corporation_id",
                                        "type": "integer"
                                    },
                                    "corporation_name": {
                                        "description": "corporation_name string",
                                        "title": "get_corporations_names_corporation_name",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "corporation_id",
                                    "corporation_name"
                                ],
                                "title": "get_corporations_names_200_ok",
                                "type": "object"
                            },
                            "title": "get_corporations_names_ok",
                            "type": "array"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_corporations_names_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_corporations_names_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "summary": "Get corporation names",
                "tags": [
                    "Corporation"
                ],
                "x-alternate-versions": [
                    "dev",
                    "latest",
                    "v1"
                ],
                "x-cached-seconds": 3600
            }
        },
        "/corporations/npccorps/": {
            "get": {
                "description": "Get a list of npc corporations\n\n---\n\nAlternate route: `/v1/corporations/npccorps/`\n\nAlternate route: `/latest/corporations/npccorps/`\n\nAlternate route: `/dev/corporations/npccorps/`\n\n\n---\n\nThis route is cached for up to 3600 seconds",
                "operationId": "get_corporations_npccorps",
                "parameters": [
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of npc corporation ids",
                        "examples": {
                            "application/json": [
                                1000001,
                                1000002,
                                1000003
                            ]
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok array",
                            "items": {
                                "description": "200 ok integer",
                                "format": "int32",
                                "title": "get_corporations_npccorps_200_ok",
                                "type": "integer"
                            },
                            "title": "get_corporations_npccorps_ok",
                            "type": "array"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_corporations_npccorps_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_corporations_npccorps_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "summary": "Get npc corporations",
                "tags": [
                    "Corporation"
                ],
                "x-alternate-versions": [
                    "dev",
                    "latest",
                    "v1"
                ],
                "x-cached-seconds": 3600
            }
        },
        "/corporations/{corporation_id}/": {
            "get": {
                "deprecated": true,
                "description": "Public information about a corporation\n\n---\n\nAlternate route: `/v2/corporations/{corporation_id}/`\n\n\n---\n\nThis route is cached for up to 3600 seconds",
                "operationId": "get_corporations_corporation_id",
                "parameters": [
                    {
                        "description": "An Eve corporation ID",
                        "format": "int32",
                        "in": "path",
                        "name": "corporation_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Public data about a corporation",
                        "examples": {
                            "application/json": {
                                "alliance_id": 434243723,
                                "ceo_id": 180548812,
                                "corporation_name": "C C P",
                                "member_count": 656,
                                "ticker": "-CCP-"
                            }
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok object",
                            "properties": {
                                "alliance_id": {
                                    "description": "id of alliance that corporation is a member of, if any",
                                    "format": "int32",
                                    "title": "get_corporations_corporation_id_alliance_id",
                                    "type": "integer"
                                },
                                "ceo_id": {
                                    "description": "ceo_id integer",
                                    "format": "int32",
                                    "title": "get_corporations_corporation_id_ceo_id",
                                    "type": "integer"
                                },
                                "corporation_name": {
                                    "description": "the full name of the corporation",
                                    "title": "get_corporations_corporation_id_corporation_name",
                                    "type": "string"
                                },
                                "member_count": {
                                    "description": "member_count integer",
                                    "format": "int32",
                                    "title": "get_corporations_corporation_id_member_count",
                                    "type": "integer"
                                },
                                "ticker": {
                                    "description": "the short name of the corporation",
                                    "title": "get_corporations_corporation_id_ticker",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "corporation_name",
                                "ticker",
                                "member_count",
                                "ceo_id"
                            ],
                            "title": "get_corporations_corporation_id_ok",
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "Corporation not found",
                        "examples": {
                            "application/json": {
                                "error": "Not found message"
                            }
                        },
                        "schema": {
                            "description": "Not found",
                            "properties": {
                                "error": {
                                    "description": "Not found message",
                                    "title": "get_corporations_corporation_id_404_not_found",
                                    "type": "string"
                                }
                            },
                            "title": "get_corporations_corporation_id_not_found",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_corporations_corporation_id_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_corporations_corporation_id_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "summary": "Get corporation information",
                "tags": [
                    "Corporation"
                ],
                "x-alternate-versions": [
                    "v2"
                ],
                "x-cached-seconds": 3600
            }
        },
        "/corporations/{corporation_id}/alliancehistory/": {
            "get": {
                "description": "Get a list of all the alliances a corporation has been a member of\n\n---\n\nAlternate route: `/v1/corporations/{corporation_id}/alliancehistory/`\n\nAlternate route: `/latest/corporations/{corporation_id}/alliancehistory/`\n\nAlternate route: `/dev/corporations/{corporation_id}/alliancehistory/`\n\n\n---\n\nThis route is cached for up to 3600 seconds",
                "operationId": "get_corporations_corporation_id_alliancehistory",
                "parameters": [
                    {
                        "description": "An EVE corporation ID",
                        "format": "int32",
                        "in": "path",
                        "name": "corporation_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Alliance history for the given corporation",
                        "examples": {
                            "application/json": [
                                {
                                    "alliance": {
                                        "alliance_id": 99000006,
                                        "is_deleted": false
                                    },
                                    "record_id": 23,
                                    "start_date": "2016-10-25T14:46:00Z"
                                },
                                {
                                    "record_id": 1,
                                    "start_date": "2015-07-06T20:56:00Z"
                                }
                            ]
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok array",
                            "items": {
                                "description": "200 ok object",
                                "properties": {
                                    "alliance": {
                                        "description": "alliance object",
                                        "properties": {
                                            "alliance_id": {
                                                "description": "alliance_id integer",
                                                "format": "int32",
                                                "title": "get_corporations_corporation_id_alliancehistory_alliance_id",
                                                "type": "integer"
                                            },
                                            "is_deleted": {
                                                "description": "True if the alliance has been deleted",
                                                "title": "get_corporations_corporation_id_alliancehistory_is_deleted",
                                                "type": "boolean"
                                            }
                                        },
                                        "required": [
                                            "alliance_id",
                                            "is_deleted"
                                        ],
                                        "title": "get_corporations_corporation_id_alliancehistory_alliance",
                                        "type": "object"
                                    },
                                    "record_id": {
                                        "description": "An incrementing ID that can be used to canonically establish order of records in cases where dates may be ambiguous",
                                        "format": "int32",
                                        "title": "get_corporations_corporation_id_alliancehistory_record_id",
                                        "type": "integer"
                                    },
                                    "start_date": {
                                        "description": "start_date string",
                                        "format": "date-time",
                                        "title": "get_corporations_corporation_id_alliancehistory_start_date",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "start_date",
                                    "record_id"
                                ],
                                "title": "get_corporations_corporation_id_alliancehistory_200_ok",
                                "type": "object"
                            },
                            "title": "get_corporations_corporation_id_alliancehistory_ok",
                            "type": "array"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_corporations_corporation_id_alliancehistory_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_corporations_corporation_id_alliancehistory_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "summary": "Get alliance history",
                "tags": [
                    "Corporation"
                ],
                "x-alternate-versions": [
                    "dev",
                    "latest",
                    "v1"
                ],
                "x-cached-seconds": 3600
            }
        },
        "/corporations/{corporation_id}/icons/": {
            "get": {
                "description": "Get the icon urls for a corporation\n\n---\n\nAlternate route: `/v1/corporations/{corporation_id}/icons/`\n\nAlternate route: `/latest/corporations/{corporation_id}/icons/`\n\nAlternate route: `/dev/corporations/{corporation_id}/icons/`\n\n\n---\n\nThis route is cached for up to 3600 seconds",
                "operationId": "get_corporations_corporation_id_icons",
                "parameters": [
                    {
                        "description": "An EVE corporation ID",
                        "format": "int32",
                        "in": "path",
                        "name": "corporation_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Urls for icons for the given corporation id and server",
                        "examples": {
                            "application/json": {
                                "px128x128": "https://imageserver.eveonline.com/Corporation/1000010_128.png",
                                "px256x256": "https://imageserver.eveonline.com/Corporation/1000010_256.png",
                                "px64x64": "https://imageserver.eveonline.com/Corporation/1000010_64.png"
                            }
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok object",
                            "properties": {
                                "px128x128": {
                                    "description": "px128x128 string",
                                    "title": "get_corporations_corporation_id_icons_px128x128",
                                    "type": "string"
                                },
                                "px256x256": {
                                    "description": "px256x256 string",
                                    "title": "get_corporations_corporation_id_icons_px256x256",
                                    "type": "string"
                                },
                                "px64x64": {
                                    "description": "px64x64 string",
                                    "title": "get_corporations_corporation_id_icons_px64x64",
                                    "type": "string"
                                }
                            },
                            "title": "get_corporations_corporation_id_icons_ok",
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "No image server for this datasource",
                        "examples": {
                            "application/json": {
                                "error": "No image server for this datasource"
                            }
                        },
                        "schema": {
                            "description": "No image server for this datasource",
                            "properties": {
                                "error": {
                                    "description": "error message",
                                    "title": "get_corporations_corporation_id_icons_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_corporations_corporation_id_icons_not_found",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_corporations_corporation_id_icons_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_corporations_corporation_id_icons_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "summary": "Get corporation icon",
                "tags": [
                    "Corporation"
                ],
                "x-alternate-versions": [
                    "dev",
                    "latest",
                    "v1"
                ],
                "x-cached-seconds": 3600
            }
        },
        "/corporations/{corporation_id}/members/": {
            "get": {
                "description": "Read the current list of members if the calling character is a member.\n\n---\n\nAlternate route: `/v2/corporations/{corporation_id}/members/`\n\nAlternate route: `/latest/corporations/{corporation_id}/members/`\n\nAlternate route: `/dev/corporations/{corporation_id}/members/`\n\n\n---\n\nThis route is cached for up to 3600 seconds",
                "operationId": "get_corporations_corporation_id_members",
                "parameters": [
                    {
                        "description": "A corporation ID",
                        "format": "int32",
                        "in": "path",
                        "name": "corporation_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "description": "Access token to use, if preferred over a header",
                        "in": "query",
                        "name": "token",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of member character IDs",
                        "examples": {
                            "application/json": [
                                {
                                    "character_id": 90000001
                                },
                                {
                                    "character_id": 90000002
                                }
                            ]
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok array",
                            "items": {
                                "description": "200 ok object",
                                "properties": {
                                    "character_id": {
                                        "description": "character_id integer",
                                        "format": "int32",
                                        "title": "get_corporations_corporation_id_members_character_id",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "character_id"
                                ],
                                "title": "get_corporations_corporation_id_members_200_ok",
                                "type": "object"
                            },
                            "title": "get_corporations_corporation_id_members_ok",
                            "type": "array"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "examples": {
                            "application/json": {
                                "error": "Token is not valid for scope(s): esi-corporations.read_corporation_membership.v1"
                            }
                        },
                        "schema": {
                            "description": "Forbidden",
                            "properties": {
                                "error": {
                                    "description": "Forbidden message",
                                    "title": "get_corporations_corporation_id_members_403_forbidden",
                                    "type": "string"
                                }
                            },
                            "title": "get_corporations_corporation_id_members_forbidden",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_corporations_corporation_id_members_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_corporations_corporation_id_members_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "evesso": [
                            "esi-corporations.read_corporation_membership.v1"
                        ]
                    }
                ],
                "summary": "Get corporation members",
                "tags": [
                    "Corporation"
                ],
                "x-alternate-versions": [
                    "dev",
                    "latest",
                    "v2"
                ],
                "x-cached-seconds": 3600
            }
        },
        "/corporations/{corporation_id}/roles/": {
            "get": {
                "description": "Return the roles of all members if the character has the personnel manager role or any grantable role.\n\n---\n\nAlternate route: `/v1/corporations/{corporation_id}/roles/`\n\nAlternate route: `/latest/corporations/{corporation_id}/roles/`\n\nAlternate route: `/dev/corporations/{corporation_id}/roles/`\n\n\n---\n\nThis route is cached for up to 3600 seconds",
                "operationId": "get_corporations_corporation_id_roles",
                "parameters": [
                    {
                        "description": "A corporation ID",
                        "format": "int32",
                        "in": "path",
                        "name": "corporation_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "description": "Access token to use, if preferred over a header",
                        "in": "query",
                        "name": "token",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of member character ID's and roles",
                        "examples": {
                            "application/json": [
                                {
                                    "character_id": 1000171,
                                    "roles": [
                                        "Director",
                                        "Station_Manager"
                                    ]
                                }
                            ]
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok array",
                            "items": {
                                "description": "200 ok object",
                                "properties": {
                                    "character_id": {
                                        "description": "character_id integer",
                                        "format": "int32",
                                        "title": "get_corporations_corporation_id_roles_character_id",
                                        "type": "integer"
                                    },
                                    "grantable_roles": {
                                        "description": "grantable_roles array",
                                        "items": {
                                            "description": "grantable_role string",
                                            "enum": [
                                                "Director",
                                                "Personnel_Manager",
                                                "Accountant",
                                                "Security_Officer",
                                                "Factory_Manager",
                                                "Station_Manager",
                                                "Auditor",
                                                "Hangar_Take_1",
                                                "Hangar_Take_2",
                                                "Hangar_Take_3",
                                                "Hangar_Take_4",
                                                "Hangar_Take_5",
                                                "Hangar_Take_6",
                                                "Hangar_Take_7",
                                                "Hangar_Query_1",
                                                "Hangar_Query_2",
                                                "Hangar_Query_3",
                                                "Hangar_Query_4",
                                                "Hangar_Query_5",
                                                "Hangar_Query_6",
                                                "Hangar_Query_7",
                                                "Account_Take_1",
                                                "Account_Take_2",
                                                "Account_Take_3",
                                                "Account_Take_4",
                                                "Account_Take_5",
                                                "Account_Take_6",
                                                "Account_Take_7",
                                                "Diplomat",
                                                "Config_Equipment",
                                                "Container_Take_1",
                                                "Container_Take_2",
                                                "Container_Take_3",
                                                "Container_Take_4",
                                                "Container_Take_5",
                                                "Container_Take_6",
                                                "Container_Take_7",
                                                "Rent_Office",
                                                "Rent_Factory_Facility",
                                                "Rent_Research_Facility",
                                                "Junior_Accountant",
                                                "Config_Starbase_Equipment",
                                                "Trader",
                                                "Communications_Officer",
                                                "Contract_Manager",
                                                "Starbase_Defense_Operator",
                                                "Starbase_Fuel_Technician",
                                                "Fitting_Manager",
                                                "Terrestrial_Combat_Officer",
                                                "Terrestrial_Logistics_Officer"
                                            ],
                                            "title": "get_corporations_corporation_id_roles_grantable_role",
                                            "type": "string",
                                            "uniqueItems": true
                                        },
                                        "title": "get_corporations_corporation_id_roles_grantable_roles",
                                        "type": "array"
                                    },
                                    "grantable_roles_at_base": {
                                        "description": "grantable_roles_at_base array",
                                        "items": {
                                            "description": "grantable_roles_at_base string",
                                            "enum": [
                                                "Director",
                                                "Personnel_Manager",
                                                "Accountant",
                                                "Security_Officer",
                                                "Factory_Manager",
                                                "Station_Manager",
                                                "Auditor",
                                                "Hangar_Take_1",
                                                "Hangar_Take_2",
                                                "Hangar_Take_3",
                                                "Hangar_Take_4",
                                                "Hangar_Take_5",
                                                "Hangar_Take_6",
                                                "Hangar_Take_7",
                                                "Hangar_Query_1",
                                                "Hangar_Query_2",
                                                "Hangar_Query_3",
                                                "Hangar_Query_4",
                                                "Hangar_Query_5",
                                                "Hangar_Query_6",
                                                "Hangar_Query_7",
                                                "Account_Take_1",
                                                "Account_Take_2",
                                                "Account_Take_3",
                                                "Account_Take_4",
                                                "Account_Take_5",
                                                "Account_Take_6",
                                                "Account_Take_7",
                                                "Diplomat",
                                                "Config_Equipment",
                                                "Container_Take_1",
                                                "Container_Take_2",
                                                "Container_Take_3",
                                                "Container_Take_4",
                                                "Container_Take_5",
                                                "Container_Take_6",
                                                "Container_Take_7",
                                                "Rent_Office",
                                                "Rent_Factory_Facility",
                                                "Rent_Research_Facility",
                                                "Junior_Accountant",
                                                "Config_Starbase_Equipment",
                                                "Trader",
                                                "Communications_Officer",
                                                "Contract_Manager",
                                                "Starbase_Defense_Operator",
                                                "Starbase_Fuel_Technician",
                                                "Fitting_Manager",
                                                "Terrestrial_Combat_Officer",
                                                "Terrestrial_Logistics_Officer"
                                            ],
                                            "title": "get_corporations_corporation_id_roles_grantable_roles_at_base",
                                            "type": "string",
                                            "uniqueItems": true
                                        },
                                        "title": "get_corporations_corporation_id_roles_grantable_roles_at_base",
                                        "type": "array"
                                    },
                                    "grantable_roles_at_hq": {
                                        "description": "grantable_roles_at_hq array",
                                        "items": {
                                            "description": "grantable_roles_at_hq string",
                                            "enum": [
                                                "Director",
                                                "Personnel_Manager",
                                                "Accountant",
                                                "Security_Officer",
                                                "Factory_Manager",
                                                "Station_Manager",
                                                "Auditor",
                                                "Hangar_Take_1",
                                                "Hangar_Take_2",
                                                "Hangar_Take_3",
                                                "Hangar_Take_4",
                                                "Hangar_Take_5",
                                                "Hangar_Take_6",
                                                "Hangar_Take_7",
                                                "Hangar_Query_1",
                                                "Hangar_Query_2",
                                                "Hangar_Query_3",
                                                "Hangar_Query_4",
                                                "Hangar_Query_5",
                                                "Hangar_Query_6",
                                                "Hangar_Query_7",
                                                "Account_Take_1",
                                                "Account_Take_2",
                                                "Account_Take_3",
                                                "Account_Take_4",
                                                "Account_Take_5",
                                                "Account_Take_6",
                                                "Account_Take_7",
                                                "Diplomat",
                                                "Config_Equipment",
                                                "Container_Take_1",
                                                "Container_Take_2",
                                                "Container_Take_3",
                                                "Container_Take_4",
                                                "Container_Take_5",
                                                "Container_Take_6",
                                                "Container_Take_7",
                                                "Rent_Office",
                                                "Rent_Factory_Facility",
                                                "Rent_Research_Facility",
                                                "Junior_Accountant",
                                                "Config_Starbase_Equipment",
                                                "Trader",
                                                "Communications_Officer",
                                                "Contract_Manager",
                                                "Starbase_Defense_Operator",
                                                "Starbase_Fuel_Technician",
                                                "Fitting_Manager",
                                                "Terrestrial_Combat_Officer",
                                                "Terrestrial_Logistics_Officer"
                                            ],
                                            "title": "get_corporations_corporation_id_roles_grantable_roles_at_hq",
                                            "type": "string",
                                            "uniqueItems": true
                                        },
                                        "title": "get_corporations_corporation_id_roles_grantable_roles_at_hq",
                                        "type": "array"
                                    },
                                    "grantable_roles_at_other": {
                                        "description": "grantable_roles_at_other array",
                                        "items": {
                                            "description": "grantable_roles_at_other string",
                                            "enum": [
                                                "Director",
                                                "Personnel_Manager",
                                                "Accountant",
                                                "Security_Officer",
                                                "Factory_Manager",
                                                "Station_Manager",
                                                "Auditor",
                                                "Hangar_Take_1",
                                                "Hangar_Take_2",
                                                "Hangar_Take_3",
                                                "Hangar_Take_4",
                                                "Hangar_Take_5",
                                                "Hangar_Take_6",
                                                "Hangar_Take_7",
                                                "Hangar_Query_1",
                                                "Hangar_Query_2",
                                                "Hangar_Query_3",
                                                "Hangar_Query_4",
                                                "Hangar_Query_5",
                                                "Hangar_Query_6",
                                                "Hangar_Query_7",
                                                "Account_Take_1",
                                                "Account_Take_2",
                                                "Account_Take_3",
                                                "Account_Take_4",
                                                "Account_Take_5",
                                                "Account_Take_6",
                                                "Account_Take_7",
                                                "Diplomat",
                                                "Config_Equipment",
                                                "Container_Take_1",
                                                "Container_Take_2",
                                                "Container_Take_3",
                                                "Container_Take_4",
                                                "Container_Take_5",
                                                "Container_Take_6",
                                                "Container_Take_7",
                                                "Rent_Office",
                                                "Rent_Factory_Facility",
                                                "Rent_Research_Facility",
                                                "Junior_Accountant",
                                                "Config_Starbase_Equipment",
                                                "Trader",
                                                "Communications_Officer",
                                                "Contract_Manager",
                                                "Starbase_Defense_Operator",
                                                "Starbase_Fuel_Technician",
                                                "Fitting_Manager",
                                                "Terrestrial_Combat_Officer",
                                                "Terrestrial_Logistics_Officer"
                                            ],
                                            "title": "get_corporations_corporation_id_roles_grantable_roles_at_other",
                                            "type": "string",
                                            "uniqueItems": true
                                        },
                                        "title": "get_corporations_corporation_id_roles_grantable_roles_at_other",
                                        "type": "array"
                                    },
                                    "roles": {
                                        "description": "roles array",
                                        "items": {
                                            "description": "role string",
                                            "enum": [
                                                "Director",
                                                "Personnel_Manager",
                                                "Accountant",
                                                "Security_Officer",
                                                "Factory_Manager",
                                                "Station_Manager",
                                                "Auditor",
                                                "Hangar_Take_1",
                                                "Hangar_Take_2",
                                                "Hangar_Take_3",
                                                "Hangar_Take_4",
                                                "Hangar_Take_5",
                                                "Hangar_Take_6",
                                                "Hangar_Take_7",
                                                "Hangar_Query_1",
                                                "Hangar_Query_2",
                                                "Hangar_Query_3",
                                                "Hangar_Query_4",
                                                "Hangar_Query_5",
                                                "Hangar_Query_6",
                                                "Hangar_Query_7",
                                                "Account_Take_1",
                                                "Account_Take_2",
                                                "Account_Take_3",
                                                "Account_Take_4",
                                                "Account_Take_5",
                                                "Account_Take_6",
                                                "Account_Take_7",
                                                "Diplomat",
                                                "Config_Equipment",
                                                "Container_Take_1",
                                                "Container_Take_2",
                                                "Container_Take_3",
                                                "Container_Take_4",
                                                "Container_Take_5",
                                                "Container_Take_6",
                                                "Container_Take_7",
                                                "Rent_Office",
                                                "Rent_Factory_Facility",
                                                "Rent_Research_Facility",
                                                "Junior_Accountant",
                                                "Config_Starbase_Equipment",
                                                "Trader",
                                                "Communications_Officer",
                                                "Contract_Manager",
                                                "Starbase_Defense_Operator",
                                                "Starbase_Fuel_Technician",
                                                "Fitting_Manager",
                                                "Terrestrial_Combat_Officer",
                                                "Terrestrial_Logistics_Officer"
                                            ],
                                            "title": "get_corporations_corporation_id_roles_role",
                                            "type": "string",
                                            "uniqueItems": true
                                        },
                                        "title": "get_corporations_corporation_id_roles_roles",
                                        "type": "array"
                                    },
                                    "roles_at_base": {
                                        "description": "roles_at_base array",
                                        "items": {
                                            "description": "roles_at_base string",
                                            "enum": [
                                                "Director",
                                                "Personnel_Manager",
                                                "Accountant",
                                                "Security_Officer",
                                                "Factory_Manager",
                                                "Station_Manager",
                                                "Auditor",
                                                "Hangar_Take_1",
                                                "Hangar_Take_2",
                                                "Hangar_Take_3",
                                                "Hangar_Take_4",
                                                "Hangar_Take_5",
                                                "Hangar_Take_6",
                                                "Hangar_Take_7",
                                                "Hangar_Query_1",
                                                "Hangar_Query_2",
                                                "Hangar_Query_3",
                                                "Hangar_Query_4",
                                                "Hangar_Query_5",
                                                "Hangar_Query_6",
                                                "Hangar_Query_7",
                                                "Account_Take_1",
                                                "Account_Take_2",
                                                "Account_Take_3",
                                                "Account_Take_4",
                                                "Account_Take_5",
                                                "Account_Take_6",
                                                "Account_Take_7",
                                                "Diplomat",
                                                "Config_Equipment",
                                                "Container_Take_1",
                                                "Container_Take_2",
                                                "Container_Take_3",
                                                "Container_Take_4",
                                                "Container_Take_5",
                                                "Container_Take_6",
                                                "Container_Take_7",
                                                "Rent_Office",
                                                "Rent_Factory_Facility",
                                                "Rent_Research_Facility",
                                                "Junior_Accountant",
                                                "Config_Starbase_Equipment",
                                                "Trader",
                                                "Communications_Officer",
                                                "Contract_Manager",
                                                "Starbase_Defense_Operator",
                                                "Starbase_Fuel_Technician",
                                                "Fitting_Manager",
                                                "Terrestrial_Combat_Officer",
                                                "Terrestrial_Logistics_Officer"
                                            ],
                                            "title": "get_corporations_corporation_id_roles_roles_at_base",
                                            "type": "string",
                                            "uniqueItems": true
                                        },
                                        "title": "get_corporations_corporation_id_roles_roles_at_base",
                                        "type": "array"
                                    },
                                    "roles_at_hq": {
                                        "description": "roles_at_hq array",
                                        "items": {
                                            "description": "roles_at_hq string",
                                            "enum": [
                                                "Director",
                                                "Personnel_Manager",
                                                "Accountant",
                                                "Security_Officer",
                                                "Factory_Manager",
                                                "Station_Manager",
                                                "Auditor",
                                                "Hangar_Take_1",
                                                "Hangar_Take_2",
                                                "Hangar_Take_3",
                                                "Hangar_Take_4",
                                                "Hangar_Take_5",
                                                "Hangar_Take_6",
                                                "Hangar_Take_7",
                                                "Hangar_Query_1",
                                                "Hangar_Query_2",
                                                "Hangar_Query_3",
                                                "Hangar_Query_4",
                                                "Hangar_Query_5",
                                                "Hangar_Query_6",
                                                "Hangar_Query_7",
                                                "Account_Take_1",
                                                "Account_Take_2",
                                                "Account_Take_3",
                                                "Account_Take_4",
                                                "Account_Take_5",
                                                "Account_Take_6",
                                                "Account_Take_7",
                                                "Diplomat",
                                                "Config_Equipment",
                                                "Container_Take_1",
                                                "Container_Take_2",
                                                "Container_Take_3",
                                                "Container_Take_4",
                                                "Container_Take_5",
                                                "Container_Take_6",
                                                "Container_Take_7",
                                                "Rent_Office",
                                                "Rent_Factory_Facility",
                                                "Rent_Research_Facility",
                                                "Junior_Accountant",
                                                "Config_Starbase_Equipment",
                                                "Trader",
                                                "Communications_Officer",
                                                "Contract_Manager",
                                                "Starbase_Defense_Operator",
                                                "Starbase_Fuel_Technician",
                                                "Fitting_Manager",
                                                "Terrestrial_Combat_Officer",
                                                "Terrestrial_Logistics_Officer"
                                            ],
                                            "title": "get_corporations_corporation_id_roles_roles_at_hq",
                                            "type": "string",
                                            "uniqueItems": true
                                        },
                                        "title": "get_corporations_corporation_id_roles_roles_at_hq",
                                        "type": "array"
                                    },
                                    "roles_at_other": {
                                        "description": "roles_at_other array",
                                        "items": {
                                            "description": "roles_at_other string",
                                            "enum": [
                                                "Director",
                                                "Personnel_Manager",
                                                "Accountant",
                                                "Security_Officer",
                                                "Factory_Manager",
                                                "Station_Manager",
                                                "Auditor",
                                                "Hangar_Take_1",
                                                "Hangar_Take_2",
                                                "Hangar_Take_3",
                                                "Hangar_Take_4",
                                                "Hangar_Take_5",
                                                "Hangar_Take_6",
                                                "Hangar_Take_7",
                                                "Hangar_Query_1",
                                                "Hangar_Query_2",
                                                "Hangar_Query_3",
                                                "Hangar_Query_4",
                                                "Hangar_Query_5",
                                                "Hangar_Query_6",
                                                "Hangar_Query_7",
                                                "Account_Take_1",
                                                "Account_Take_2",
                                                "Account_Take_3",
                                                "Account_Take_4",
                                                "Account_Take_5",
                                                "Account_Take_6",
                                                "Account_Take_7",
                                                "Diplomat",
                                                "Config_Equipment",
                                                "Container_Take_1",
                                                "Container_Take_2",
                                                "Container_Take_3",
                                                "Container_Take_4",
                                                "Container_Take_5",
                                                "Container_Take_6",
                                                "Container_Take_7",
                                                "Rent_Office",
                                                "Rent_Factory_Facility",
                                                "Rent_Research_Facility",
                                                "Junior_Accountant",
                                                "Config_Starbase_Equipment",
                                                "Trader",
                                                "Communications_Officer",
                                                "Contract_Manager",
                                                "Starbase_Defense_Operator",
                                                "Starbase_Fuel_Technician",
                                                "Fitting_Manager",
                                                "Terrestrial_Combat_Officer",
                                                "Terrestrial_Logistics_Officer"
                                            ],
                                            "title": "get_corporations_corporation_id_roles_roles_at_other",
                                            "type": "string",
                                            "uniqueItems": true
                                        },
                                        "title": "get_corporations_corporation_id_roles_roles_at_other",
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "character_id"
                                ],
                                "title": "get_corporations_corporation_id_roles_200_ok",
                                "type": "object"
                            },
                            "title": "get_corporations_corporation_id_roles_ok",
                            "type": "array"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "examples": {
                            "application/json": {
                                "error": "Token is not valid for scope(s): esi-corporations.read_corporation_membership.v1"
                            }
                        },
                        "schema": {
                            "description": "Forbidden",
                            "properties": {
                                "error": {
                                    "description": "Forbidden message",
                                    "title": "get_corporations_corporation_id_roles_403_forbidden",
                                    "type": "string"
                                }
                            },
                            "title": "get_corporations_corporation_id_roles_forbidden",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_corporations_corporation_id_roles_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_corporations_corporation_id_roles_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "evesso": [
                            "esi-corporations.read_corporation_membership.v1"
                        ]
                    }
                ],
                "summary": "Get corporation member roles",
                "tags": [
                    "Corporation"
                ],
                "x-alternate-versions": [
                    "dev",
                    "latest",
                    "v1"
                ],
                "x-cached-seconds": 3600
            }
        },
        "/corporations/{corporation_id}/structures/": {
            "get": {
                "description": "Get a list of corporation structures\n\n---\n\nAlternate route: `/v1/corporations/{corporation_id}/structures/`\n\nAlternate route: `/latest/corporations/{corporation_id}/structures/`\n\nAlternate route: `/dev/corporations/{corporation_id}/structures/`\n\n\n---\n\nThis route is cached for up to 3600 seconds",
                "operationId": "get_corporations_corporation_id_structures",
                "parameters": [
                    {
                        "description": "A corporation ID",
                        "format": "int32",
                        "in": "path",
                        "name": "corporation_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "default": "en-us",
                        "description": "Language to use in the response",
                        "enum": [
                            "de",
                            "en-us",
                            "fr",
                            "ja",
                            "ru",
                            "zh"
                        ],
                        "in": "query",
                        "name": "language",
                        "type": "string"
                    },
                    {
                        "description": "Which page to query, 250 structures per page",
                        "format": "int32",
                        "in": "query",
                        "minimum": 1,
                        "name": "page",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "description": "Access token to use, if preferred over a header",
                        "in": "query",
                        "name": "token",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of corporation structures' information",
                        "examples": {
                            "application/json": [
                                {
                                    "corporation_id": 667531913,
                                    "current_vul": [
                                        {
                                            "day": 1,
                                            "hour": 2
                                        }
                                    ],
                                    "next_vul": [
                                        {
                                            "day": 3,
                                            "hour": 4
                                        }
                                    ],
                                    "profile_id": 11237,
                                    "structure_id": 1021975535893,
                                    "system_id": 30004763,
                                    "type_id": 35833
                                }
                            ]
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Content-Language": {
                                "description": "The language used in the response",
                                "enum": [
                                    "de",
                                    "en-us",
                                    "fr",
                                    "ja",
                                    "ru",
                                    "zh"
                                ],
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok array",
                            "items": {
                                "description": "200 ok object",
                                "properties": {
                                    "corporation_id": {
                                        "description": "ID of the corporation that owns the structure",
                                        "format": "int32",
                                        "title": "get_corporations_corporation_id_structures_corporation_id",
                                        "type": "integer"
                                    },
                                    "current_vul": {
                                        "description": "This week's vulnerability windows, Monday is day 0",
                                        "items": {
                                            "description": "current_vul object",
                                            "properties": {
                                                "day": {
                                                    "description": "day integer",
                                                    "format": "int32",
                                                    "title": "get_corporations_corporation_id_structures_day",
                                                    "type": "integer"
                                                },
                                                "hour": {
                                                    "description": "hour integer",
                                                    "format": "int32",
                                                    "title": "get_corporations_corporation_id_structures_hour",
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "day",
                                                "hour"
                                            ],
                                            "title": "get_corporations_corporation_id_structures_current_vul",
                                            "type": "object"
                                        },
                                        "title": "get_corporations_corporation_id_structures_current_vul",
                                        "type": "array"
                                    },
                                    "fuel_expires": {
                                        "description": "Date on which the structure will run out of fuel",
                                        "format": "date",
                                        "title": "get_corporations_corporation_id_structures_fuel_expires",
                                        "type": "string"
                                    },
                                    "next_vul": {
                                        "description": "Next week's vulnerability windows, Monday is day 0",
                                        "items": {
                                            "description": "next_vul object",
                                            "properties": {
                                                "day": {
                                                    "description": "day integer",
                                                    "format": "int32",
                                                    "title": "get_corporations_corporation_id_structures_day",
                                                    "type": "integer"
                                                },
                                                "hour": {
                                                    "description": "hour integer",
                                                    "format": "int32",
                                                    "title": "get_corporations_corporation_id_structures_hour",
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "day",
                                                "hour"
                                            ],
                                            "title": "get_corporations_corporation_id_structures_next_vul",
                                            "type": "object"
                                        },
                                        "title": "get_corporations_corporation_id_structures_next_vul",
                                        "type": "array"
                                    },
                                    "profile_id": {
                                        "description": "The id of the ACL profile for this citadel",
                                        "format": "int32",
                                        "title": "get_corporations_corporation_id_structures_profile_id",
                                        "type": "integer"
                                    },
                                    "services": {
                                        "description": "Contains a list of service upgrades, and their state",
                                        "items": {
                                            "description": "service object",
                                            "properties": {
                                                "name": {
                                                    "description": "name string",
                                                    "title": "get_corporations_corporation_id_structures_name",
                                                    "type": "string"
                                                },
                                                "state": {
                                                    "description": "state string",
                                                    "enum": [
                                                        "online",
                                                        "offline",
                                                        "cleanup"
                                                    ],
                                                    "title": "get_corporations_corporation_id_structures_state",
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "name",
                                                "state"
                                            ],
                                            "title": "get_corporations_corporation_id_structures_service",
                                            "type": "object"
                                        },
                                        "title": "get_corporations_corporation_id_structures_services",
                                        "type": "array"
                                    },
                                    "state_timer_end": {
                                        "description": "Date at which the structure will move to it's next state",
                                        "format": "date",
                                        "title": "get_corporations_corporation_id_structures_state_timer_end",
                                        "type": "string"
                                    },
                                    "state_timer_start": {
                                        "description": "Date at which the structure entered it's current state",
                                        "format": "date",
                                        "title": "get_corporations_corporation_id_structures_state_timer_start",
                                        "type": "string"
                                    },
                                    "structure_id": {
                                        "description": "The Item ID of the structure",
                                        "format": "int64",
                                        "title": "get_corporations_corporation_id_structures_structure_id",
                                        "type": "integer"
                                    },
                                    "system_id": {
                                        "description": "The solar system the structure is in",
                                        "format": "int32",
                                        "title": "get_corporations_corporation_id_structures_system_id",
                                        "type": "integer"
                                    },
                                    "type_id": {
                                        "description": "The type id of the structure",
                                        "format": "int32",
                                        "title": "get_corporations_corporation_id_structures_type_id",
                                        "type": "integer"
                                    },
                                    "unanchors_at": {
                                        "description": "Date at which the structure will unanchor",
                                        "format": "date",
                                        "title": "get_corporations_corporation_id_structures_unanchors_at",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "structure_id",
                                    "type_id",
                                    "corporation_id",
                                    "system_id",
                                    "profile_id",
                                    "current_vul",
                                    "next_vul"
                                ],
                                "title": "get_corporations_corporation_id_structures_200_ok",
                                "type": "object"
                            },
                            "title": "get_corporations_corporation_id_structures_ok",
                            "type": "array"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "examples": {
                            "application/json": {
                                "error": "Token is not valid for scope(s): esi-corporations.read_structures.v1"
                            }
                        },
                        "schema": {
                            "description": "Forbidden",
                            "properties": {
                                "error": {
                                    "description": "Forbidden message",
                                    "title": "get_corporations_corporation_id_structures_403_forbidden",
                                    "type": "string"
                                }
                            },
                            "title": "get_corporations_corporation_id_structures_forbidden",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_corporations_corporation_id_structures_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_corporations_corporation_id_structures_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "evesso": [
                            "esi-corporations.read_structures.v1"
                        ]
                    }
                ],
                "summary": "Get corporation structures",
                "tags": [
                    "Corporation"
                ],
                "x-alternate-versions": [
                    "dev",
                    "latest",
                    "v1"
                ],
                "x-cached-seconds": 3600
            }
        },
        "/corporations/{corporation_id}/structures/{structure_id}/": {
            "put": {
                "description": "Update the vulnerability window schedule of a corporation structure\n\n---\n\nAlternate route: `/v1/corporations/{corporation_id}/structures/{structure_id}/`\n\nAlternate route: `/latest/corporations/{corporation_id}/structures/{structure_id}/`\n\nAlternate route: `/dev/corporations/{corporation_id}/structures/{structure_id}/`\n",
                "operationId": "put_corporations_corporation_id_structures_structure_id",
                "parameters": [
                    {
                        "description": "A corporation ID",
                        "format": "int32",
                        "in": "path",
                        "name": "corporation_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "description": "New vulnerability window schedule for the structure",
                        "in": "body",
                        "name": "new_schedule",
                        "required": true,
                        "schema": {
                            "description": "new_schedule array",
                            "items": {
                                "description": "new_schedule object",
                                "properties": {
                                    "day": {
                                        "description": "Day of the week, zero-indexed to Monday",
                                        "format": "int32",
                                        "maximum": 6,
                                        "minimum": 0,
                                        "title": "put_corporations_corporation_id_structures_structure_id_day",
                                        "type": "integer"
                                    },
                                    "hour": {
                                        "description": "Hour of the day evetime, zero-indexed to midnight",
                                        "format": "int32",
                                        "maximum": 23,
                                        "minimum": 0,
                                        "title": "put_corporations_corporation_id_structures_structure_id_hour",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "day",
                                    "hour"
                                ],
                                "title": "put_corporations_corporation_id_structures_structure_id_new_schedule",
                                "type": "object"
                            },
                            "minItems": 1,
                            "title": "put_corporations_corporation_id_structures_structure_id_new_schedule",
                            "type": "array"
                        }
                    },
                    {
                        "description": "A structure ID",
                        "format": "int64",
                        "in": "path",
                        "name": "structure_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Access token to use, if preferred over a header",
                        "in": "query",
                        "name": "token",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Structure vulnerability window updated"
                    },
                    "403": {
                        "description": "Forbidden",
                        "examples": {
                            "application/json": {
                                "error": "Token is not valid for scope(s): esi-corporations.write_structures.v1"
                            }
                        },
                        "schema": {
                            "description": "Forbidden",
                            "properties": {
                                "error": {
                                    "description": "Forbidden message",
                                    "title": "put_corporations_corporation_id_structures_structure_id_403_forbidden",
                                    "type": "string"
                                }
                            },
                            "title": "put_corporations_corporation_id_structures_structure_id_forbidden",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "put_corporations_corporation_id_structures_structure_id_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "put_corporations_corporation_id_structures_structure_id_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "evesso": [
                            "esi-corporations.write_structures.v1"
                        ]
                    }
                ],
                "summary": "Update structure vulnerability schedule",
                "tags": [
                    "Corporation"
                ],
                "x-alternate-versions": [
                    "dev",
                    "latest",
                    "v1"
                ]
            }
        },
        "/dogma/attributes/": {
            "get": {
                "description": "Get a list of dogma attribute ids\n\n---\n\nAlternate route: `/v1/dogma/attributes/`\n\nAlternate route: `/latest/dogma/attributes/`\n\nAlternate route: `/dev/dogma/attributes/`\n\n\n---\n\nThis route is cached for up to 3600 seconds",
                "operationId": "get_dogma_attributes",
                "parameters": [
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of dogma attribute ids",
                        "examples": {
                            "application/json": [
                                1,
                                2,
                                3
                            ]
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok array",
                            "items": {
                                "description": "200 ok integer",
                                "format": "int32",
                                "title": "get_dogma_attributes_200_ok",
                                "type": "integer"
                            },
                            "title": "get_dogma_attributes_ok",
                            "type": "array"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_dogma_attributes_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_dogma_attributes_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "summary": "Get attributes",
                "tags": [
                    "Dogma"
                ],
                "x-alternate-versions": [
                    "dev",
                    "latest",
                    "v1"
                ],
                "x-cached-seconds": 3600
            }
        },
        "/dogma/attributes/{attribute_id}/": {
            "get": {
                "description": "Get information on a dogma attribute\n\n---\n\nAlternate route: `/v1/dogma/attributes/{attribute_id}/`\n\nAlternate route: `/latest/dogma/attributes/{attribute_id}/`\n\nAlternate route: `/dev/dogma/attributes/{attribute_id}/`\n\n\n---\n\nThis route is cached for up to 3600 seconds",
                "operationId": "get_dogma_attributes_attribute_id",
                "parameters": [
                    {
                        "description": "A dogma attribute ID",
                        "format": "int32",
                        "in": "path",
                        "name": "attribute_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Information about a dogma attribute",
                        "examples": {
                            "application/json": {
                                "attribute_id": 20,
                                "default_value": 1,
                                "description": "Factor by which topspeed increases.",
                                "display_name": "Maximum Velocity Bonus",
                                "high_is_good": true,
                                "icon_id": 1389,
                                "name": "speedFactor",
                                "published": true,
                                "stackable": false,
                                "unit_id": 124
                            }
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok object",
                            "properties": {
                                "attribute_id": {
                                    "description": "attribute_id integer",
                                    "format": "int32",
                                    "title": "get_dogma_attributes_attribute_id_attribute_id",
                                    "type": "integer"
                                },
                                "default_value": {
                                    "description": "default_value number",
                                    "format": "float",
                                    "title": "get_dogma_attributes_attribute_id_default_value",
                                    "type": "number"
                                },
                                "description": {
                                    "description": "description string",
                                    "title": "get_dogma_attributes_attribute_id_description",
                                    "type": "string"
                                },
                                "display_name": {
                                    "description": "display_name string",
                                    "title": "get_dogma_attributes_attribute_id_display_name",
                                    "type": "string"
                                },
                                "high_is_good": {
                                    "description": "high_is_good boolean",
                                    "title": "get_dogma_attributes_attribute_id_high_is_good",
                                    "type": "boolean"
                                },
                                "icon_id": {
                                    "description": "icon_id integer",
                                    "format": "int32",
                                    "title": "get_dogma_attributes_attribute_id_icon_id",
                                    "type": "integer"
                                },
                                "name": {
                                    "description": "name string",
                                    "title": "get_dogma_attributes_attribute_id_name",
                                    "type": "string"
                                },
                                "published": {
                                    "description": "published boolean",
                                    "title": "get_dogma_attributes_attribute_id_published",
                                    "type": "boolean"
                                },
                                "stackable": {
                                    "description": "stackable boolean",
                                    "title": "get_dogma_attributes_attribute_id_stackable",
                                    "type": "boolean"
                                },
                                "unit_id": {
                                    "description": "unit_id integer",
                                    "format": "int32",
                                    "title": "get_dogma_attributes_attribute_id_unit_id",
                                    "type": "integer"
                                }
                            },
                            "required": [
                                "attribute_id"
                            ],
                            "title": "get_dogma_attributes_attribute_id_ok",
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "Dogma attribute not found",
                        "examples": {
                            "application/json": {
                                "error": "Not found message"
                            }
                        },
                        "schema": {
                            "description": "Not found",
                            "properties": {
                                "error": {
                                    "description": "Not found message",
                                    "title": "get_dogma_attributes_attribute_id_404_not_found",
                                    "type": "string"
                                }
                            },
                            "title": "get_dogma_attributes_attribute_id_not_found",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_dogma_attributes_attribute_id_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_dogma_attributes_attribute_id_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "summary": "Get attribute information",
                "tags": [
                    "Dogma"
                ],
                "x-alternate-versions": [
                    "dev",
                    "latest",
                    "v1"
                ],
                "x-cached-seconds": 3600
            }
        },
        "/dogma/effects/": {
            "get": {
                "description": "Get a list of dogma effect ids\n\n---\n\nAlternate route: `/v1/dogma/effects/`\n\nAlternate route: `/latest/dogma/effects/`\n\nAlternate route: `/dev/dogma/effects/`\n\n\n---\n\nThis route is cached for up to 3600 seconds",
                "operationId": "get_dogma_effects",
                "parameters": [
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of dogma effect ids",
                        "examples": {
                            "application/json": [
                                1,
                                2,
                                3
                            ]
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok array",
                            "items": {
                                "description": "200 ok integer",
                                "format": "int32",
                                "title": "get_dogma_effects_200_ok",
                                "type": "integer"
                            },
                            "title": "get_dogma_effects_ok",
                            "type": "array"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_dogma_effects_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_dogma_effects_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "summary": "Get effects",
                "tags": [
                    "Dogma"
                ],
                "x-alternate-versions": [
                    "dev",
                    "latest",
                    "v1"
                ],
                "x-cached-seconds": 3600
            }
        },
        "/dogma/effects/{effect_id}/": {
            "get": {
                "description": "Get information on a dogma effect\n\n---\n\nAlternate route: `/v1/dogma/effects/{effect_id}/`\n\nAlternate route: `/latest/dogma/effects/{effect_id}/`\n\nAlternate route: `/dev/dogma/effects/{effect_id}/`\n\n\n---\n\nThis route is cached for up to 3600 seconds",
                "operationId": "get_dogma_effects_effect_id",
                "parameters": [
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "description": "A dogma effect ID",
                        "format": "int32",
                        "in": "path",
                        "name": "effect_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Information about a dogma effect",
                        "examples": {
                            "application/json": {
                                "description": "Requires a high power slot.",
                                "disallow_auto_repeat": false,
                                "display_name": "High power",
                                "effect_category": 0,
                                "effect_id": 12,
                                "electronic_chance": false,
                                "icon_id": 293,
                                "is_assistance": false,
                                "is_offensive": false,
                                "is_warp_safe": false,
                                "name": "hiPower",
                                "post_expression": 131,
                                "pre_expression": 131,
                                "published": true,
                                "range_chance": false
                            }
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok object",
                            "properties": {
                                "description": {
                                    "description": "description string",
                                    "title": "get_dogma_effects_effect_id_description",
                                    "type": "string"
                                },
                                "disallow_auto_repeat": {
                                    "description": "disallow_auto_repeat boolean",
                                    "title": "get_dogma_effects_effect_id_disallow_auto_repeat",
                                    "type": "boolean"
                                },
                                "discharge_attribute_id": {
                                    "description": "discharge_attribute_id integer",
                                    "format": "int32",
                                    "title": "get_dogma_effects_effect_id_discharge_attribute_id",
                                    "type": "integer"
                                },
                                "display_name": {
                                    "description": "display_name string",
                                    "title": "get_dogma_effects_effect_id_display_name",
                                    "type": "string"
                                },
                                "duration_attribute_id": {
                                    "description": "duration_attribute_id integer",
                                    "format": "int32",
                                    "title": "get_dogma_effects_effect_id_duration_attribute_id",
                                    "type": "integer"
                                },
                                "effect_category": {
                                    "description": "effect_category integer",
                                    "format": "int32",
                                    "title": "get_dogma_effects_effect_id_effect_category",
                                    "type": "integer"
                                },
                                "effect_id": {
                                    "description": "effect_id integer",
                                    "format": "int32",
                                    "title": "get_dogma_effects_effect_id_effect_id",
                                    "type": "integer"
                                },
                                "electronic_chance": {
                                    "description": "electronic_chance boolean",
                                    "title": "get_dogma_effects_effect_id_electronic_chance",
                                    "type": "boolean"
                                },
                                "falloff_attribute_id": {
                                    "description": "falloff_attribute_id integer",
                                    "format": "int32",
                                    "title": "get_dogma_effects_effect_id_falloff_attribute_id",
                                    "type": "integer"
                                },
                                "icon_id": {
                                    "description": "icon_id integer",
                                    "format": "int32",
                                    "title": "get_dogma_effects_effect_id_icon_id",
                                    "type": "integer"
                                },
                                "is_assistance": {
                                    "description": "is_assistance boolean",
                                    "title": "get_dogma_effects_effect_id_is_assistance",
                                    "type": "boolean"
                                },
                                "is_offensive": {
                                    "description": "is_offensive boolean",
                                    "title": "get_dogma_effects_effect_id_is_offensive",
                                    "type": "boolean"
                                },
                                "is_warp_safe": {
                                    "description": "is_warp_safe boolean",
                                    "title": "get_dogma_effects_effect_id_is_warp_safe",
                                    "type": "boolean"
                                },
                                "modifiers": {
                                    "description": "modifiers array",
                                    "items": {
                                        "description": "modifier object",
                                        "properties": {
                                            "domain": {
                                                "description": "domain string",
                                                "title": "get_dogma_effects_effect_id_domain",
                                                "type": "string"
                                            },
                                            "func": {
                                                "description": "func string",
                                                "title": "get_dogma_effects_effect_id_func",
                                                "type": "string"
                                            },
                                            "modified_attribute_id": {
                                                "description": "modified_attribute_id integer",
                                                "format": "int32",
                                                "title": "get_dogma_effects_effect_id_modified_attribute_id",
                                                "type": "integer"
                                            },
                                            "modifying_attribute_id": {
                                                "description": "modifying_attribute_id integer",
                                                "format": "int32",
                                                "title": "get_dogma_effects_effect_id_modifying_attribute_id",
                                                "type": "integer"
                                            },
                                            "operator": {
                                                "description": "operator integer",
                                                "format": "int32",
                                                "title": "get_dogma_effects_effect_id_operator",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "func",
                                            "domain",
                                            "modified_attribute_id",
                                            "modifying_attribute_id",
                                            "operator"
                                        ],
                                        "title": "get_dogma_effects_effect_id_modifier",
                                        "type": "object"
                                    },
                                    "title": "get_dogma_effects_effect_id_modifiers",
                                    "type": "array"
                                },
                                "name": {
                                    "description": "name string",
                                    "title": "get_dogma_effects_effect_id_name",
                                    "type": "string"
                                },
                                "post_expression": {
                                    "description": "post_expression integer",
                                    "format": "int32",
                                    "title": "get_dogma_effects_effect_id_post_expression",
                                    "type": "integer"
                                },
                                "pre_expression": {
                                    "description": "pre_expression integer",
                                    "format": "int32",
                                    "title": "get_dogma_effects_effect_id_pre_expression",
                                    "type": "integer"
                                },
                                "published": {
                                    "description": "published boolean",
                                    "title": "get_dogma_effects_effect_id_published",
                                    "type": "boolean"
                                },
                                "range_attribute_id": {
                                    "description": "range_attribute_id integer",
                                    "format": "int32",
                                    "title": "get_dogma_effects_effect_id_range_attribute_id",
                                    "type": "integer"
                                },
                                "range_chance": {
                                    "description": "range_chance boolean",
                                    "title": "get_dogma_effects_effect_id_range_chance",
                                    "type": "boolean"
                                },
                                "tracking_speed_attribute_id": {
                                    "description": "tracking_speed_attribute_id integer",
                                    "format": "int32",
                                    "title": "get_dogma_effects_effect_id_tracking_speed_attribute_id",
                                    "type": "integer"
                                }
                            },
                            "required": [
                                "effect_id"
                            ],
                            "title": "get_dogma_effects_effect_id_ok",
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "Dogma effect not found",
                        "examples": {
                            "application/json": {
                                "error": "Not found message"
                            }
                        },
                        "schema": {
                            "description": "Not found",
                            "properties": {
                                "error": {
                                    "description": "Not found message",
                                    "title": "get_dogma_effects_effect_id_404_not_found",
                                    "type": "string"
                                }
                            },
                            "title": "get_dogma_effects_effect_id_not_found",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_dogma_effects_effect_id_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_dogma_effects_effect_id_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "summary": "Get effect information",
                "tags": [
                    "Dogma"
                ],
                "x-alternate-versions": [
                    "dev",
                    "latest",
                    "v1"
                ],
                "x-cached-seconds": 3600
            }
        },
        "/fleets/{fleet_id}/": {
            "get": {
                "description": "Return details about a fleet\n\n---\n\nAlternate route: `/v1/fleets/{fleet_id}/`\n\nAlternate route: `/latest/fleets/{fleet_id}/`\n\nAlternate route: `/dev/fleets/{fleet_id}/`\n\n\n---\n\nThis route is cached for up to 5 seconds",
                "operationId": "get_fleets_fleet_id",
                "parameters": [
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "description": "ID for a fleet",
                        "format": "int64",
                        "in": "path",
                        "name": "fleet_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Access token to use, if preferred over a header",
                        "in": "query",
                        "name": "token",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Details about a fleet",
                        "examples": {
                            "application/json": {
                                "is_free_move": false,
                                "is_registered": false,
                                "is_voice_enabled": false,
                                "motd": "This is an <b>awesome</b> fleet!"
                            }
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok object",
                            "properties": {
                                "is_free_move": {
                                    "description": "Is free-move enabled",
                                    "title": "get_fleets_fleet_id_is_free_move",
                                    "type": "boolean"
                                },
                                "is_registered": {
                                    "description": "Does the fleet have an active fleet advertisement",
                                    "title": "get_fleets_fleet_id_is_registered",
                                    "type": "boolean"
                                },
                                "is_voice_enabled": {
                                    "description": "Is EVE Voice enabled",
                                    "title": "get_fleets_fleet_id_is_voice_enabled",
                                    "type": "boolean"
                                },
                                "motd": {
                                    "description": "Fleet MOTD in CCP flavoured HTML",
                                    "title": "get_fleets_fleet_id_motd",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "motd",
                                "is_free_move",
                                "is_registered",
                                "is_voice_enabled"
                            ],
                            "title": "get_fleets_fleet_id_ok",
                            "type": "object"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "examples": {
                            "application/json": {
                                "error": "Token is not valid for scope(s): esi-fleets.read_fleet.v1"
                            }
                        },
                        "schema": {
                            "description": "Forbidden",
                            "properties": {
                                "error": {
                                    "description": "Forbidden message",
                                    "title": "get_fleets_fleet_id_403_forbidden",
                                    "type": "string"
                                }
                            },
                            "title": "get_fleets_fleet_id_forbidden",
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "The fleet does not exist or you don't have access to it",
                        "examples": {
                            "application/json": {
                                "error": "Not found message"
                            }
                        },
                        "schema": {
                            "description": "Not found",
                            "properties": {
                                "error": {
                                    "description": "Not found message",
                                    "title": "get_fleets_fleet_id_404_not_found",
                                    "type": "string"
                                }
                            },
                            "title": "get_fleets_fleet_id_not_found",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_fleets_fleet_id_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_fleets_fleet_id_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "evesso": [
                            "esi-fleets.read_fleet.v1"
                        ]
                    }
                ],
                "summary": "Get fleet information",
                "tags": [
                    "Fleets"
                ],
                "x-alternate-versions": [
                    "dev",
                    "latest",
                    "v1"
                ],
                "x-cached-seconds": 5
            },
            "put": {
                "description": "Update settings about a fleet\n\n---\n\nAlternate route: `/v1/fleets/{fleet_id}/`\n\nAlternate route: `/latest/fleets/{fleet_id}/`\n\nAlternate route: `/dev/fleets/{fleet_id}/`\n",
                "operationId": "put_fleets_fleet_id",
                "parameters": [
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "description": "ID for a fleet",
                        "format": "int64",
                        "in": "path",
                        "name": "fleet_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "What to update for this fleet",
                        "in": "body",
                        "name": "new_settings",
                        "required": true,
                        "schema": {
                            "description": "new_settings object",
                            "properties": {
                                "is_free_move": {
                                    "description": "Should free-move be enabled in the fleet",
                                    "title": "put_fleets_fleet_id_is_free_move",
                                    "type": "boolean"
                                },
                                "motd": {
                                    "description": "New fleet MOTD in CCP flavoured HTML",
                                    "title": "put_fleets_fleet_id_motd",
                                    "type": "string"
                                }
                            },
                            "title": "put_fleets_fleet_id_new_settings",
                            "type": "object"
                        }
                    },
                    {
                        "description": "Access token to use, if preferred over a header",
                        "in": "query",
                        "name": "token",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Fleet updated"
                    },
                    "400": {
                        "description": "Invalid request body",
                        "examples": {
                            "application/json": {
                                "error": "Bad request message"
                            }
                        },
                        "schema": {
                            "description": "Bad request",
                            "properties": {
                                "error": {
                                    "description": "Bad request message",
                                    "title": "put_fleets_fleet_id_400_bad_request",
                                    "type": "string"
                                }
                            },
                            "title": "put_fleets_fleet_id_bad_request",
                            "type": "object"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "examples": {
                            "application/json": {
                                "error": "Token is not valid for scope(s): esi-fleets.write_fleet.v1"
                            }
                        },
                        "schema": {
                            "description": "Forbidden",
                            "properties": {
                                "error": {
                                    "description": "Forbidden message",
                                    "title": "put_fleets_fleet_id_403_forbidden",
                                    "type": "string"
                                }
                            },
                            "title": "put_fleets_fleet_id_forbidden",
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "The fleet does not exist or you don't have access to it",
                        "examples": {
                            "application/json": {
                                "error": "Not found message"
                            }
                        },
                        "schema": {
                            "description": "Not found",
                            "properties": {
                                "error": {
                                    "description": "Not found message",
                                    "title": "put_fleets_fleet_id_404_not_found",
                                    "type": "string"
                                }
                            },
                            "title": "put_fleets_fleet_id_not_found",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "put_fleets_fleet_id_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "put_fleets_fleet_id_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "evesso": [
                            "esi-fleets.write_fleet.v1"
                        ]
                    }
                ],
                "summary": "Update fleet",
                "tags": [
                    "Fleets"
                ],
                "x-alternate-versions": [
                    "dev",
                    "latest",
                    "v1"
                ]
            }
        },
        "/fleets/{fleet_id}/members/": {
            "get": {
                "description": "Return information about fleet members\n\n---\n\nAlternate route: `/v1/fleets/{fleet_id}/members/`\n\nAlternate route: `/latest/fleets/{fleet_id}/members/`\n\nAlternate route: `/dev/fleets/{fleet_id}/members/`\n\n\n---\n\nThis route is cached for up to 5 seconds",
                "operationId": "get_fleets_fleet_id_members",
                "parameters": [
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "description": "ID for a fleet",
                        "format": "int64",
                        "in": "path",
                        "name": "fleet_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "default": "en-us",
                        "description": "Language to use in the response",
                        "enum": [
                            "de",
                            "en-us",
                            "fr",
                            "ja",
                            "ru",
                            "zh"
                        ],
                        "in": "query",
                        "name": "language",
                        "type": "string"
                    },
                    {
                        "description": "Access token to use, if preferred over a header",
                        "in": "query",
                        "name": "token",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of fleet members",
                        "examples": {
                            "application/json": [
                                {
                                    "character_id": 93265215,
                                    "join_time": "2016-04-29T12:34:56Z",
                                    "role": "squad_commander",
                                    "role_name": "Squad Commander (Boss)",
                                    "ship_type_id": 33328,
                                    "solar_system_id": 30003729,
                                    "squad_id": 3129411261968,
                                    "station_id": 61000180,
                                    "takes_fleet_warp": true,
                                    "wing_id": 2073711261968
                                }
                            ]
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Content-Language": {
                                "description": "The language used in the response",
                                "enum": [
                                    "de",
                                    "en-us",
                                    "fr",
                                    "ja",
                                    "ru",
                                    "zh"
                                ],
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok array",
                            "items": {
                                "description": "200 ok object",
                                "properties": {
                                    "character_id": {
                                        "description": "character_id integer",
                                        "format": "int32",
                                        "title": "get_fleets_fleet_id_members_character_id",
                                        "type": "integer"
                                    },
                                    "join_time": {
                                        "description": "join_time string",
                                        "format": "date-time",
                                        "title": "get_fleets_fleet_id_members_join_time",
                                        "type": "string"
                                    },
                                    "role": {
                                        "description": "Member\u2019s role in fleet",
                                        "enum": [
                                            "fleet_commander",
                                            "wing_commander",
                                            "squad_commander",
                                            "squad_member"
                                        ],
                                        "title": "get_fleets_fleet_id_members_role",
                                        "type": "string"
                                    },
                                    "role_name": {
                                        "description": "Localized role names",
                                        "title": "get_fleets_fleet_id_members_role_name",
                                        "type": "string"
                                    },
                                    "ship_type_id": {
                                        "description": "ship_type_id integer",
                                        "format": "int32",
                                        "title": "get_fleets_fleet_id_members_ship_type_id",
                                        "type": "integer"
                                    },
                                    "solar_system_id": {
                                        "description": "Solar system the member is located in",
                                        "format": "int32",
                                        "title": "get_fleets_fleet_id_members_solar_system_id",
                                        "type": "integer"
                                    },
                                    "squad_id": {
                                        "description": "ID of the squad the member is in. If not applicable, will be set to -1",
                                        "format": "int64",
                                        "title": "get_fleets_fleet_id_members_squad_id",
                                        "type": "integer"
                                    },
                                    "station_id": {
                                        "description": "Station in which the member is docked in, if applicable",
                                        "format": "int64",
                                        "title": "get_fleets_fleet_id_members_station_id",
                                        "type": "integer"
                                    },
                                    "takes_fleet_warp": {
                                        "description": "Whether the member take fleet warps",
                                        "title": "get_fleets_fleet_id_members_takes_fleet_warp",
                                        "type": "boolean"
                                    },
                                    "wing_id": {
                                        "description": "ID of the wing the member is in. If not applicable, will be set to -1",
                                        "format": "int64",
                                        "title": "get_fleets_fleet_id_members_wing_id",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "character_id",
                                    "ship_type_id",
                                    "wing_id",
                                    "squad_id",
                                    "role",
                                    "role_name",
                                    "join_time",
                                    "takes_fleet_warp",
                                    "solar_system_id"
                                ],
                                "title": "get_fleets_fleet_id_members_200_ok",
                                "type": "object"
                            },
                            "title": "get_fleets_fleet_id_members_ok",
                            "type": "array"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "examples": {
                            "application/json": {
                                "error": "Token is not valid for scope(s): esi-fleets.read_fleet.v1"
                            }
                        },
                        "schema": {
                            "description": "Forbidden",
                            "properties": {
                                "error": {
                                    "description": "Forbidden message",
                                    "title": "get_fleets_fleet_id_members_403_forbidden",
                                    "type": "string"
                                }
                            },
                            "title": "get_fleets_fleet_id_members_forbidden",
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "The fleet does not exist or you don't have access to it",
                        "examples": {
                            "application/json": {
                                "error": "Not found message"
                            }
                        },
                        "schema": {
                            "description": "Not found",
                            "properties": {
                                "error": {
                                    "description": "Not found message",
                                    "title": "get_fleets_fleet_id_members_404_not_found",
                                    "type": "string"
                                }
                            },
                            "title": "get_fleets_fleet_id_members_not_found",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_fleets_fleet_id_members_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_fleets_fleet_id_members_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "evesso": [
                            "esi-fleets.read_fleet.v1"
                        ]
                    }
                ],
                "summary": "Get fleet members",
                "tags": [
                    "Fleets"
                ],
                "x-alternate-versions": [
                    "dev",
                    "latest",
                    "v1"
                ],
                "x-cached-seconds": 5
            },
            "post": {
                "description": "Invite a character into the fleet, if a character has a CSPA charge set, it is not possible to invite them to the fleet using ESI\n\n---\n\nAlternate route: `/v1/fleets/{fleet_id}/members/`\n\nAlternate route: `/latest/fleets/{fleet_id}/members/`\n\nAlternate route: `/dev/fleets/{fleet_id}/members/`\n",
                "operationId": "post_fleets_fleet_id_members",
                "parameters": [
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "description": "ID for a fleet",
                        "format": "int64",
                        "in": "path",
                        "name": "fleet_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Details of the invitation",
                        "in": "body",
                        "name": "invitation",
                        "required": true,
                        "schema": {
                            "description": "invitation object",
                            "properties": {
                                "character_id": {
                                    "description": "The character you want to invite",
                                    "format": "int32",
                                    "title": "post_fleets_fleet_id_members_character_id",
                                    "type": "integer"
                                },
                                "role": {
                                    "description": "- If a character is invited with the `fleet_commander` role, neither `wing_id` or `squad_id` should be specified - If a character is invited with the `wing_commander` role, only `wing_id` should be specified - If a character is invited with the `squad_commander` role, both `wing_id` and `squad_id` should be specified - If a character is invited with the `squad_member` role, `wing_id` and `squad_id` should either both be specified or not specified at all. If they aren\u2019t specified, the invited character will join any squad with available positions\n",
                                    "enum": [
                                        "fleet_commander",
                                        "wing_commander",
                                        "squad_commander",
                                        "squad_member"
                                    ],
                                    "title": "post_fleets_fleet_id_members_role",
                                    "type": "string"
                                },
                                "squad_id": {
                                    "description": "squad_id integer",
                                    "format": "int64",
                                    "minimum": 0,
                                    "title": "post_fleets_fleet_id_members_squad_id",
                                    "type": "integer"
                                },
                                "wing_id": {
                                    "description": "wing_id integer",
                                    "format": "int64",
                                    "minimum": 0,
                                    "title": "post_fleets_fleet_id_members_wing_id",
                                    "type": "integer"
                                }
                            },
                            "required": [
                                "character_id",
                                "role"
                            ],
                            "title": "post_fleets_fleet_id_members_invitation",
                            "type": "object"
                        }
                    },
                    {
                        "description": "Access token to use, if preferred over a header",
                        "in": "query",
                        "name": "token",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Fleet invitation sent"
                    },
                    "403": {
                        "description": "Forbidden",
                        "examples": {
                            "application/json": {
                                "error": "Token is not valid for scope(s): esi-fleets.write_fleet.v1"
                            }
                        },
                        "schema": {
                            "description": "Forbidden",
                            "properties": {
                                "error": {
                                    "description": "Forbidden message",
                                    "title": "post_fleets_fleet_id_members_403_forbidden",
                                    "type": "string"
                                }
                            },
                            "title": "post_fleets_fleet_id_members_forbidden",
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "The fleet does not exist or you don't have access to it",
                        "examples": {
                            "application/json": {
                                "error": "Not found message"
                            }
                        },
                        "schema": {
                            "description": "Not found",
                            "properties": {
                                "error": {
                                    "description": "Not found message",
                                    "title": "post_fleets_fleet_id_members_404_not_found",
                                    "type": "string"
                                }
                            },
                            "title": "post_fleets_fleet_id_members_not_found",
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Errors in invitation",
                        "examples": {
                            "application/json": {
                                "error": "missing wing_id"
                            }
                        },
                        "schema": {
                            "description": "422 unprocessable entity object",
                            "properties": {
                                "error": {
                                    "description": "error message",
                                    "title": "post_fleets_fleet_id_members_error",
                                    "type": "string"
                                }
                            },
                            "title": "post_fleets_fleet_id_members_unprocessable_entity",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "post_fleets_fleet_id_members_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "post_fleets_fleet_id_members_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "evesso": [
                            "esi-fleets.write_fleet.v1"
                        ]
                    }
                ],
                "summary": "Create fleet invitation",
                "tags": [
                    "Fleets"
                ],
                "x-alternate-versions": [
                    "dev",
                    "latest",
                    "v1"
                ]
            }
        },
        "/fleets/{fleet_id}/members/{member_id}/": {
            "delete": {
                "description": "Kick a fleet member\n\n---\n\nAlternate route: `/v1/fleets/{fleet_id}/members/{member_id}/`\n\nAlternate route: `/latest/fleets/{fleet_id}/members/{member_id}/`\n\nAlternate route: `/dev/fleets/{fleet_id}/members/{member_id}/`\n",
                "operationId": "delete_fleets_fleet_id_members_member_id",
                "parameters": [
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "description": "ID for a fleet",
                        "format": "int64",
                        "in": "path",
                        "name": "fleet_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "The character ID of a member in this fleet",
                        "format": "int32",
                        "in": "path",
                        "name": "member_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Access token to use, if preferred over a header",
                        "in": "query",
                        "name": "token",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Fleet member kicked"
                    },
                    "403": {
                        "description": "Forbidden",
                        "examples": {
                            "application/json": {
                                "error": "Token is not valid for scope(s): esi-fleets.write_fleet.v1"
                            }
                        },
                        "schema": {
                            "description": "Forbidden",
                            "properties": {
                                "error": {
                                    "description": "Forbidden message",
                                    "title": "delete_fleets_fleet_id_members_member_id_403_forbidden",
                                    "type": "string"
                                }
                            },
                            "title": "delete_fleets_fleet_id_members_member_id_forbidden",
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "The fleet does not exist or you don't have access to it",
                        "examples": {
                            "application/json": {
                                "error": "Not found message"
                            }
                        },
                        "schema": {
                            "description": "Not found",
                            "properties": {
                                "error": {
                                    "description": "Not found message",
                                    "title": "delete_fleets_fleet_id_members_member_id_404_not_found",
                                    "type": "string"
                                }
                            },
                            "title": "delete_fleets_fleet_id_members_member_id_not_found",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "delete_fleets_fleet_id_members_member_id_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "delete_fleets_fleet_id_members_member_id_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "evesso": [
                            "esi-fleets.write_fleet.v1"
                        ]
                    }
                ],
                "summary": "Kick fleet member",
                "tags": [
                    "Fleets"
                ],
                "x-alternate-versions": [
                    "dev",
                    "latest",
                    "v1"
                ]
            },
            "put": {
                "description": "Move a fleet member around\n\n---\n\nAlternate route: `/v1/fleets/{fleet_id}/members/{member_id}/`\n\nAlternate route: `/latest/fleets/{fleet_id}/members/{member_id}/`\n\nAlternate route: `/dev/fleets/{fleet_id}/members/{member_id}/`\n",
                "operationId": "put_fleets_fleet_id_members_member_id",
                "parameters": [
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "description": "ID for a fleet",
                        "format": "int64",
                        "in": "path",
                        "name": "fleet_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "The character ID of a member in this fleet",
                        "format": "int32",
                        "in": "path",
                        "name": "member_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Details of the invitation",
                        "in": "body",
                        "name": "movement",
                        "required": true,
                        "schema": {
                            "description": "movement object",
                            "properties": {
                                "role": {
                                    "description": "- If a character is moved to the `fleet_commander` role, neither `wing_id` or `squad_id` should be specified - If a character is moved to the `wing_commander` role, only `wing_id` should be specified - If a character is moved to the `squad_commander` role, both `wing_id` and `squad_id` should be specified - If a character is moved to the `squad_member` role, both `wing_id` and `squad_id` should be specified\n",
                                    "enum": [
                                        "fleet_commander",
                                        "wing_commander",
                                        "squad_commander",
                                        "squad_member"
                                    ],
                                    "title": "put_fleets_fleet_id_members_member_id_role",
                                    "type": "string"
                                },
                                "squad_id": {
                                    "description": "squad_id integer",
                                    "format": "int64",
                                    "minimum": 0,
                                    "title": "put_fleets_fleet_id_members_member_id_squad_id",
                                    "type": "integer"
                                },
                                "wing_id": {
                                    "description": "wing_id integer",
                                    "format": "int64",
                                    "minimum": 0,
                                    "title": "put_fleets_fleet_id_members_member_id_wing_id",
                                    "type": "integer"
                                }
                            },
                            "required": [
                                "role"
                            ],
                            "title": "put_fleets_fleet_id_members_member_id_movement",
                            "type": "object"
                        }
                    },
                    {
                        "description": "Access token to use, if preferred over a header",
                        "in": "query",
                        "name": "token",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Fleet invitation sent"
                    },
                    "403": {
                        "description": "Forbidden",
                        "examples": {
                            "application/json": {
                                "error": "Token is not valid for scope(s): esi-fleets.write_fleet.v1"
                            }
                        },
                        "schema": {
                            "description": "Forbidden",
                            "properties": {
                                "error": {
                                    "description": "Forbidden message",
                                    "title": "put_fleets_fleet_id_members_member_id_403_forbidden",
                                    "type": "string"
                                }
                            },
                            "title": "put_fleets_fleet_id_members_member_id_forbidden",
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "The fleet does not exist or you don't have access to it",
                        "examples": {
                            "application/json": {
                                "error": "Not found message"
                            }
                        },
                        "schema": {
                            "description": "Not found",
                            "properties": {
                                "error": {
                                    "description": "Not found message",
                                    "title": "put_fleets_fleet_id_members_member_id_404_not_found",
                                    "type": "string"
                                }
                            },
                            "title": "put_fleets_fleet_id_members_member_id_not_found",
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Errors in invitation",
                        "examples": {
                            "application/json": {
                                "error": "missing wing_id"
                            }
                        },
                        "schema": {
                            "description": "422 unprocessable entity object",
                            "properties": {
                                "error": {
                                    "description": "error message",
                                    "title": "put_fleets_fleet_id_members_member_id_error",
                                    "type": "string"
                                }
                            },
                            "title": "put_fleets_fleet_id_members_member_id_unprocessable_entity",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "put_fleets_fleet_id_members_member_id_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "put_fleets_fleet_id_members_member_id_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "evesso": [
                            "esi-fleets.write_fleet.v1"
                        ]
                    }
                ],
                "summary": "Move fleet member",
                "tags": [
                    "Fleets"
                ],
                "x-alternate-versions": [
                    "dev",
                    "latest",
                    "v1"
                ]
            }
        },
        "/fleets/{fleet_id}/squads/{squad_id}/": {
            "delete": {
                "description": "Delete a fleet squad, only empty squads can be deleted\n\n---\n\nAlternate route: `/v1/fleets/{fleet_id}/squads/{squad_id}/`\n\nAlternate route: `/latest/fleets/{fleet_id}/squads/{squad_id}/`\n\nAlternate route: `/dev/fleets/{fleet_id}/squads/{squad_id}/`\n",
                "operationId": "delete_fleets_fleet_id_squads_squad_id",
                "parameters": [
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "description": "ID for a fleet",
                        "format": "int64",
                        "in": "path",
                        "name": "fleet_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "The squad to delete",
                        "format": "int64",
                        "in": "path",
                        "name": "squad_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Access token to use, if preferred over a header",
                        "in": "query",
                        "name": "token",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Squad deleted"
                    },
                    "403": {
                        "description": "Forbidden",
                        "examples": {
                            "application/json": {
                                "error": "Token is not valid for scope(s): esi-fleets.write_fleet.v1"
                            }
                        },
                        "schema": {
                            "description": "Forbidden",
                            "properties": {
                                "error": {
                                    "description": "Forbidden message",
                                    "title": "delete_fleets_fleet_id_squads_squad_id_403_forbidden",
                                    "type": "string"
                                }
                            },
                            "title": "delete_fleets_fleet_id_squads_squad_id_forbidden",
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "The fleet does not exist or you don't have access to it",
                        "examples": {
                            "application/json": {
                                "error": "Not found message"
                            }
                        },
                        "schema": {
                            "description": "Not found",
                            "properties": {
                                "error": {
                                    "description": "Not found message",
                                    "title": "delete_fleets_fleet_id_squads_squad_id_404_not_found",
                                    "type": "string"
                                }
                            },
                            "title": "delete_fleets_fleet_id_squads_squad_id_not_found",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "delete_fleets_fleet_id_squads_squad_id_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "delete_fleets_fleet_id_squads_squad_id_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "evesso": [
                            "esi-fleets.write_fleet.v1"
                        ]
                    }
                ],
                "summary": "Delete fleet squad",
                "tags": [
                    "Fleets"
                ],
                "x-alternate-versions": [
                    "dev",
                    "latest",
                    "v1"
                ]
            },
            "put": {
                "description": "Rename a fleet squad\n\n---\n\nAlternate route: `/v1/fleets/{fleet_id}/squads/{squad_id}/`\n\nAlternate route: `/latest/fleets/{fleet_id}/squads/{squad_id}/`\n\nAlternate route: `/dev/fleets/{fleet_id}/squads/{squad_id}/`\n",
                "operationId": "put_fleets_fleet_id_squads_squad_id",
                "parameters": [
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "description": "ID for a fleet",
                        "format": "int64",
                        "in": "path",
                        "name": "fleet_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "New name of the squad",
                        "in": "body",
                        "name": "naming",
                        "required": true,
                        "schema": {
                            "description": "naming object",
                            "properties": {
                                "name": {
                                    "description": "name string",
                                    "maxLength": 10,
                                    "title": "put_fleets_fleet_id_squads_squad_id_name",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "name"
                            ],
                            "title": "put_fleets_fleet_id_squads_squad_id_naming",
                            "type": "object"
                        }
                    },
                    {
                        "description": "The squad to rename",
                        "format": "int64",
                        "in": "path",
                        "name": "squad_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Access token to use, if preferred over a header",
                        "in": "query",
                        "name": "token",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Squad renamed"
                    },
                    "403": {
                        "description": "Forbidden",
                        "examples": {
                            "application/json": {
                                "error": "Token is not valid for scope(s): esi-fleets.write_fleet.v1"
                            }
                        },
                        "schema": {
                            "description": "Forbidden",
                            "properties": {
                                "error": {
                                    "description": "Forbidden message",
                                    "title": "put_fleets_fleet_id_squads_squad_id_403_forbidden",
                                    "type": "string"
                                }
                            },
                            "title": "put_fleets_fleet_id_squads_squad_id_forbidden",
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "The fleet does not exist or you don't have access to it",
                        "examples": {
                            "application/json": {
                                "error": "Not found message"
                            }
                        },
                        "schema": {
                            "description": "Not found",
                            "properties": {
                                "error": {
                                    "description": "Not found message",
                                    "title": "put_fleets_fleet_id_squads_squad_id_404_not_found",
                                    "type": "string"
                                }
                            },
                            "title": "put_fleets_fleet_id_squads_squad_id_not_found",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "put_fleets_fleet_id_squads_squad_id_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "put_fleets_fleet_id_squads_squad_id_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "evesso": [
                            "esi-fleets.write_fleet.v1"
                        ]
                    }
                ],
                "summary": "Rename fleet squad",
                "tags": [
                    "Fleets"
                ],
                "x-alternate-versions": [
                    "dev",
                    "latest",
                    "v1"
                ]
            }
        },
        "/fleets/{fleet_id}/wings/": {
            "get": {
                "description": "Return information about wings in a fleet\n\n---\n\nAlternate route: `/v1/fleets/{fleet_id}/wings/`\n\nAlternate route: `/latest/fleets/{fleet_id}/wings/`\n\nAlternate route: `/dev/fleets/{fleet_id}/wings/`\n\n\n---\n\nThis route is cached for up to 5 seconds",
                "operationId": "get_fleets_fleet_id_wings",
                "parameters": [
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "description": "ID for a fleet",
                        "format": "int64",
                        "in": "path",
                        "name": "fleet_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "default": "en-us",
                        "description": "Language to use in the response",
                        "enum": [
                            "de",
                            "en-us",
                            "fr",
                            "ja",
                            "ru",
                            "zh"
                        ],
                        "in": "query",
                        "name": "language",
                        "type": "string"
                    },
                    {
                        "description": "Access token to use, if preferred over a header",
                        "in": "query",
                        "name": "token",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of fleet wings",
                        "examples": {
                            "application/json": [
                                {
                                    "id": 2073711261968,
                                    "name": "Wing 1",
                                    "squads": [
                                        {
                                            "id": 3129411261968,
                                            "name": "Squad 1"
                                        }
                                    ]
                                }
                            ]
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Content-Language": {
                                "description": "The language used in the response",
                                "enum": [
                                    "de",
                                    "en-us",
                                    "fr",
                                    "ja",
                                    "ru",
                                    "zh"
                                ],
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok array",
                            "items": {
                                "description": "200 ok object",
                                "properties": {
                                    "id": {
                                        "description": "id integer",
                                        "format": "int64",
                                        "title": "get_fleets_fleet_id_wings_id",
                                        "type": "integer"
                                    },
                                    "name": {
                                        "description": "name string",
                                        "title": "get_fleets_fleet_id_wings_name",
                                        "type": "string"
                                    },
                                    "squads": {
                                        "description": "squads array",
                                        "items": {
                                            "description": "squad object",
                                            "properties": {
                                                "id": {
                                                    "description": "id integer",
                                                    "format": "int64",
                                                    "title": "get_fleets_fleet_id_wings_id",
                                                    "type": "integer"
                                                },
                                                "name": {
                                                    "description": "name string",
                                                    "title": "get_fleets_fleet_id_wings_name",
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "name",
                                                "id"
                                            ],
                                            "title": "get_fleets_fleet_id_wings_squad",
                                            "type": "object"
                                        },
                                        "title": "get_fleets_fleet_id_wings_squads",
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "name",
                                    "id",
                                    "squads"
                                ],
                                "title": "get_fleets_fleet_id_wings_200_ok",
                                "type": "object"
                            },
                            "title": "get_fleets_fleet_id_wings_ok",
                            "type": "array"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "examples": {
                            "application/json": {
                                "error": "Token is not valid for scope(s): esi-fleets.read_fleet.v1"
                            }
                        },
                        "schema": {
                            "description": "Forbidden",
                            "properties": {
                                "error": {
                                    "description": "Forbidden message",
                                    "title": "get_fleets_fleet_id_wings_403_forbidden",
                                    "type": "string"
                                }
                            },
                            "title": "get_fleets_fleet_id_wings_forbidden",
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "The fleet does not exist or you don't have access to it",
                        "examples": {
                            "application/json": {
                                "error": "Not found message"
                            }
                        },
                        "schema": {
                            "description": "Not found",
                            "properties": {
                                "error": {
                                    "description": "Not found message",
                                    "title": "get_fleets_fleet_id_wings_404_not_found",
                                    "type": "string"
                                }
                            },
                            "title": "get_fleets_fleet_id_wings_not_found",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_fleets_fleet_id_wings_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_fleets_fleet_id_wings_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "evesso": [
                            "esi-fleets.read_fleet.v1"
                        ]
                    }
                ],
                "summary": "Get fleet wings",
                "tags": [
                    "Fleets"
                ],
                "x-alternate-versions": [
                    "dev",
                    "latest",
                    "v1"
                ],
                "x-cached-seconds": 5
            },
            "post": {
                "description": "Create a new wing in a fleet\n\n---\n\nAlternate route: `/v1/fleets/{fleet_id}/wings/`\n\nAlternate route: `/latest/fleets/{fleet_id}/wings/`\n\nAlternate route: `/dev/fleets/{fleet_id}/wings/`\n",
                "operationId": "post_fleets_fleet_id_wings",
                "parameters": [
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "description": "ID for a fleet",
                        "format": "int64",
                        "in": "path",
                        "name": "fleet_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Access token to use, if preferred over a header",
                        "in": "query",
                        "name": "token",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Wing created",
                        "examples": {
                            "application/json": {
                                "wing_id": 123
                            }
                        },
                        "schema": {
                            "description": "201 created object",
                            "properties": {
                                "wing_id": {
                                    "description": "The wing_id of the newly created wing",
                                    "format": "int64",
                                    "title": "post_fleets_fleet_id_wings_wing_id",
                                    "type": "integer"
                                }
                            },
                            "required": [
                                "wing_id"
                            ],
                            "title": "post_fleets_fleet_id_wings_created",
                            "type": "object"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "examples": {
                            "application/json": {
                                "error": "Token is not valid for scope(s): esi-fleets.write_fleet.v1"
                            }
                        },
                        "schema": {
                            "description": "Forbidden",
                            "properties": {
                                "error": {
                                    "description": "Forbidden message",
                                    "title": "post_fleets_fleet_id_wings_403_forbidden",
                                    "type": "string"
                                }
                            },
                            "title": "post_fleets_fleet_id_wings_forbidden",
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "The fleet does not exist or you don't have access to it",
                        "examples": {
                            "application/json": {
                                "error": "Not found message"
                            }
                        },
                        "schema": {
                            "description": "Not found",
                            "properties": {
                                "error": {
                                    "description": "Not found message",
                                    "title": "post_fleets_fleet_id_wings_404_not_found",
                                    "type": "string"
                                }
                            },
                            "title": "post_fleets_fleet_id_wings_not_found",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "post_fleets_fleet_id_wings_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "post_fleets_fleet_id_wings_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "evesso": [
                            "esi-fleets.write_fleet.v1"
                        ]
                    }
                ],
                "summary": "Create fleet wing",
                "tags": [
                    "Fleets"
                ],
                "x-alternate-versions": [
                    "dev",
                    "latest",
                    "v1"
                ]
            }
        },
        "/fleets/{fleet_id}/wings/{wing_id}/": {
            "delete": {
                "description": "Delete a fleet wing, only empty wings can be deleted. The wing may contain squads, but the squads must be empty\n\n---\n\nAlternate route: `/v1/fleets/{fleet_id}/wings/{wing_id}/`\n\nAlternate route: `/latest/fleets/{fleet_id}/wings/{wing_id}/`\n\nAlternate route: `/dev/fleets/{fleet_id}/wings/{wing_id}/`\n",
                "operationId": "delete_fleets_fleet_id_wings_wing_id",
                "parameters": [
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "description": "ID for a fleet",
                        "format": "int64",
                        "in": "path",
                        "name": "fleet_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Access token to use, if preferred over a header",
                        "in": "query",
                        "name": "token",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "The wing to delete",
                        "format": "int64",
                        "in": "path",
                        "name": "wing_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Wing deleted"
                    },
                    "403": {
                        "description": "Forbidden",
                        "examples": {
                            "application/json": {
                                "error": "Token is not valid for scope(s): esi-fleets.write_fleet.v1"
                            }
                        },
                        "schema": {
                            "description": "Forbidden",
                            "properties": {
                                "error": {
                                    "description": "Forbidden message",
                                    "title": "delete_fleets_fleet_id_wings_wing_id_403_forbidden",
                                    "type": "string"
                                }
                            },
                            "title": "delete_fleets_fleet_id_wings_wing_id_forbidden",
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "The fleet does not exist or you don't have access to it",
                        "examples": {
                            "application/json": {
                                "error": "Not found message"
                            }
                        },
                        "schema": {
                            "description": "Not found",
                            "properties": {
                                "error": {
                                    "description": "Not found message",
                                    "title": "delete_fleets_fleet_id_wings_wing_id_404_not_found",
                                    "type": "string"
                                }
                            },
                            "title": "delete_fleets_fleet_id_wings_wing_id_not_found",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "delete_fleets_fleet_id_wings_wing_id_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "delete_fleets_fleet_id_wings_wing_id_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "evesso": [
                            "esi-fleets.write_fleet.v1"
                        ]
                    }
                ],
                "summary": "Delete fleet wing",
                "tags": [
                    "Fleets"
                ],
                "x-alternate-versions": [
                    "dev",
                    "latest",
                    "v1"
                ]
            },
            "put": {
                "description": "Rename a fleet wing\n\n---\n\nAlternate route: `/v1/fleets/{fleet_id}/wings/{wing_id}/`\n\nAlternate route: `/latest/fleets/{fleet_id}/wings/{wing_id}/`\n\nAlternate route: `/dev/fleets/{fleet_id}/wings/{wing_id}/`\n",
                "operationId": "put_fleets_fleet_id_wings_wing_id",
                "parameters": [
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "description": "ID for a fleet",
                        "format": "int64",
                        "in": "path",
                        "name": "fleet_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "New name of the wing",
                        "in": "body",
                        "name": "naming",
                        "required": true,
                        "schema": {
                            "description": "naming object",
                            "properties": {
                                "name": {
                                    "description": "name string",
                                    "maxLength": 10,
                                    "title": "put_fleets_fleet_id_wings_wing_id_name",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "name"
                            ],
                            "title": "put_fleets_fleet_id_wings_wing_id_naming",
                            "type": "object"
                        }
                    },
                    {
                        "description": "Access token to use, if preferred over a header",
                        "in": "query",
                        "name": "token",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "The wing to rename",
                        "format": "int64",
                        "in": "path",
                        "name": "wing_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Wing renamed"
                    },
                    "403": {
                        "description": "Forbidden",
                        "examples": {
                            "application/json": {
                                "error": "Token is not valid for scope(s): esi-fleets.write_fleet.v1"
                            }
                        },
                        "schema": {
                            "description": "Forbidden",
                            "properties": {
                                "error": {
                                    "description": "Forbidden message",
                                    "title": "put_fleets_fleet_id_wings_wing_id_403_forbidden",
                                    "type": "string"
                                }
                            },
                            "title": "put_fleets_fleet_id_wings_wing_id_forbidden",
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "The fleet does not exist or you don't have access to it",
                        "examples": {
                            "application/json": {
                                "error": "Not found message"
                            }
                        },
                        "schema": {
                            "description": "Not found",
                            "properties": {
                                "error": {
                                    "description": "Not found message",
                                    "title": "put_fleets_fleet_id_wings_wing_id_404_not_found",
                                    "type": "string"
                                }
                            },
                            "title": "put_fleets_fleet_id_wings_wing_id_not_found",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "put_fleets_fleet_id_wings_wing_id_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "put_fleets_fleet_id_wings_wing_id_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "evesso": [
                            "esi-fleets.write_fleet.v1"
                        ]
                    }
                ],
                "summary": "Rename fleet wing",
                "tags": [
                    "Fleets"
                ],
                "x-alternate-versions": [
                    "dev",
                    "latest",
                    "v1"
                ]
            }
        },
        "/fleets/{fleet_id}/wings/{wing_id}/squads/": {
            "post": {
                "description": "Create a new squad in a fleet\n\n---\n\nAlternate route: `/v1/fleets/{fleet_id}/wings/{wing_id}/squads/`\n\nAlternate route: `/latest/fleets/{fleet_id}/wings/{wing_id}/squads/`\n\nAlternate route: `/dev/fleets/{fleet_id}/wings/{wing_id}/squads/`\n",
                "operationId": "post_fleets_fleet_id_wings_wing_id_squads",
                "parameters": [
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "description": "ID for a fleet",
                        "format": "int64",
                        "in": "path",
                        "name": "fleet_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Access token to use, if preferred over a header",
                        "in": "query",
                        "name": "token",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "The wing_id to create squad in",
                        "format": "int64",
                        "in": "path",
                        "name": "wing_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Squad created",
                        "examples": {
                            "application/json": {
                                "squad_id": 123
                            }
                        },
                        "schema": {
                            "description": "201 created object",
                            "properties": {
                                "squad_id": {
                                    "description": "The squad_id of the newly created squad",
                                    "format": "int64",
                                    "title": "post_fleets_fleet_id_wings_wing_id_squads_squad_id",
                                    "type": "integer"
                                }
                            },
                            "required": [
                                "squad_id"
                            ],
                            "title": "post_fleets_fleet_id_wings_wing_id_squads_created",
                            "type": "object"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "examples": {
                            "application/json": {
                                "error": "Token is not valid for scope(s): esi-fleets.write_fleet.v1"
                            }
                        },
                        "schema": {
                            "description": "Forbidden",
                            "properties": {
                                "error": {
                                    "description": "Forbidden message",
                                    "title": "post_fleets_fleet_id_wings_wing_id_squads_403_forbidden",
                                    "type": "string"
                                }
                            },
                            "title": "post_fleets_fleet_id_wings_wing_id_squads_forbidden",
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "The fleet does not exist or you don't have access to it",
                        "examples": {
                            "application/json": {
                                "error": "Not found message"
                            }
                        },
                        "schema": {
                            "description": "Not found",
                            "properties": {
                                "error": {
                                    "description": "Not found message",
                                    "title": "post_fleets_fleet_id_wings_wing_id_squads_404_not_found",
                                    "type": "string"
                                }
                            },
                            "title": "post_fleets_fleet_id_wings_wing_id_squads_not_found",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "post_fleets_fleet_id_wings_wing_id_squads_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "post_fleets_fleet_id_wings_wing_id_squads_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "evesso": [
                            "esi-fleets.write_fleet.v1"
                        ]
                    }
                ],
                "summary": "Create fleet squad",
                "tags": [
                    "Fleets"
                ],
                "x-alternate-versions": [
                    "dev",
                    "latest",
                    "v1"
                ]
            }
        },
        "/incursions/": {
            "get": {
                "description": "Return a list of current incursions\n\n---\n\nAlternate route: `/v1/incursions/`\n\nAlternate route: `/latest/incursions/`\n\nAlternate route: `/dev/incursions/`\n\n\n---\n\nThis route is cached for up to 300 seconds",
                "operationId": "get_incursions",
                "parameters": [
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of incursions",
                        "examples": {
                            "application/json": [
                                {
                                    "constellation_id": 20000607,
                                    "faction_id": 500019,
                                    "has_boss": true,
                                    "infested_solar_systems": [
                                        30004148,
                                        30004149,
                                        30004150,
                                        30004151,
                                        30004152,
                                        30004153,
                                        30004154
                                    ],
                                    "influence": 1.0,
                                    "staging_solar_system_id": 30004154,
                                    "state": "mobilizing",
                                    "type": "Incursion"
                                }
                            ]
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok array",
                            "items": {
                                "description": "200 ok object",
                                "properties": {
                                    "constellation_id": {
                                        "description": "The constellation id in which this incursion takes place",
                                        "format": "int32",
                                        "title": "get_incursions_constellation_id",
                                        "type": "integer"
                                    },
                                    "faction_id": {
                                        "description": "The attacking faction's id",
                                        "format": "int32",
                                        "title": "get_incursions_faction_id",
                                        "type": "integer"
                                    },
                                    "has_boss": {
                                        "description": "Whether the final encounter has boss or not",
                                        "title": "get_incursions_has_boss",
                                        "type": "boolean"
                                    },
                                    "infested_solar_systems": {
                                        "description": "A list of infested solar system ids that are a part of this incursion",
                                        "items": {
                                            "description": "infested_solar_system integer",
                                            "format": "int32",
                                            "title": "get_incursions_infested_solar_system",
                                            "type": "integer"
                                        },
                                        "title": "get_incursions_infested_solar_systems",
                                        "type": "array"
                                    },
                                    "influence": {
                                        "description": "Influence of this incursion as a float from 0 to 1",
                                        "format": "float",
                                        "title": "get_incursions_influence",
                                        "type": "number"
                                    },
                                    "staging_solar_system_id": {
                                        "description": "Staging solar system for this incursion",
                                        "format": "int32",
                                        "title": "get_incursions_staging_solar_system_id",
                                        "type": "integer"
                                    },
                                    "state": {
                                        "description": "The state of this incursion",
                                        "enum": [
                                            "withdrawing",
                                            "mobilizing",
                                            "established"
                                        ],
                                        "title": "get_incursions_state",
                                        "type": "string"
                                    },
                                    "type": {
                                        "description": "The type of this incursion",
                                        "title": "get_incursions_type",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "type",
                                    "state",
                                    "influence",
                                    "has_boss",
                                    "faction_id",
                                    "constellation_id",
                                    "staging_solar_system_id",
                                    "infested_solar_systems"
                                ],
                                "title": "get_incursions_200_ok",
                                "type": "object"
                            },
                            "title": "get_incursions_ok",
                            "type": "array"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_incursions_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_incursions_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "summary": "List incursions",
                "tags": [
                    "Incursions"
                ],
                "x-alternate-versions": [
                    "dev",
                    "latest",
                    "v1"
                ],
                "x-cached-seconds": 300
            }
        },
        "/industry/facilities/": {
            "get": {
                "description": "Return a list of industry facilities\n\n---\n\nAlternate route: `/v1/industry/facilities/`\n\nAlternate route: `/latest/industry/facilities/`\n\nAlternate route: `/dev/industry/facilities/`\n\n\n---\n\nThis route is cached for up to 3600 seconds",
                "operationId": "get_industry_facilities",
                "parameters": [
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of prices",
                        "examples": {
                            "application/json": [
                                {
                                    "facility_id": 60012544,
                                    "owner_id": 1000126,
                                    "region_id": 10000001,
                                    "solar_system_id": 30000032,
                                    "tax": 0.1,
                                    "type_id": 2502
                                }
                            ]
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok array",
                            "items": {
                                "description": "200 ok object",
                                "properties": {
                                    "facility_id": {
                                        "description": "ID of the facility",
                                        "format": "int64",
                                        "title": "get_industry_facilities_facility_id",
                                        "type": "integer"
                                    },
                                    "owner_id": {
                                        "description": "Owner of the facility",
                                        "format": "int32",
                                        "title": "get_industry_facilities_owner_id",
                                        "type": "integer"
                                    },
                                    "region_id": {
                                        "description": "Region ID where the facility is",
                                        "format": "int32",
                                        "title": "get_industry_facilities_region_id",
                                        "type": "integer"
                                    },
                                    "solar_system_id": {
                                        "description": "Solar system ID where the facility is",
                                        "format": "int32",
                                        "title": "get_industry_facilities_solar_system_id",
                                        "type": "integer"
                                    },
                                    "tax": {
                                        "description": "Tax imposed by the facility",
                                        "format": "float",
                                        "title": "get_industry_facilities_tax",
                                        "type": "number"
                                    },
                                    "type_id": {
                                        "description": "Type ID of the facility",
                                        "format": "int32",
                                        "title": "get_industry_facilities_type_id",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "facility_id",
                                    "owner_id",
                                    "type_id",
                                    "solar_system_id",
                                    "region_id"
                                ],
                                "title": "get_industry_facilities_200_ok",
                                "type": "object"
                            },
                            "title": "get_industry_facilities_ok",
                            "type": "array"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_industry_facilities_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_industry_facilities_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "summary": "List industry facilities",
                "tags": [
                    "Industry"
                ],
                "x-alternate-versions": [
                    "dev",
                    "latest",
                    "v1"
                ],
                "x-cached-seconds": 3600
            }
        },
        "/industry/systems/": {
            "get": {
                "description": "Return cost indices for solar systems\n\n---\n\nAlternate route: `/v1/industry/systems/`\n\nAlternate route: `/latest/industry/systems/`\n\nAlternate route: `/dev/industry/systems/`\n\n\n---\n\nThis route is cached for up to 3600 seconds",
                "operationId": "get_industry_systems",
                "parameters": [
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of cost indicies",
                        "examples": {
                            "application/json": [
                                {
                                    "cost_indices": [
                                        {
                                            "activity": "invention",
                                            "cost_index": 0.00480411064973412
                                        }
                                    ],
                                    "solar_system_id": 30011392
                                }
                            ]
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok array",
                            "items": {
                                "description": "200 ok object",
                                "properties": {
                                    "cost_indices": {
                                        "description": "cost_indices array",
                                        "items": {
                                            "description": "cost_indice object",
                                            "properties": {
                                                "activity": {
                                                    "description": "activity string",
                                                    "enum": [
                                                        "none",
                                                        "manufacturing",
                                                        "researching_technology",
                                                        "researching_time_efficiency",
                                                        "researching_material_efficiency",
                                                        "copying",
                                                        "duplicating",
                                                        "invention",
                                                        "reverse_engineering"
                                                    ],
                                                    "title": "get_industry_systems_activity",
                                                    "type": "string"
                                                },
                                                "cost_index": {
                                                    "description": "cost_index number",
                                                    "format": "float",
                                                    "title": "get_industry_systems_cost_index",
                                                    "type": "number"
                                                }
                                            },
                                            "required": [
                                                "activity",
                                                "cost_index"
                                            ],
                                            "title": "get_industry_systems_cost_indice",
                                            "type": "object"
                                        },
                                        "title": "get_industry_systems_cost_indices",
                                        "type": "array"
                                    },
                                    "solar_system_id": {
                                        "description": "solar_system_id integer",
                                        "format": "int32",
                                        "title": "get_industry_systems_solar_system_id",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "solar_system_id",
                                    "cost_indices"
                                ],
                                "title": "get_industry_systems_200_ok",
                                "type": "object"
                            },
                            "title": "get_industry_systems_ok",
                            "type": "array"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_industry_systems_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_industry_systems_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "summary": "List solar system cost indices",
                "tags": [
                    "Industry"
                ],
                "x-alternate-versions": [
                    "dev",
                    "latest",
                    "v1"
                ],
                "x-cached-seconds": 3600
            }
        },
        "/insurance/prices/": {
            "get": {
                "description": "Return available insurance levels for all ship types\n\n---\n\nAlternate route: `/v1/insurance/prices/`\n\nAlternate route: `/latest/insurance/prices/`\n\nAlternate route: `/dev/insurance/prices/`\n\n\n---\n\nThis route is cached for up to 3600 seconds",
                "operationId": "get_insurance_prices",
                "parameters": [
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "default": "en-us",
                        "description": "Language to use in the response",
                        "enum": [
                            "de",
                            "en-us",
                            "fr",
                            "ja",
                            "ru",
                            "zh"
                        ],
                        "in": "query",
                        "name": "language",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of insurance levels for all ship types",
                        "examples": {
                            "application/json": [
                                {
                                    "levels": [
                                        {
                                            "cost": 10.0,
                                            "name": "Basic",
                                            "payout": 20.0
                                        }
                                    ],
                                    "type_id": 1
                                }
                            ]
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Content-Language": {
                                "description": "The language used in the response",
                                "enum": [
                                    "de",
                                    "en-us",
                                    "fr",
                                    "ja",
                                    "ru",
                                    "zh"
                                ],
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok array",
                            "items": {
                                "description": "200 ok object",
                                "properties": {
                                    "levels": {
                                        "description": "A list of a available insurance levels for this ship type",
                                        "items": {
                                            "description": "level object",
                                            "properties": {
                                                "cost": {
                                                    "description": "cost number",
                                                    "format": "float",
                                                    "title": "get_insurance_prices_cost",
                                                    "type": "number"
                                                },
                                                "name": {
                                                    "description": "Localized insurance level",
                                                    "title": "get_insurance_prices_name",
                                                    "type": "string"
                                                },
                                                "payout": {
                                                    "description": "payout number",
                                                    "format": "float",
                                                    "title": "get_insurance_prices_payout",
                                                    "type": "number"
                                                }
                                            },
                                            "required": [
                                                "cost",
                                                "payout",
                                                "name"
                                            ],
                                            "title": "get_insurance_prices_level",
                                            "type": "object"
                                        },
                                        "title": "get_insurance_prices_levels",
                                        "type": "array"
                                    },
                                    "type_id": {
                                        "description": "type_id integer",
                                        "format": "int32",
                                        "title": "get_insurance_prices_type_id",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "type_id",
                                    "levels"
                                ],
                                "title": "get_insurance_prices_200_ok",
                                "type": "object"
                            },
                            "title": "get_insurance_prices_ok",
                            "type": "array"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_insurance_prices_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_insurance_prices_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "summary": "List insurance levels",
                "tags": [
                    "Insurance"
                ],
                "x-alternate-versions": [
                    "dev",
                    "latest",
                    "v1"
                ],
                "x-cached-seconds": 3600
            }
        },
        "/killmails/{killmail_id}/{killmail_hash}/": {
            "get": {
                "description": "Return a single killmail from its ID and hash\n\n---\n\nAlternate route: `/v1/killmails/{killmail_id}/{killmail_hash}/`\n\nAlternate route: `/latest/killmails/{killmail_id}/{killmail_hash}/`\n\nAlternate route: `/dev/killmails/{killmail_id}/{killmail_hash}/`\n\n\n---\n\nThis route is cached for up to 3600 seconds",
                "operationId": "get_killmails_killmail_id_killmail_hash",
                "parameters": [
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "description": "The killmail hash for verification",
                        "in": "path",
                        "name": "killmail_hash",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The killmail ID to be queried",
                        "format": "int32",
                        "in": "path",
                        "name": "killmail_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A killmail",
                        "examples": {
                            "application/json": {
                                "attackers": [
                                    {
                                        "character_id": 95810944,
                                        "corporation_id": 1000179,
                                        "damage_done": 5745,
                                        "faction_id": 500003,
                                        "final_blow": true,
                                        "security_status": -0.3,
                                        "ship_type_id": 17841,
                                        "weapon_type_id": 3074
                                    }
                                ],
                                "killmail_id": 56733821,
                                "killmail_time": "2016-10-22T17:13:36Z",
                                "solar_system_id": 30002976,
                                "victim": {
                                    "alliance_id": 621338554,
                                    "character_id": 92796241,
                                    "corporation_id": 841363671,
                                    "damage_taken": 5745,
                                    "items": [
                                        {
                                            "flag": 20,
                                            "item_type_id": 5973,
                                            "quantity_dropped": 1,
                                            "singleton": 0
                                        }
                                    ],
                                    "position": {
                                        "x": 452186600569.4748,
                                        "y": 146704961490.90222,
                                        "z": 109514596532.54477
                                    },
                                    "ship_type_id": 17812
                                }
                            }
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok object",
                            "properties": {
                                "attackers": {
                                    "description": "attackers array",
                                    "items": {
                                        "description": "attacker object",
                                        "properties": {
                                            "alliance_id": {
                                                "description": "alliance_id integer",
                                                "format": "int32",
                                                "title": "get_killmails_killmail_id_killmail_hash_alliance_id",
                                                "type": "integer"
                                            },
                                            "character_id": {
                                                "description": "character_id integer",
                                                "format": "int32",
                                                "title": "get_killmails_killmail_id_killmail_hash_character_id",
                                                "type": "integer"
                                            },
                                            "corporation_id": {
                                                "description": "corporation_id integer",
                                                "format": "int32",
                                                "title": "get_killmails_killmail_id_killmail_hash_corporation_id",
                                                "type": "integer"
                                            },
                                            "damage_done": {
                                                "description": "damage_done integer",
                                                "format": "int32",
                                                "title": "get_killmails_killmail_id_killmail_hash_damage_done",
                                                "type": "integer"
                                            },
                                            "faction_id": {
                                                "description": "faction_id integer",
                                                "format": "int32",
                                                "title": "get_killmails_killmail_id_killmail_hash_faction_id",
                                                "type": "integer"
                                            },
                                            "final_blow": {
                                                "description": "Was the attacker the one to achieve the final blow\n",
                                                "title": "get_killmails_killmail_id_killmail_hash_final_blow",
                                                "type": "boolean"
                                            },
                                            "security_status": {
                                                "description": "Security status for the attacker\n",
                                                "format": "float",
                                                "title": "get_killmails_killmail_id_killmail_hash_security_status",
                                                "type": "number"
                                            },
                                            "ship_type_id": {
                                                "description": "What ship was the attacker flying\n",
                                                "format": "int32",
                                                "title": "get_killmails_killmail_id_killmail_hash_ship_type_id",
                                                "type": "integer"
                                            },
                                            "weapon_type_id": {
                                                "description": "What weapon was used by the attacker for the kill\n",
                                                "format": "int32",
                                                "title": "get_killmails_killmail_id_killmail_hash_weapon_type_id",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "security_status",
                                            "final_blow",
                                            "damage_done"
                                        ],
                                        "title": "get_killmails_killmail_id_killmail_hash_attacker",
                                        "type": "object"
                                    },
                                    "title": "get_killmails_killmail_id_killmail_hash_attackers",
                                    "type": "array"
                                },
                                "killmail_id": {
                                    "description": "ID of the killmail",
                                    "format": "int32",
                                    "title": "get_killmails_killmail_id_killmail_hash_killmail_id",
                                    "type": "integer"
                                },
                                "killmail_time": {
                                    "description": "Time that the victim was killed and the killmail generated\n",
                                    "format": "date-time",
                                    "title": "get_killmails_killmail_id_killmail_hash_killmail_time",
                                    "type": "string"
                                },
                                "moon_id": {
                                    "description": "Moon if the kill took place at one",
                                    "format": "int32",
                                    "title": "get_killmails_killmail_id_killmail_hash_moon_id",
                                    "type": "integer"
                                },
                                "solar_system_id": {
                                    "description": "Solar system that the kill took place in\n",
                                    "format": "int32",
                                    "title": "get_killmails_killmail_id_killmail_hash_solar_system_id",
                                    "type": "integer"
                                },
                                "victim": {
                                    "description": "victim object",
                                    "properties": {
                                        "alliance_id": {
                                            "description": "alliance_id integer",
                                            "format": "int32",
                                            "title": "get_killmails_killmail_id_killmail_hash_alliance_id",
                                            "type": "integer"
                                        },
                                        "character_id": {
                                            "description": "character_id integer",
                                            "format": "int32",
                                            "title": "get_killmails_killmail_id_killmail_hash_character_id",
                                            "type": "integer"
                                        },
                                        "corporation_id": {
                                            "description": "corporation_id integer",
                                            "format": "int32",
                                            "title": "get_killmails_killmail_id_killmail_hash_corporation_id",
                                            "type": "integer"
                                        },
                                        "damage_taken": {
                                            "description": "How much total damage was taken by the victim\n",
                                            "format": "int32",
                                            "title": "get_killmails_killmail_id_killmail_hash_damage_taken",
                                            "type": "integer"
                                        },
                                        "faction_id": {
                                            "description": "faction_id integer",
                                            "format": "int32",
                                            "title": "get_killmails_killmail_id_killmail_hash_faction_id",
                                            "type": "integer"
                                        },
                                        "items": {
                                            "description": "items array",
                                            "items": {
                                                "description": "item object",
                                                "properties": {
                                                    "flag": {
                                                        "description": "Flag for the location of the item\n",
                                                        "format": "int32",
                                                        "title": "get_killmails_killmail_id_killmail_hash_flag",
                                                        "type": "integer"
                                                    },
                                                    "item_type_id": {
                                                        "description": "item_type_id integer",
                                                        "format": "int32",
                                                        "title": "get_killmails_killmail_id_killmail_hash_item_type_id",
                                                        "type": "integer"
                                                    },
                                                    "items": {
                                                        "description": "items array",
                                                        "items": {
                                                            "description": "item object",
                                                            "properties": {
                                                                "flag": {
                                                                    "description": "flag integer",
                                                                    "format": "int32",
                                                                    "title": "get_killmails_killmail_id_killmail_hash_flag",
                                                                    "type": "integer"
                                                                },
                                                                "item_type_id": {
                                                                    "description": "item_type_id integer",
                                                                    "format": "int32",
                                                                    "title": "get_killmails_killmail_id_killmail_hash_item_type_id",
                                                                    "type": "integer"
                                                                },
                                                                "quantity_destroyed": {
                                                                    "description": "quantity_destroyed integer",
                                                                    "format": "int64",
                                                                    "title": "get_killmails_killmail_id_killmail_hash_quantity_destroyed",
                                                                    "type": "integer"
                                                                },
                                                                "quantity_dropped": {
                                                                    "description": "quantity_dropped integer",
                                                                    "format": "int64",
                                                                    "title": "get_killmails_killmail_id_killmail_hash_quantity_dropped",
                                                                    "type": "integer"
                                                                },
                                                                "singleton": {
                                                                    "description": "singleton integer",
                                                                    "format": "int32",
                                                                    "title": "get_killmails_killmail_id_killmail_hash_singleton",
                                                                    "type": "integer"
                                                                }
                                                            },
                                                            "required": [
                                                                "item_type_id",
                                                                "singleton",
                                                                "flag"
                                                            ],
                                                            "title": "get_killmails_killmail_id_killmail_hash_item",
                                                            "type": "object"
                                                        },
                                                        "title": "get_killmails_killmail_id_killmail_hash_items",
                                                        "type": "array"
                                                    },
                                                    "quantity_destroyed": {
                                                        "description": "How many of the item were destroyed if any\n",
                                                        "format": "int64",
                                                        "title": "get_killmails_killmail_id_killmail_hash_quantity_destroyed",
                                                        "type": "integer"
                                                    },
                                                    "quantity_dropped": {
                                                        "description": "How many of the item were dropped if any\n",
                                                        "format": "int64",
                                                        "title": "get_killmails_killmail_id_killmail_hash_quantity_dropped",
                                                        "type": "integer"
                                                    },
                                                    "singleton": {
                                                        "description": "singleton integer",
                                                        "format": "int32",
                                                        "title": "get_killmails_killmail_id_killmail_hash_singleton",
                                                        "type": "integer"
                                                    }
                                                },
                                                "required": [
                                                    "item_type_id",
                                                    "singleton",
                                                    "flag"
                                                ],
                                                "title": "get_killmails_killmail_id_killmail_hash_item",
                                                "type": "object"
                                            },
                                            "title": "get_killmails_killmail_id_killmail_hash_items",
                                            "type": "array"
                                        },
                                        "position": {
                                            "description": "Coordinates of the victim in Cartesian space relative to the Sun\n",
                                            "properties": {
                                                "x": {
                                                    "description": "x number",
                                                    "format": "float",
                                                    "title": "get_killmails_killmail_id_killmail_hash_x",
                                                    "type": "number"
                                                },
                                                "y": {
                                                    "description": "y number",
                                                    "format": "float",
                                                    "title": "get_killmails_killmail_id_killmail_hash_y",
                                                    "type": "number"
                                                },
                                                "z": {
                                                    "description": "z number",
                                                    "format": "float",
                                                    "title": "get_killmails_killmail_id_killmail_hash_z",
                                                    "type": "number"
                                                }
                                            },
                                            "required": [
                                                "x",
                                                "y",
                                                "z"
                                            ],
                                            "title": "get_killmails_killmail_id_killmail_hash_position",
                                            "type": "object"
                                        },
                                        "ship_type_id": {
                                            "description": "The ship that the victim was piloting and was destroyed\n",
                                            "format": "int32",
                                            "title": "get_killmails_killmail_id_killmail_hash_ship_type_id",
                                            "type": "integer"
                                        }
                                    },
                                    "required": [
                                        "damage_taken",
                                        "ship_type_id"
                                    ],
                                    "title": "get_killmails_killmail_id_killmail_hash_victim",
                                    "type": "object"
                                },
                                "war_id": {
                                    "description": "War if the killmail is generated in relation to an official war\n",
                                    "format": "int32",
                                    "title": "get_killmails_killmail_id_killmail_hash_war_id",
                                    "type": "integer"
                                }
                            },
                            "required": [
                                "killmail_id",
                                "killmail_time",
                                "victim",
                                "attackers",
                                "solar_system_id"
                            ],
                            "title": "get_killmails_killmail_id_killmail_hash_ok",
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Invalid killmail_id and/or killmail_hash",
                        "examples": {
                            "application/json": {
                                "error": "Unprocessable entity message"
                            }
                        },
                        "schema": {
                            "description": "Unprocessable entity",
                            "properties": {
                                "error": {
                                    "description": "Unprocessable entity message",
                                    "title": "get_killmails_killmail_id_killmail_hash_422_unprocessable_entity",
                                    "type": "string"
                                }
                            },
                            "title": "get_killmails_killmail_id_killmail_hash_unprocessable_entity",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_killmails_killmail_id_killmail_hash_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_killmails_killmail_id_killmail_hash_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "summary": "Get a single killmail",
                "tags": [
                    "Killmails"
                ],
                "x-alternate-versions": [
                    "dev",
                    "latest",
                    "v1"
                ],
                "x-cached-seconds": 3600
            }
        },
        "/loyalty/stores/{corporation_id}/offers/": {
            "get": {
                "description": "Return a list of offers from a specific corporation's loyalty store\n\n---\n\nAlternate route: `/v1/loyalty/stores/{corporation_id}/offers/`\n\nAlternate route: `/latest/loyalty/stores/{corporation_id}/offers/`\n\nAlternate route: `/dev/loyalty/stores/{corporation_id}/offers/`\n\n\n---\n\nThis route is cached for up to 3600 seconds",
                "operationId": "get_loyalty_stores_corporation_id_offers",
                "parameters": [
                    {
                        "description": "ID of a corporation",
                        "format": "int32",
                        "in": "path",
                        "name": "corporation_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of offers",
                        "examples": {
                            "application/json": [
                                {
                                    "isk_cost": 0,
                                    "lp_cost": 100,
                                    "offer_id": 1,
                                    "quantity": 1,
                                    "required_items": [],
                                    "type_id": 123
                                },
                                {
                                    "isk_cost": 1000,
                                    "lp_cost": 100,
                                    "offer_id": 2,
                                    "quantity": 10,
                                    "required_items": [
                                        {
                                            "quantity": 10,
                                            "type_id": 1234
                                        }
                                    ],
                                    "type_id": 1235
                                }
                            ]
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok array",
                            "items": {
                                "description": "200 ok object",
                                "properties": {
                                    "isk_cost": {
                                        "description": "isk_cost number",
                                        "format": "int32",
                                        "title": "get_loyalty_stores_corporation_id_offers_isk_cost",
                                        "type": "number"
                                    },
                                    "lp_cost": {
                                        "description": "lp_cost integer",
                                        "format": "int32",
                                        "title": "get_loyalty_stores_corporation_id_offers_lp_cost",
                                        "type": "integer"
                                    },
                                    "offer_id": {
                                        "description": "offer_id integer",
                                        "format": "int32",
                                        "title": "get_loyalty_stores_corporation_id_offers_offer_id",
                                        "type": "integer"
                                    },
                                    "quantity": {
                                        "description": "quantity integer",
                                        "format": "int32",
                                        "title": "get_loyalty_stores_corporation_id_offers_quantity",
                                        "type": "integer"
                                    },
                                    "required_items": {
                                        "description": "required_items array",
                                        "items": {
                                            "description": "required_item object",
                                            "properties": {
                                                "quantity": {
                                                    "description": "quantity integer",
                                                    "format": "int32",
                                                    "title": "get_loyalty_stores_corporation_id_offers_quantity",
                                                    "type": "integer"
                                                },
                                                "type_id": {
                                                    "description": "type_id integer",
                                                    "format": "int32",
                                                    "title": "get_loyalty_stores_corporation_id_offers_type_id",
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "type_id",
                                                "quantity"
                                            ],
                                            "title": "get_loyalty_stores_corporation_id_offers_required_item",
                                            "type": "object"
                                        },
                                        "title": "get_loyalty_stores_corporation_id_offers_required_items",
                                        "type": "array"
                                    },
                                    "type_id": {
                                        "description": "type_id integer",
                                        "format": "int32",
                                        "title": "get_loyalty_stores_corporation_id_offers_type_id",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "offer_id",
                                    "type_id",
                                    "quantity",
                                    "lp_cost",
                                    "isk_cost",
                                    "required_items"
                                ],
                                "title": "get_loyalty_stores_corporation_id_offers_200_ok",
                                "type": "object"
                            },
                            "title": "get_loyalty_stores_corporation_id_offers_ok",
                            "type": "array"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_loyalty_stores_corporation_id_offers_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_loyalty_stores_corporation_id_offers_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "summary": "List loyalty store offers",
                "tags": [
                    "Loyalty"
                ],
                "x-alternate-versions": [
                    "dev",
                    "latest",
                    "v1"
                ],
                "x-cached-seconds": 3600
            }
        },
        "/markets/groups/": {
            "get": {
                "description": "Get a list of item groups\n\n---\n\nAlternate route: `/v1/markets/groups/`\n\nAlternate route: `/latest/markets/groups/`\n\nAlternate route: `/dev/markets/groups/`\n\n\n---\n\nThis route is cached for up to 3600 seconds",
                "operationId": "get_markets_groups",
                "parameters": [
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of item group ids",
                        "examples": {
                            "application/json": [
                                1,
                                2,
                                3
                            ]
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok array",
                            "items": {
                                "description": "200 ok integer",
                                "format": "int32",
                                "title": "get_markets_groups_200_ok",
                                "type": "integer"
                            },
                            "title": "get_markets_groups_ok",
                            "type": "array"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_markets_groups_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_markets_groups_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "summary": "Get item groups",
                "tags": [
                    "Market"
                ],
                "x-alternate-versions": [
                    "dev",
                    "latest",
                    "v1"
                ],
                "x-cached-seconds": 3600
            }
        },
        "/markets/groups/{market_group_id}/": {
            "get": {
                "description": "Get information on an item group\n\n---\n\nAlternate route: `/v1/markets/groups/{market_group_id}/`\n\nAlternate route: `/latest/markets/groups/{market_group_id}/`\n\nAlternate route: `/dev/markets/groups/{market_group_id}/`\n\n\n---\n\nThis route is cached for up to 3600 seconds",
                "operationId": "get_markets_groups_market_group_id",
                "parameters": [
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "default": "en-us",
                        "description": "Language to use in the response",
                        "enum": [
                            "de",
                            "en-us",
                            "fr",
                            "ja",
                            "ru",
                            "zh"
                        ],
                        "in": "query",
                        "name": "language",
                        "type": "string"
                    },
                    {
                        "description": "An Eve item group ID",
                        "format": "int32",
                        "in": "path",
                        "name": "market_group_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Information about an item group",
                        "examples": {
                            "application/json": {
                                "description": "Small, fast vessels suited to a variety of purposes.",
                                "market_group_id": 5,
                                "name": "Standard Frigates",
                                "parent_group_id": 1361,
                                "types": [
                                    582,
                                    583
                                ]
                            }
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Content-Language": {
                                "description": "The language used in the response",
                                "enum": [
                                    "de",
                                    "en-us",
                                    "fr",
                                    "ja",
                                    "ru",
                                    "zh"
                                ],
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok object",
                            "properties": {
                                "description": {
                                    "description": "description string",
                                    "title": "get_markets_groups_market_group_id_description",
                                    "type": "string"
                                },
                                "market_group_id": {
                                    "description": "market_group_id integer",
                                    "format": "int32",
                                    "title": "get_markets_groups_market_group_id_market_group_id",
                                    "type": "integer"
                                },
                                "name": {
                                    "description": "name string",
                                    "title": "get_markets_groups_market_group_id_name",
                                    "type": "string"
                                },
                                "parent_group_id": {
                                    "description": "parent_group_id integer",
                                    "format": "int32",
                                    "title": "get_markets_groups_market_group_id_parent_group_id",
                                    "type": "integer"
                                },
                                "types": {
                                    "description": "types array",
                                    "items": {
                                        "description": "type integer",
                                        "format": "int32",
                                        "title": "get_markets_groups_market_group_id_type",
                                        "type": "integer"
                                    },
                                    "title": "get_markets_groups_market_group_id_types",
                                    "type": "array"
                                }
                            },
                            "required": [
                                "market_group_id",
                                "name",
                                "description",
                                "types"
                            ],
                            "title": "get_markets_groups_market_group_id_ok",
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "Market group not found",
                        "examples": {
                            "application/json": {
                                "error": "Not found message"
                            }
                        },
                        "schema": {
                            "description": "Not found",
                            "properties": {
                                "error": {
                                    "description": "Not found message",
                                    "title": "get_markets_groups_market_group_id_404_not_found",
                                    "type": "string"
                                }
                            },
                            "title": "get_markets_groups_market_group_id_not_found",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_markets_groups_market_group_id_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_markets_groups_market_group_id_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "summary": "Get item group information",
                "tags": [
                    "Market"
                ],
                "x-alternate-versions": [
                    "dev",
                    "latest",
                    "v1"
                ],
                "x-cached-seconds": 3600
            }
        },
        "/markets/prices/": {
            "get": {
                "description": "Return a list of prices\n\n---\n\nAlternate route: `/v1/markets/prices/`\n\nAlternate route: `/latest/markets/prices/`\n\nAlternate route: `/dev/markets/prices/`\n\n\n---\n\nThis route is cached for up to 3600 seconds",
                "operationId": "get_markets_prices",
                "parameters": [
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of prices",
                        "examples": {
                            "application/json": [
                                {
                                    "adjusted_price": 306988.09,
                                    "average_price": 306292.67,
                                    "type_id": 32772
                                }
                            ]
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok array",
                            "items": {
                                "description": "200 ok object",
                                "properties": {
                                    "adjusted_price": {
                                        "description": "adjusted_price number",
                                        "format": "float",
                                        "title": "get_markets_prices_adjusted_price",
                                        "type": "number"
                                    },
                                    "average_price": {
                                        "description": "average_price number",
                                        "format": "float",
                                        "title": "get_markets_prices_average_price",
                                        "type": "number"
                                    },
                                    "type_id": {
                                        "description": "type_id integer",
                                        "format": "int32",
                                        "title": "get_markets_prices_type_id",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "type_id"
                                ],
                                "title": "get_markets_prices_200_ok",
                                "type": "object"
                            },
                            "title": "get_markets_prices_ok",
                            "type": "array"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_markets_prices_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_markets_prices_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "summary": "List market prices",
                "tags": [
                    "Market"
                ],
                "x-alternate-versions": [
                    "dev",
                    "latest",
                    "v1"
                ],
                "x-cached-seconds": 3600
            }
        },
        "/markets/structures/{structure_id}/": {
            "get": {
                "description": "Return all orders in a structure\n\n---\n\nAlternate route: `/v1/markets/structures/{structure_id}/`\n\nAlternate route: `/latest/markets/structures/{structure_id}/`\n\nAlternate route: `/dev/markets/structures/{structure_id}/`\n\n\n---\n\nThis route is cached for up to 300 seconds",
                "operationId": "get_markets_structures_structure_id",
                "parameters": [
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "default": 1,
                        "description": "Which page to query, starting at 1",
                        "format": "int32",
                        "in": "query",
                        "name": "page",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "description": "Return orders in this structure",
                        "format": "int64",
                        "in": "path",
                        "name": "structure_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Access token to use, if preferred over a header",
                        "in": "query",
                        "name": "token",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of orders",
                        "examples": {
                            "application/json": [
                                {
                                    "duration": 90,
                                    "is_buy_order": false,
                                    "issued": "2016-09-03T05:12:25Z",
                                    "location_id": 60005599,
                                    "min_volume": 1,
                                    "order_id": 4623824223,
                                    "price": 9.9,
                                    "range": "region",
                                    "type_id": 34,
                                    "volume_remain": 1296000,
                                    "volume_total": 2000000
                                }
                            ]
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok array",
                            "items": {
                                "description": "200 ok object",
                                "properties": {
                                    "duration": {
                                        "description": "duration integer",
                                        "format": "int32",
                                        "title": "get_markets_structures_structure_id_duration",
                                        "type": "integer"
                                    },
                                    "is_buy_order": {
                                        "description": "is_buy_order boolean",
                                        "title": "get_markets_structures_structure_id_is_buy_order",
                                        "type": "boolean"
                                    },
                                    "issued": {
                                        "description": "issued string",
                                        "format": "date-time",
                                        "title": "get_markets_structures_structure_id_issued",
                                        "type": "string"
                                    },
                                    "location_id": {
                                        "description": "location_id integer",
                                        "format": "int64",
                                        "title": "get_markets_structures_structure_id_location_id",
                                        "type": "integer"
                                    },
                                    "min_volume": {
                                        "description": "min_volume integer",
                                        "format": "int32",
                                        "title": "get_markets_structures_structure_id_min_volume",
                                        "type": "integer"
                                    },
                                    "order_id": {
                                        "description": "order_id integer",
                                        "format": "int64",
                                        "title": "get_markets_structures_structure_id_order_id",
                                        "type": "integer"
                                    },
                                    "price": {
                                        "description": "price number",
                                        "format": "float",
                                        "title": "get_markets_structures_structure_id_price",
                                        "type": "number"
                                    },
                                    "range": {
                                        "description": "range string",
                                        "enum": [
                                            "station",
                                            "region",
                                            "solarsystem",
                                            "1",
                                            "2",
                                            "3",
                                            "4",
                                            "5",
                                            "10",
                                            "20",
                                            "30",
                                            "40"
                                        ],
                                        "title": "get_markets_structures_structure_id_range",
                                        "type": "string"
                                    },
                                    "type_id": {
                                        "description": "type_id integer",
                                        "format": "int32",
                                        "title": "get_markets_structures_structure_id_type_id",
                                        "type": "integer"
                                    },
                                    "volume_remain": {
                                        "description": "volume_remain integer",
                                        "format": "int32",
                                        "title": "get_markets_structures_structure_id_volume_remain",
                                        "type": "integer"
                                    },
                                    "volume_total": {
                                        "description": "volume_total integer",
                                        "format": "int32",
                                        "title": "get_markets_structures_structure_id_volume_total",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "order_id",
                                    "type_id",
                                    "location_id",
                                    "volume_total",
                                    "volume_remain",
                                    "min_volume",
                                    "price",
                                    "is_buy_order",
                                    "duration",
                                    "issued",
                                    "range"
                                ],
                                "title": "get_markets_structures_structure_id_200_ok",
                                "type": "object"
                            },
                            "title": "get_markets_structures_structure_id_ok",
                            "type": "array"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "examples": {
                            "application/json": {
                                "error": "Token is not valid for scope(s): esi-markets.structure_markets.v1"
                            }
                        },
                        "schema": {
                            "description": "Forbidden",
                            "properties": {
                                "error": {
                                    "description": "Forbidden message",
                                    "title": "get_markets_structures_structure_id_403_forbidden",
                                    "type": "string"
                                }
                            },
                            "title": "get_markets_structures_structure_id_forbidden",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_markets_structures_structure_id_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_markets_structures_structure_id_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "evesso": [
                            "esi-markets.structure_markets.v1"
                        ]
                    }
                ],
                "summary": "List orders in a structure",
                "tags": [
                    "Market"
                ],
                "x-alternate-versions": [
                    "dev",
                    "latest",
                    "v1"
                ],
                "x-cached-seconds": 300
            }
        },
        "/markets/{region_id}/history/": {
            "get": {
                "description": "Return a list of historical market statistics for the specified type in a region\n\n---\n\nAlternate route: `/v1/markets/{region_id}/history/`\n\nAlternate route: `/latest/markets/{region_id}/history/`\n\nAlternate route: `/dev/markets/{region_id}/history/`\n\n\n---\n\nThis route is cached for up to 3600 seconds",
                "operationId": "get_markets_region_id_history",
                "parameters": [
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "description": "Return statistics in this region",
                        "format": "int32",
                        "in": "path",
                        "name": "region_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Return statistics for this type",
                        "format": "int32",
                        "in": "query",
                        "name": "type_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of historical market statistics",
                        "examples": {
                            "application/json": [
                                {
                                    "average": 5.25,
                                    "date": "2015-05-01",
                                    "highest": 5.27,
                                    "lowest": 5.11,
                                    "order_count": 2267,
                                    "volume": 16276782035
                                }
                            ]
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok array",
                            "items": {
                                "description": "200 ok object",
                                "properties": {
                                    "average": {
                                        "description": "average number",
                                        "format": "float",
                                        "title": "get_markets_region_id_history_average",
                                        "type": "number"
                                    },
                                    "date": {
                                        "description": "The date of this historical statistic entry",
                                        "format": "date",
                                        "title": "get_markets_region_id_history_date",
                                        "type": "string"
                                    },
                                    "highest": {
                                        "description": "highest number",
                                        "format": "float",
                                        "title": "get_markets_region_id_history_highest",
                                        "type": "number"
                                    },
                                    "lowest": {
                                        "description": "lowest number",
                                        "format": "float",
                                        "title": "get_markets_region_id_history_lowest",
                                        "type": "number"
                                    },
                                    "order_count": {
                                        "description": "Total number of orders happened that day",
                                        "format": "int64",
                                        "title": "get_markets_region_id_history_order_count",
                                        "type": "integer"
                                    },
                                    "volume": {
                                        "description": "Total",
                                        "format": "int64",
                                        "title": "get_markets_region_id_history_volume",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "date",
                                    "order_count",
                                    "volume",
                                    "highest",
                                    "average",
                                    "lowest"
                                ],
                                "title": "get_markets_region_id_history_200_ok",
                                "type": "object"
                            },
                            "title": "get_markets_region_id_history_ok",
                            "type": "array"
                        }
                    },
                    "422": {
                        "description": "Not found",
                        "examples": {
                            "application/json": {
                                "error": "Unprocessable entity message"
                            }
                        },
                        "schema": {
                            "description": "Unprocessable entity",
                            "properties": {
                                "error": {
                                    "description": "Unprocessable entity message",
                                    "title": "get_markets_region_id_history_422_unprocessable_entity",
                                    "type": "string"
                                }
                            },
                            "title": "get_markets_region_id_history_unprocessable_entity",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_markets_region_id_history_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_markets_region_id_history_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "summary": "List historical market statistics in a region",
                "tags": [
                    "Market"
                ],
                "x-alternate-versions": [
                    "dev",
                    "latest",
                    "v1"
                ],
                "x-cached-seconds": 3600
            }
        },
        "/markets/{region_id}/orders/": {
            "get": {
                "description": "Return a list of orders in a region\n\n---\n\nAlternate route: `/v1/markets/{region_id}/orders/`\n\nAlternate route: `/latest/markets/{region_id}/orders/`\n\nAlternate route: `/dev/markets/{region_id}/orders/`\n\n\n---\n\nThis route is cached for up to 300 seconds",
                "operationId": "get_markets_region_id_orders",
                "parameters": [
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "default": "all",
                        "description": "Filter buy/sell orders, return all orders by default. If you query without type_id, we always return both buy and sell orders.\n",
                        "enum": [
                            "buy",
                            "sell",
                            "all"
                        ],
                        "in": "query",
                        "name": "order_type",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": 1,
                        "description": "Which page to query, only used for querying without type_id. Starting at 1\n",
                        "format": "int32",
                        "in": "query",
                        "name": "page",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "description": "Return orders in this region",
                        "format": "int32",
                        "in": "path",
                        "name": "region_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Return orders only for this type",
                        "format": "int32",
                        "in": "query",
                        "name": "type_id",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of orders",
                        "examples": {
                            "application/json": [
                                {
                                    "duration": 90,
                                    "is_buy_order": false,
                                    "issued": "2016-09-03T05:12:25Z",
                                    "location_id": 60005599,
                                    "min_volume": 1,
                                    "order_id": 4623824223,
                                    "price": 9.9,
                                    "range": "region",
                                    "type_id": 34,
                                    "volume_remain": 1296000,
                                    "volume_total": 2000000
                                }
                            ]
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok array",
                            "items": {
                                "description": "200 ok object",
                                "properties": {
                                    "duration": {
                                        "description": "duration integer",
                                        "format": "int32",
                                        "title": "get_markets_region_id_orders_duration",
                                        "type": "integer"
                                    },
                                    "is_buy_order": {
                                        "description": "is_buy_order boolean",
                                        "title": "get_markets_region_id_orders_is_buy_order",
                                        "type": "boolean"
                                    },
                                    "issued": {
                                        "description": "issued string",
                                        "format": "date-time",
                                        "title": "get_markets_region_id_orders_issued",
                                        "type": "string"
                                    },
                                    "location_id": {
                                        "description": "location_id integer",
                                        "format": "int64",
                                        "title": "get_markets_region_id_orders_location_id",
                                        "type": "integer"
                                    },
                                    "min_volume": {
                                        "description": "min_volume integer",
                                        "format": "int32",
                                        "title": "get_markets_region_id_orders_min_volume",
                                        "type": "integer"
                                    },
                                    "order_id": {
                                        "description": "order_id integer",
                                        "format": "int64",
                                        "title": "get_markets_region_id_orders_order_id",
                                        "type": "integer"
                                    },
                                    "price": {
                                        "description": "price number",
                                        "format": "float",
                                        "title": "get_markets_region_id_orders_price",
                                        "type": "number"
                                    },
                                    "range": {
                                        "description": "range string",
                                        "enum": [
                                            "station",
                                            "region",
                                            "solarsystem",
                                            "1",
                                            "2",
                                            "3",
                                            "4",
                                            "5",
                                            "10",
                                            "20",
                                            "30",
                                            "40"
                                        ],
                                        "title": "get_markets_region_id_orders_range",
                                        "type": "string"
                                    },
                                    "type_id": {
                                        "description": "type_id integer",
                                        "format": "int32",
                                        "title": "get_markets_region_id_orders_type_id",
                                        "type": "integer"
                                    },
                                    "volume_remain": {
                                        "description": "volume_remain integer",
                                        "format": "int32",
                                        "title": "get_markets_region_id_orders_volume_remain",
                                        "type": "integer"
                                    },
                                    "volume_total": {
                                        "description": "volume_total integer",
                                        "format": "int32",
                                        "title": "get_markets_region_id_orders_volume_total",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "order_id",
                                    "type_id",
                                    "location_id",
                                    "volume_total",
                                    "volume_remain",
                                    "min_volume",
                                    "price",
                                    "is_buy_order",
                                    "duration",
                                    "issued",
                                    "range"
                                ],
                                "title": "get_markets_region_id_orders_200_ok",
                                "type": "object"
                            },
                            "title": "get_markets_region_id_orders_ok",
                            "type": "array"
                        }
                    },
                    "422": {
                        "description": "Not found",
                        "examples": {
                            "application/json": {
                                "error": "Unprocessable entity message"
                            }
                        },
                        "schema": {
                            "description": "Unprocessable entity",
                            "properties": {
                                "error": {
                                    "description": "Unprocessable entity message",
                                    "title": "get_markets_region_id_orders_422_unprocessable_entity",
                                    "type": "string"
                                }
                            },
                            "title": "get_markets_region_id_orders_unprocessable_entity",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_markets_region_id_orders_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_markets_region_id_orders_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "summary": "List orders in a region",
                "tags": [
                    "Market"
                ],
                "x-alternate-versions": [
                    "dev",
                    "latest",
                    "v1"
                ],
                "x-cached-seconds": 300
            }
        },
        "/opportunities/groups/": {
            "get": {
                "description": "Return a list of opportunities groups\n\n---\n\nAlternate route: `/v1/opportunities/groups/`\n\nAlternate route: `/latest/opportunities/groups/`\n\nAlternate route: `/dev/opportunities/groups/`\n\n\n---\n\nThis route is cached for up to 3600 seconds",
                "operationId": "get_opportunities_groups",
                "parameters": [
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of opportunities group ids",
                        "examples": {
                            "application/json": [
                                100,
                                101,
                                102,
                                103
                            ]
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok array",
                            "items": {
                                "description": "200 ok integer",
                                "format": "int32",
                                "title": "get_opportunities_groups_200_ok",
                                "type": "integer"
                            },
                            "title": "get_opportunities_groups_ok",
                            "type": "array"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_opportunities_groups_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_opportunities_groups_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "summary": "Get opportunities groups",
                "tags": [
                    "Opportunities"
                ],
                "x-alternate-versions": [
                    "dev",
                    "latest",
                    "v1"
                ],
                "x-cached-seconds": 3600
            }
        },
        "/opportunities/groups/{group_id}/": {
            "get": {
                "description": "Return information of an opportunities group\n\n---\n\nAlternate route: `/v1/opportunities/groups/{group_id}/`\n\nAlternate route: `/latest/opportunities/groups/{group_id}/`\n\nAlternate route: `/dev/opportunities/groups/{group_id}/`\n\n\n---\n\nThis route is cached for up to 3600 seconds",
                "operationId": "get_opportunities_groups_group_id",
                "parameters": [
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "description": "ID of an opportunities group",
                        "format": "int32",
                        "in": "path",
                        "name": "group_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "default": "en-us",
                        "description": "Language to use in the response",
                        "enum": [
                            "de",
                            "en-us",
                            "fr",
                            "ja",
                            "ru",
                            "zh"
                        ],
                        "in": "query",
                        "name": "language",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Details of an opportunities group",
                        "examples": {
                            "application/json": {
                                "connected_groups": [
                                    100
                                ],
                                "description": "As a capsuleer...",
                                "group_id": 103,
                                "name": "Welcome to New Eden",
                                "notification": "Completed:<br>Welcome to New Eden",
                                "required_tasks": [
                                    19
                                ]
                            }
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Content-Language": {
                                "description": "The language used in the response",
                                "enum": [
                                    "de",
                                    "en-us",
                                    "fr",
                                    "ja",
                                    "ru",
                                    "zh"
                                ],
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok object",
                            "properties": {
                                "connected_groups": {
                                    "description": "The groups that are connected to this group on the opportunities map",
                                    "items": {
                                        "description": "connected_group integer",
                                        "format": "int32",
                                        "title": "get_opportunities_groups_group_id_connected_group",
                                        "type": "integer"
                                    },
                                    "title": "get_opportunities_groups_group_id_connected_groups",
                                    "type": "array"
                                },
                                "description": {
                                    "description": "description string",
                                    "title": "get_opportunities_groups_group_id_description",
                                    "type": "string"
                                },
                                "group_id": {
                                    "description": "group_id integer",
                                    "format": "int32",
                                    "title": "get_opportunities_groups_group_id_group_id",
                                    "type": "integer"
                                },
                                "name": {
                                    "description": "name string",
                                    "title": "get_opportunities_groups_group_id_name",
                                    "type": "string"
                                },
                                "notification": {
                                    "description": "notification string",
                                    "title": "get_opportunities_groups_group_id_notification",
                                    "type": "string"
                                },
                                "required_tasks": {
                                    "description": "Tasks need to complete for this group",
                                    "items": {
                                        "description": "required_task integer",
                                        "format": "int32",
                                        "title": "get_opportunities_groups_group_id_required_task",
                                        "type": "integer"
                                    },
                                    "title": "get_opportunities_groups_group_id_required_tasks",
                                    "type": "array"
                                }
                            },
                            "required": [
                                "group_id",
                                "name",
                                "description",
                                "notification",
                                "required_tasks",
                                "connected_groups"
                            ],
                            "title": "get_opportunities_groups_group_id_ok",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_opportunities_groups_group_id_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_opportunities_groups_group_id_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "summary": "Get opportunities group",
                "tags": [
                    "Opportunities"
                ],
                "x-alternate-versions": [
                    "dev",
                    "latest",
                    "v1"
                ],
                "x-cached-seconds": 3600
            }
        },
        "/opportunities/tasks/": {
            "get": {
                "description": "Return a list of opportunities tasks\n\n---\n\nAlternate route: `/v1/opportunities/tasks/`\n\nAlternate route: `/latest/opportunities/tasks/`\n\nAlternate route: `/dev/opportunities/tasks/`\n\n\n---\n\nThis route is cached for up to 3600 seconds",
                "operationId": "get_opportunities_tasks",
                "parameters": [
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of opportunities task ids",
                        "examples": {
                            "application/json": [
                                1,
                                2,
                                3,
                                4
                            ]
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok array",
                            "items": {
                                "description": "200 ok integer",
                                "format": "int32",
                                "title": "get_opportunities_tasks_200_ok",
                                "type": "integer"
                            },
                            "title": "get_opportunities_tasks_ok",
                            "type": "array"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_opportunities_tasks_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_opportunities_tasks_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "summary": "Get opportunities tasks",
                "tags": [
                    "Opportunities"
                ],
                "x-alternate-versions": [
                    "dev",
                    "latest",
                    "v1"
                ],
                "x-cached-seconds": 3600
            }
        },
        "/opportunities/tasks/{task_id}/": {
            "get": {
                "description": "Return information of an opportunities task\n\n---\n\nAlternate route: `/v1/opportunities/tasks/{task_id}/`\n\nAlternate route: `/latest/opportunities/tasks/{task_id}/`\n\nAlternate route: `/dev/opportunities/tasks/{task_id}/`\n\n\n---\n\nThis route is cached for up to 3600 seconds",
                "operationId": "get_opportunities_tasks_task_id",
                "parameters": [
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "description": "ID of an opportunities task",
                        "format": "int32",
                        "in": "path",
                        "name": "task_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Details of an opportunities task",
                        "examples": {
                            "application/json": {
                                "description": "To use station services...",
                                "name": "Dock in the station",
                                "notification": "Completed:<br>Docked in a station!",
                                "task_id": 10
                            }
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok object",
                            "properties": {
                                "description": {
                                    "description": "description string",
                                    "title": "get_opportunities_tasks_task_id_description",
                                    "type": "string"
                                },
                                "name": {
                                    "description": "name string",
                                    "title": "get_opportunities_tasks_task_id_name",
                                    "type": "string"
                                },
                                "notification": {
                                    "description": "notification string",
                                    "title": "get_opportunities_tasks_task_id_notification",
                                    "type": "string"
                                },
                                "task_id": {
                                    "description": "task_id integer",
                                    "format": "int32",
                                    "title": "get_opportunities_tasks_task_id_task_id",
                                    "type": "integer"
                                }
                            },
                            "required": [
                                "task_id",
                                "name",
                                "description",
                                "notification"
                            ],
                            "title": "get_opportunities_tasks_task_id_ok",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_opportunities_tasks_task_id_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_opportunities_tasks_task_id_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "summary": "Get opportunities task",
                "tags": [
                    "Opportunities"
                ],
                "x-alternate-versions": [
                    "dev",
                    "latest",
                    "v1"
                ],
                "x-cached-seconds": 3600
            }
        },
        "/route/{origin}/{destination}/": {
            "get": {
                "description": "Get the systems between origin and destination\n\n---\n\nAlternate route: `/latest/route/{origin}/{destination}/`\n\nAlternate route: `/dev/route/{origin}/{destination}/`\n\nAlternate route: `/v1/route/{origin}/{destination}/`\n\n\n---\n\nThis route is cached for up to 86400 seconds",
                "operationId": "get_route_origin_destination",
                "parameters": [
                    {
                        "description": "avoid solar system ID(s)",
                        "in": "query",
                        "items": {
                            "format": "int32",
                            "type": "integer"
                        },
                        "maxItems": 100,
                        "name": "avoid",
                        "type": "array",
                        "uniqueItems": true
                    },
                    {
                        "description": "connected solar system pairs",
                        "in": "query",
                        "items": {
                            "collectionFormat": "pipes",
                            "items": {
                                "format": "int32",
                                "type": "integer"
                            },
                            "maxItems": 2,
                            "minItems": 2,
                            "type": "array",
                            "uniqueItems": true
                        },
                        "maxItems": 100,
                        "name": "connections",
                        "type": "array",
                        "uniqueItems": true
                    },
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "description": "destination solar system ID",
                        "format": "int32",
                        "in": "path",
                        "name": "destination",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "default": "shortest",
                        "description": "route security preference",
                        "enum": [
                            "shortest",
                            "secure",
                            "insecure"
                        ],
                        "in": "query",
                        "name": "flag",
                        "type": "string"
                    },
                    {
                        "description": "origin solar system ID",
                        "format": "int32",
                        "in": "path",
                        "name": "origin",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Solar systems in route from origin to destination",
                        "examples": {
                            "application/json": [
                                30002771,
                                30002770,
                                30002769,
                                30002772
                            ]
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "Solar systems in route",
                            "items": {
                                "description": "Solar system in route",
                                "format": "int32",
                                "title": "Solar system ID",
                                "type": "integer"
                            },
                            "title": "get_route_origin_destination_ok",
                            "type": "array"
                        }
                    },
                    "404": {
                        "description": "No route found",
                        "examples": {
                            "application/json": {
                                "error": "Not found message"
                            }
                        },
                        "schema": {
                            "description": "Not found",
                            "properties": {
                                "error": {
                                    "description": "Not found message",
                                    "title": "get_route_origin_destination_404_not_found",
                                    "type": "string"
                                }
                            },
                            "title": "get_route_origin_destination_not_found",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_route_origin_destination_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_route_origin_destination_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "summary": "Get route",
                "tags": [
                    "Routes"
                ],
                "x-alternate-versions": [
                    "dev",
                    "latest",
                    "v1"
                ],
                "x-cached-seconds": 86400
            }
        },
        "/search/": {
            "get": {
                "description": "Search for entities that match a given sub-string.\n\n---\n\nAlternate route: `/v1/search/`\n\nAlternate route: `/latest/search/`\n\n\n---\n\nThis route is cached for up to 3600 seconds",
                "operationId": "get_search",
                "parameters": [
                    {
                        "description": "Type of entities to search for",
                        "in": "query",
                        "items": {
                            "enum": [
                                "agent",
                                "alliance",
                                "character",
                                "constellation",
                                "corporation",
                                "faction",
                                "inventorytype",
                                "region",
                                "solarsystem",
                                "station",
                                "wormhole"
                            ],
                            "type": "string"
                        },
                        "minItems": 1,
                        "name": "categories",
                        "required": true,
                        "type": "array",
                        "uniqueItems": true
                    },
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "default": "en-us",
                        "description": "Search locale",
                        "enum": [
                            "en-us",
                            "de",
                            "fr",
                            "ru",
                            "ja",
                            "zh"
                        ],
                        "in": "query",
                        "name": "language",
                        "type": "string"
                    },
                    {
                        "description": "The string to search on",
                        "in": "query",
                        "minLength": 3,
                        "name": "search",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "Whether the search should be a strict match",
                        "in": "query",
                        "name": "strict",
                        "type": "boolean"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of search results",
                        "examples": {
                            "application/json": {
                                "solarsystem": [
                                    30002510
                                ],
                                "station": [
                                    60004588,
                                    60004594,
                                    60005725,
                                    60009106,
                                    60012721,
                                    60012724,
                                    60012727
                                ]
                            }
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok object",
                            "properties": {
                                "agent": {
                                    "description": "agent array",
                                    "items": {
                                        "description": "agent integer",
                                        "format": "int32",
                                        "title": "get_search_agent",
                                        "type": "integer"
                                    },
                                    "title": "get_search_agent",
                                    "type": "array"
                                },
                                "alliance": {
                                    "description": "alliance array",
                                    "items": {
                                        "description": "alliance integer",
                                        "format": "int32",
                                        "title": "get_search_alliance",
                                        "type": "integer"
                                    },
                                    "title": "get_search_alliance",
                                    "type": "array"
                                },
                                "character": {
                                    "description": "character array",
                                    "items": {
                                        "description": "character integer",
                                        "format": "int32",
                                        "title": "get_search_character",
                                        "type": "integer"
                                    },
                                    "title": "get_search_character",
                                    "type": "array"
                                },
                                "constellation": {
                                    "description": "constellation array",
                                    "items": {
                                        "description": "constellation integer",
                                        "format": "int32",
                                        "title": "get_search_constellation",
                                        "type": "integer"
                                    },
                                    "title": "get_search_constellation",
                                    "type": "array"
                                },
                                "corporation": {
                                    "description": "corporation array",
                                    "items": {
                                        "description": "corporation integer",
                                        "format": "int32",
                                        "title": "get_search_corporation",
                                        "type": "integer"
                                    },
                                    "title": "get_search_corporation",
                                    "type": "array"
                                },
                                "faction": {
                                    "description": "faction array",
                                    "items": {
                                        "description": "faction integer",
                                        "format": "int32",
                                        "title": "get_search_faction",
                                        "type": "integer"
                                    },
                                    "title": "get_search_faction",
                                    "type": "array"
                                },
                                "inventorytype": {
                                    "description": "inventorytype array",
                                    "items": {
                                        "description": "inventorytype integer",
                                        "format": "int32",
                                        "title": "get_search_inventorytype",
                                        "type": "integer"
                                    },
                                    "title": "get_search_inventorytype",
                                    "type": "array"
                                },
                                "region": {
                                    "description": "region array",
                                    "items": {
                                        "description": "region integer",
                                        "format": "int32",
                                        "title": "get_search_region",
                                        "type": "integer"
                                    },
                                    "title": "get_search_region",
                                    "type": "array"
                                },
                                "solarsystem": {
                                    "description": "solarsystem array",
                                    "items": {
                                        "description": "solarsystem integer",
                                        "format": "int32",
                                        "title": "get_search_solarsystem",
                                        "type": "integer"
                                    },
                                    "title": "get_search_solarsystem",
                                    "type": "array"
                                },
                                "station": {
                                    "description": "station array",
                                    "items": {
                                        "description": "station integer",
                                        "format": "int32",
                                        "title": "get_search_station",
                                        "type": "integer"
                                    },
                                    "title": "get_search_station",
                                    "type": "array"
                                },
                                "wormhole": {
                                    "description": "wormhole array",
                                    "items": {
                                        "description": "wormhole integer",
                                        "format": "int32",
                                        "title": "get_search_wormhole",
                                        "type": "integer"
                                    },
                                    "title": "get_search_wormhole",
                                    "type": "array"
                                }
                            },
                            "title": "get_search_ok",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_search_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_search_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "summary": "Search on a string",
                "tags": [
                    "Search"
                ],
                "x-alternate-versions": [
                    "latest",
                    "v1"
                ],
                "x-cached-seconds": 3600
            }
        },
        "/sovereignty/campaigns/": {
            "get": {
                "description": "Shows sovereignty data for campaigns.\n\n---\n\nAlternate route: `/v1/sovereignty/campaigns/`\n\nAlternate route: `/latest/sovereignty/campaigns/`\n\nAlternate route: `/dev/sovereignty/campaigns/`\n\n\n---\n\nThis route is cached for up to 5 seconds",
                "operationId": "get_sovereignty_campaigns",
                "parameters": [
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of sovereignty campaigns",
                        "examples": {
                            "application/json": [
                                {
                                    "attackers_score": 0.4,
                                    "campaign_id": 32833,
                                    "constellation_id": 20000125,
                                    "defender_id": 1695357456,
                                    "defender_score": 0.6,
                                    "event_type": "station_defense",
                                    "solar_system_id": 30000856,
                                    "start_time": "2016-10-29T14:34:40Z",
                                    "structure_id": 61001096
                                }
                            ]
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok array",
                            "items": {
                                "description": "200 ok object",
                                "properties": {
                                    "attackers_score": {
                                        "description": "Score for all attacking parties, only present in Defense Events.\n",
                                        "format": "float",
                                        "title": "get_sovereignty_campaigns_attackers_score",
                                        "type": "number"
                                    },
                                    "campaign_id": {
                                        "description": "Unique ID for this campaign.",
                                        "format": "int32",
                                        "title": "get_sovereignty_campaigns_campaign_id",
                                        "type": "integer"
                                    },
                                    "constellation_id": {
                                        "description": "The constellation in which the campaign will take place.\n",
                                        "format": "int32",
                                        "title": "get_sovereignty_campaigns_constellation_id",
                                        "type": "integer"
                                    },
                                    "defender_id": {
                                        "description": "Defending alliance, only present in Defense Events\n",
                                        "format": "int32",
                                        "title": "get_sovereignty_campaigns_defender_id",
                                        "type": "integer"
                                    },
                                    "defender_score": {
                                        "description": "Score for the defending alliance, only present in Defense Events.\n",
                                        "format": "float",
                                        "title": "get_sovereignty_campaigns_defender_score",
                                        "type": "number"
                                    },
                                    "event_type": {
                                        "description": "Type of event this campaign is for. tcu_defense, ihub_defense and station_defense are referred to as \"Defense Events\", station_freeport as \"Freeport Events\".\n",
                                        "enum": [
                                            "tcu_defense",
                                            "ihub_defense",
                                            "station_defense",
                                            "station_freeport"
                                        ],
                                        "title": "get_sovereignty_campaigns_event_type",
                                        "type": "string"
                                    },
                                    "participants": {
                                        "description": "Alliance participating and their respective scores, only present in Freeport Events.\n",
                                        "items": {
                                            "description": "participant object",
                                            "properties": {
                                                "alliance_id": {
                                                    "description": "alliance_id integer",
                                                    "format": "int32",
                                                    "title": "get_sovereignty_campaigns_alliance_id",
                                                    "type": "integer"
                                                },
                                                "score": {
                                                    "description": "score number",
                                                    "format": "float",
                                                    "title": "get_sovereignty_campaigns_score",
                                                    "type": "number"
                                                }
                                            },
                                            "required": [
                                                "alliance_id",
                                                "score"
                                            ],
                                            "title": "get_sovereignty_campaigns_participant",
                                            "type": "object"
                                        },
                                        "title": "get_sovereignty_campaigns_participants",
                                        "type": "array"
                                    },
                                    "solar_system_id": {
                                        "description": "The solar system the structure is located in.\n",
                                        "format": "int32",
                                        "title": "get_sovereignty_campaigns_solar_system_id",
                                        "type": "integer"
                                    },
                                    "start_time": {
                                        "description": "Time the event is scheduled to start.\n",
                                        "format": "date-time",
                                        "title": "get_sovereignty_campaigns_start_time",
                                        "type": "string"
                                    },
                                    "structure_id": {
                                        "description": "The structure item ID that is related to this campaign.\n",
                                        "format": "int64",
                                        "title": "get_sovereignty_campaigns_structure_id",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "campaign_id",
                                    "structure_id",
                                    "solar_system_id",
                                    "constellation_id",
                                    "event_type",
                                    "start_time"
                                ],
                                "title": "get_sovereignty_campaigns_200_ok",
                                "type": "object"
                            },
                            "title": "get_sovereignty_campaigns_ok",
                            "type": "array"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_sovereignty_campaigns_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_sovereignty_campaigns_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "summary": "List sovereignty campaigns",
                "tags": [
                    "Sovereignty"
                ],
                "x-alternate-versions": [
                    "dev",
                    "latest",
                    "v1"
                ],
                "x-cached-seconds": 5
            }
        },
        "/sovereignty/map/": {
            "get": {
                "description": "Shows sovereignty information for solar systems\n\n---\n\nAlternate route: `/v1/sovereignty/map/`\n\nAlternate route: `/latest/sovereignty/map/`\n\nAlternate route: `/dev/sovereignty/map/`\n\n\n---\n\nThis route is cached for up to 3600 seconds",
                "operationId": "get_sovereignty_map",
                "parameters": [
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of sovereignty information for solar systems in New Eden",
                        "examples": {
                            "application/json": [
                                {
                                    "faction_id": 500001,
                                    "system_id": 30045334
                                }
                            ]
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok array",
                            "items": {
                                "description": "200 ok object",
                                "properties": {
                                    "alliance_id": {
                                        "description": "alliance_id integer",
                                        "format": "int32",
                                        "title": "get_sovereignty_map_alliance_id",
                                        "type": "integer"
                                    },
                                    "corporation_id": {
                                        "description": "corporation_id integer",
                                        "format": "int32",
                                        "title": "get_sovereignty_map_corporation_id",
                                        "type": "integer"
                                    },
                                    "faction_id": {
                                        "description": "faction_id integer",
                                        "format": "int32",
                                        "title": "get_sovereignty_map_faction_id",
                                        "type": "integer"
                                    },
                                    "system_id": {
                                        "description": "system_id integer",
                                        "format": "int32",
                                        "title": "get_sovereignty_map_system_id",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "system_id"
                                ],
                                "title": "get_sovereignty_map_200_ok",
                                "type": "object"
                            },
                            "title": "get_sovereignty_map_ok",
                            "type": "array"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_sovereignty_map_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_sovereignty_map_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "summary": "List sovereignty of systems",
                "tags": [
                    "Sovereignty"
                ],
                "x-alternate-versions": [
                    "dev",
                    "latest",
                    "v1"
                ],
                "x-cached-seconds": 3600
            }
        },
        "/sovereignty/structures/": {
            "get": {
                "description": "Shows sovereignty data for structures.\n\n---\n\nAlternate route: `/v1/sovereignty/structures/`\n\nAlternate route: `/latest/sovereignty/structures/`\n\nAlternate route: `/dev/sovereignty/structures/`\n\n\n---\n\nThis route is cached for up to 120 seconds",
                "operationId": "get_sovereignty_structures",
                "parameters": [
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of sovereignty structures",
                        "examples": {
                            "application/json": [
                                {
                                    "alliance_id": 498125261,
                                    "solar_system_id": 30000570,
                                    "structure_id": 1018253388776,
                                    "structure_type_id": 32226,
                                    "vulnerability_occupancy_level": 2,
                                    "vulnerable_end_time": "2016-10-29T05:30:00Z",
                                    "vulnerable_start_time": "2016-10-28T20:30:00Z"
                                }
                            ]
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok array",
                            "items": {
                                "description": "200 ok object",
                                "properties": {
                                    "alliance_id": {
                                        "description": "The alliance that owns the structure.\n",
                                        "format": "int32",
                                        "title": "get_sovereignty_structures_alliance_id",
                                        "type": "integer"
                                    },
                                    "solar_system_id": {
                                        "description": "Solar system in which the structure is located.\n",
                                        "format": "int32",
                                        "title": "get_sovereignty_structures_solar_system_id",
                                        "type": "integer"
                                    },
                                    "structure_id": {
                                        "description": "Unique item ID for this structure.",
                                        "format": "int64",
                                        "title": "get_sovereignty_structures_structure_id",
                                        "type": "integer"
                                    },
                                    "structure_type_id": {
                                        "description": "A reference to the type of structure this is.\n",
                                        "format": "int32",
                                        "title": "get_sovereignty_structures_structure_type_id",
                                        "type": "integer"
                                    },
                                    "vulnerability_occupancy_level": {
                                        "description": "The occupancy level for the next or current vulnerability window. This takes into account all development indexes and capital system bonuses. Also known as Activity Defense Multiplier from in the client. It increases the time that attackers must spend using their entosis links on the structure.\n",
                                        "format": "float",
                                        "title": "get_sovereignty_structures_vulnerability_occupancy_level",
                                        "type": "number"
                                    },
                                    "vulnerable_end_time": {
                                        "description": "The time at which the next or current vulnerability window ends. At the end of a vulnerability window the next window is recalculated and locked in along with the vulnerabilityOccupancyLevel. If the structure is not in 100% entosis control of the defender, it will go in to 'overtime' and stay vulnerable for as long as that situation persists. Only once the defenders have 100% entosis control and has the vulnerableEndTime passed does the vulnerability interval expire and a new one is calculated.\n",
                                        "format": "date-time",
                                        "title": "get_sovereignty_structures_vulnerable_end_time",
                                        "type": "string"
                                    },
                                    "vulnerable_start_time": {
                                        "description": "The next time at which the structure will become vulnerable. Or the start time of the current window if current time is between this and vulnerableEndTime.\n",
                                        "format": "date-time",
                                        "title": "get_sovereignty_structures_vulnerable_start_time",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "alliance_id",
                                    "solar_system_id",
                                    "structure_id",
                                    "structure_type_id"
                                ],
                                "title": "get_sovereignty_structures_200_ok",
                                "type": "object"
                            },
                            "title": "get_sovereignty_structures_ok",
                            "type": "array"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_sovereignty_structures_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_sovereignty_structures_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "summary": "List sovereignty structures",
                "tags": [
                    "Sovereignty"
                ],
                "x-alternate-versions": [
                    "dev",
                    "latest",
                    "v1"
                ],
                "x-cached-seconds": 120
            }
        },
        "/status/": {
            "get": {
                "description": "EVE Server status\n\n---\n\nAlternate route: `/v1/status/`\n\nAlternate route: `/latest/status/`\n\nAlternate route: `/dev/status/`\n\n\n---\n\nThis route is cached for up to 30 seconds",
                "operationId": "get_status",
                "parameters": [
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Server status",
                        "examples": {
                            "application/json": {
                                "players": 12345,
                                "server_version": "1132976",
                                "start_time": "2017-01-02T12:34:56Z"
                            }
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok object",
                            "properties": {
                                "players": {
                                    "description": "Current online player count",
                                    "title": "get_status_players",
                                    "type": "integer"
                                },
                                "server_version": {
                                    "description": "Running version as string",
                                    "title": "get_status_server_version",
                                    "type": "string"
                                },
                                "start_time": {
                                    "description": "Server start timestamp",
                                    "format": "date-time",
                                    "title": "get_status_start_time",
                                    "type": "string"
                                },
                                "vip": {
                                    "description": "If the server is in VIP mode",
                                    "title": "get_status_vip",
                                    "type": "boolean"
                                }
                            },
                            "required": [
                                "start_time",
                                "players",
                                "server_version"
                            ],
                            "title": "get_status_ok",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_status_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_status_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "summary": "Retrieve the uptime and player counts",
                "tags": [
                    "Status"
                ],
                "x-alternate-versions": [
                    "dev",
                    "latest",
                    "v1"
                ],
                "x-cached-seconds": 30
            }
        },
        "/ui/autopilot/waypoint/": {
            "post": {
                "deprecated": true,
                "description": "Set a solar system as autopilot waypoint\n\n---\n\nAlternate route: `/v1/ui/autopilot/waypoint/`\n",
                "operationId": "post_ui_autopilot_waypoint",
                "parameters": [
                    {
                        "default": false,
                        "description": "Whether this solar system should be added to the beginning of all waypoints",
                        "in": "query",
                        "name": "add_to_beginning",
                        "required": true,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether clean other waypoints beforing adding this one",
                        "in": "query",
                        "name": "clear_other_waypoints",
                        "required": true,
                        "type": "boolean"
                    },
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "description": "The solar system to set as autopilot waypoint",
                        "format": "int32",
                        "in": "query",
                        "name": "solar_system_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Access token to use, if preferred over a header",
                        "in": "query",
                        "name": "token",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Open window request received"
                    },
                    "403": {
                        "description": "Forbidden",
                        "examples": {
                            "application/json": {
                                "error": "Token is not valid for scope(s): esi-ui.write_waypoint.v1"
                            }
                        },
                        "schema": {
                            "description": "Forbidden",
                            "properties": {
                                "error": {
                                    "description": "Forbidden message",
                                    "title": "post_ui_autopilot_waypoint_403_forbidden",
                                    "type": "string"
                                }
                            },
                            "title": "post_ui_autopilot_waypoint_forbidden",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "post_ui_autopilot_waypoint_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "post_ui_autopilot_waypoint_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "evesso": [
                            "esi-ui.write_waypoint.v1"
                        ]
                    }
                ],
                "summary": "Set Autopilot Waypoint",
                "tags": [
                    "User Interface"
                ],
                "x-alternate-versions": [
                    "v1"
                ]
            }
        },
        "/ui/openwindow/contract/": {
            "post": {
                "description": "Open the contract window inside the client\n\n---\n\nAlternate route: `/v1/ui/openwindow/contract/`\n\nAlternate route: `/latest/ui/openwindow/contract/`\n\nAlternate route: `/dev/ui/openwindow/contract/`\n",
                "operationId": "post_ui_openwindow_contract",
                "parameters": [
                    {
                        "description": "The contract to open",
                        "format": "int32",
                        "in": "query",
                        "name": "contract_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "description": "Access token to use, if preferred over a header",
                        "in": "query",
                        "name": "token",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Open window request received"
                    },
                    "403": {
                        "description": "Forbidden",
                        "examples": {
                            "application/json": {
                                "error": "Token is not valid for scope(s): esi-ui.open_window.v1"
                            }
                        },
                        "schema": {
                            "description": "Forbidden",
                            "properties": {
                                "error": {
                                    "description": "Forbidden message",
                                    "title": "post_ui_openwindow_contract_403_forbidden",
                                    "type": "string"
                                }
                            },
                            "title": "post_ui_openwindow_contract_forbidden",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "post_ui_openwindow_contract_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "post_ui_openwindow_contract_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "evesso": [
                            "esi-ui.open_window.v1"
                        ]
                    }
                ],
                "summary": "Open Contract Window",
                "tags": [
                    "User Interface"
                ],
                "x-alternate-versions": [
                    "dev",
                    "latest",
                    "v1"
                ]
            }
        },
        "/ui/openwindow/information/": {
            "post": {
                "description": "Open the information window for a character, corporation or alliance inside the client\n\n---\n\nAlternate route: `/v1/ui/openwindow/information/`\n\nAlternate route: `/latest/ui/openwindow/information/`\n\nAlternate route: `/dev/ui/openwindow/information/`\n",
                "operationId": "post_ui_openwindow_information",
                "parameters": [
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "description": "The target to open",
                        "format": "int32",
                        "in": "query",
                        "name": "target_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Access token to use, if preferred over a header",
                        "in": "query",
                        "name": "token",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Open window request received"
                    },
                    "403": {
                        "description": "Forbidden",
                        "examples": {
                            "application/json": {
                                "error": "Token is not valid for scope(s): esi-ui.open_window.v1"
                            }
                        },
                        "schema": {
                            "description": "Forbidden",
                            "properties": {
                                "error": {
                                    "description": "Forbidden message",
                                    "title": "post_ui_openwindow_information_403_forbidden",
                                    "type": "string"
                                }
                            },
                            "title": "post_ui_openwindow_information_forbidden",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "post_ui_openwindow_information_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "post_ui_openwindow_information_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "evesso": [
                            "esi-ui.open_window.v1"
                        ]
                    }
                ],
                "summary": "Open Information Window",
                "tags": [
                    "User Interface"
                ],
                "x-alternate-versions": [
                    "dev",
                    "latest",
                    "v1"
                ]
            }
        },
        "/ui/openwindow/marketdetails/": {
            "post": {
                "description": "Open the market details window for a specific typeID inside the client\n\n---\n\nAlternate route: `/v1/ui/openwindow/marketdetails/`\n\nAlternate route: `/latest/ui/openwindow/marketdetails/`\n\nAlternate route: `/dev/ui/openwindow/marketdetails/`\n",
                "operationId": "post_ui_openwindow_marketdetails",
                "parameters": [
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "description": "Access token to use, if preferred over a header",
                        "in": "query",
                        "name": "token",
                        "type": "string"
                    },
                    {
                        "description": "The item type to open in market window",
                        "format": "int32",
                        "in": "query",
                        "name": "type_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Open window request received"
                    },
                    "403": {
                        "description": "Forbidden",
                        "examples": {
                            "application/json": {
                                "error": "Token is not valid for scope(s): esi-ui.open_window.v1"
                            }
                        },
                        "schema": {
                            "description": "Forbidden",
                            "properties": {
                                "error": {
                                    "description": "Forbidden message",
                                    "title": "post_ui_openwindow_marketdetails_403_forbidden",
                                    "type": "string"
                                }
                            },
                            "title": "post_ui_openwindow_marketdetails_forbidden",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "post_ui_openwindow_marketdetails_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "post_ui_openwindow_marketdetails_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "evesso": [
                            "esi-ui.open_window.v1"
                        ]
                    }
                ],
                "summary": "Open Market Details",
                "tags": [
                    "User Interface"
                ],
                "x-alternate-versions": [
                    "dev",
                    "latest",
                    "v1"
                ]
            }
        },
        "/ui/openwindow/newmail/": {
            "post": {
                "description": "Open the New Mail window, according to settings from the request if applicable\n\n---\n\nAlternate route: `/v1/ui/openwindow/newmail/`\n\nAlternate route: `/latest/ui/openwindow/newmail/`\n\nAlternate route: `/dev/ui/openwindow/newmail/`\n",
                "operationId": "post_ui_openwindow_newmail",
                "parameters": [
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "description": "The details of mail to create",
                        "in": "body",
                        "name": "new_mail",
                        "required": true,
                        "schema": {
                            "description": "new_mail object",
                            "properties": {
                                "body": {
                                    "description": "body string",
                                    "maxLength": 10000,
                                    "title": "post_ui_openwindow_newmail_body",
                                    "type": "string"
                                },
                                "recipients": {
                                    "description": "recipients array",
                                    "items": {
                                        "description": "recipient integer",
                                        "format": "int32",
                                        "title": "post_ui_openwindow_newmail_recipient",
                                        "type": "integer"
                                    },
                                    "maxItems": 50,
                                    "minItems": 1,
                                    "title": "post_ui_openwindow_newmail_recipients",
                                    "type": "array"
                                },
                                "subject": {
                                    "description": "subject string",
                                    "maxLength": 1000,
                                    "title": "post_ui_openwindow_newmail_subject",
                                    "type": "string"
                                },
                                "to_corp_or_alliance_id": {
                                    "description": "to_corp_or_alliance_id integer",
                                    "format": "int32",
                                    "title": "post_ui_openwindow_newmail_to_corp_or_alliance_id",
                                    "type": "integer"
                                },
                                "to_mailing_list_id": {
                                    "description": "Corporations, alliances and mailing lists are all types of mailing groups. You may only send to one mailing group, at a time, so you may fill out either this field or the to_corp_or_alliance_ids field",
                                    "format": "int32",
                                    "title": "post_ui_openwindow_newmail_to_mailing_list_id",
                                    "type": "integer"
                                }
                            },
                            "required": [
                                "subject",
                                "body",
                                "recipients"
                            ],
                            "title": "post_ui_openwindow_newmail_new_mail",
                            "type": "object"
                        }
                    },
                    {
                        "description": "Access token to use, if preferred over a header",
                        "in": "query",
                        "name": "token",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Open window request received"
                    },
                    "403": {
                        "description": "Forbidden",
                        "examples": {
                            "application/json": {
                                "error": "Token is not valid for scope(s): esi-ui.open_window.v1"
                            }
                        },
                        "schema": {
                            "description": "Forbidden",
                            "properties": {
                                "error": {
                                    "description": "Forbidden message",
                                    "title": "post_ui_openwindow_newmail_403_forbidden",
                                    "type": "string"
                                }
                            },
                            "title": "post_ui_openwindow_newmail_forbidden",
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Invalid request",
                        "examples": {
                            "application/json": {
                                "error": "Unprocessable entity message"
                            }
                        },
                        "schema": {
                            "description": "Unprocessable entity",
                            "properties": {
                                "error": {
                                    "description": "Unprocessable entity message",
                                    "title": "post_ui_openwindow_newmail_422_unprocessable_entity",
                                    "type": "string"
                                }
                            },
                            "title": "post_ui_openwindow_newmail_unprocessable_entity",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "post_ui_openwindow_newmail_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "post_ui_openwindow_newmail_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "evesso": [
                            "esi-ui.open_window.v1"
                        ]
                    }
                ],
                "summary": "Open New Mail Window",
                "tags": [
                    "User Interface"
                ],
                "x-alternate-versions": [
                    "dev",
                    "latest",
                    "v1"
                ]
            }
        },
        "/universe/bloodlines/": {
            "get": {
                "description": "Get a list of bloodlines\n\n---\n\nAlternate route: `/v1/universe/bloodlines/`\n\nAlternate route: `/latest/universe/bloodlines/`\n\nAlternate route: `/dev/universe/bloodlines/`\n\n\n---\n\nThis route is cached for up to 3600 seconds",
                "operationId": "get_universe_bloodlines",
                "parameters": [
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "default": "en-us",
                        "description": "Language to use in the response",
                        "enum": [
                            "de",
                            "en-us",
                            "fr",
                            "ja",
                            "ru",
                            "zh"
                        ],
                        "in": "query",
                        "name": "language",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of bloodlines",
                        "examples": {
                            "application/json": [
                                {
                                    "bloodline_id": 1,
                                    "charisma": 6,
                                    "corporation_id": 1000006,
                                    "description": "The Deteis are regarded as ...",
                                    "intelligence": 7,
                                    "memory": 7,
                                    "name": "Deteis",
                                    "perception": 5,
                                    "race_id": 1,
                                    "ship_type_id": 601,
                                    "willpower": 5
                                }
                            ]
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Content-Language": {
                                "description": "The language used in the response",
                                "enum": [
                                    "de",
                                    "en-us",
                                    "fr",
                                    "ja",
                                    "ru",
                                    "zh"
                                ],
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok array",
                            "items": {
                                "description": "200 ok object",
                                "properties": {
                                    "bloodline_id": {
                                        "description": "bloodline_id integer",
                                        "format": "int32",
                                        "title": "get_universe_bloodlines_bloodline_id",
                                        "type": "integer"
                                    },
                                    "charisma": {
                                        "description": "charisma integer",
                                        "format": "int32",
                                        "title": "get_universe_bloodlines_charisma",
                                        "type": "integer"
                                    },
                                    "corporation_id": {
                                        "description": "corporation_id integer",
                                        "format": "int32",
                                        "title": "get_universe_bloodlines_corporation_id",
                                        "type": "integer"
                                    },
                                    "description": {
                                        "description": "description string",
                                        "title": "get_universe_bloodlines_description",
                                        "type": "string"
                                    },
                                    "intelligence": {
                                        "description": "intelligence integer",
                                        "format": "int32",
                                        "title": "get_universe_bloodlines_intelligence",
                                        "type": "integer"
                                    },
                                    "memory": {
                                        "description": "memory integer",
                                        "format": "int32",
                                        "title": "get_universe_bloodlines_memory",
                                        "type": "integer"
                                    },
                                    "name": {
                                        "description": "name string",
                                        "title": "get_universe_bloodlines_name",
                                        "type": "string"
                                    },
                                    "perception": {
                                        "description": "perception integer",
                                        "format": "int32",
                                        "title": "get_universe_bloodlines_perception",
                                        "type": "integer"
                                    },
                                    "race_id": {
                                        "description": "race_id integer",
                                        "format": "int32",
                                        "title": "get_universe_bloodlines_race_id",
                                        "type": "integer"
                                    },
                                    "ship_type_id": {
                                        "description": "ship_type_id integer",
                                        "format": "int32",
                                        "title": "get_universe_bloodlines_ship_type_id",
                                        "type": "integer"
                                    },
                                    "willpower": {
                                        "description": "willpower integer",
                                        "format": "int32",
                                        "title": "get_universe_bloodlines_willpower",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "bloodline_id",
                                    "name",
                                    "description",
                                    "race_id",
                                    "ship_type_id",
                                    "corporation_id",
                                    "perception",
                                    "willpower",
                                    "charisma",
                                    "memory",
                                    "intelligence"
                                ],
                                "title": "get_universe_bloodlines_200_ok",
                                "type": "object"
                            },
                            "title": "get_universe_bloodlines_ok",
                            "type": "array"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_universe_bloodlines_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_universe_bloodlines_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "summary": "Get bloodlines",
                "tags": [
                    "Universe"
                ],
                "x-alternate-versions": [
                    "dev",
                    "latest",
                    "v1"
                ],
                "x-cached-seconds": 3600
            }
        },
        "/universe/categories/": {
            "get": {
                "description": "Get a list of item categories\n\n---\n\nAlternate route: `/v1/universe/categories/`\n\nAlternate route: `/latest/universe/categories/`\n\nAlternate route: `/dev/universe/categories/`\n\n\n---\n\nThis route is cached for up to 3600 seconds",
                "operationId": "get_universe_categories",
                "parameters": [
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of item category ids",
                        "examples": {
                            "application/json": [
                                1,
                                2,
                                3
                            ]
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok array",
                            "items": {
                                "description": "200 ok integer",
                                "format": "int32",
                                "title": "get_universe_categories_200_ok",
                                "type": "integer"
                            },
                            "title": "get_universe_categories_ok",
                            "type": "array"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_universe_categories_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_universe_categories_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "summary": "Get item categories",
                "tags": [
                    "Universe"
                ],
                "x-alternate-versions": [
                    "dev",
                    "latest",
                    "v1"
                ],
                "x-cached-seconds": 3600
            }
        },
        "/universe/categories/{category_id}/": {
            "get": {
                "description": "Get information of an item category\n\n---\n\nAlternate route: `/v1/universe/categories/{category_id}/`\n\nAlternate route: `/latest/universe/categories/{category_id}/`\n\nAlternate route: `/dev/universe/categories/{category_id}/`\n\n\n---\n\nThis route is cached for up to 3600 seconds",
                "operationId": "get_universe_categories_category_id",
                "parameters": [
                    {
                        "description": "An Eve item category ID",
                        "format": "int32",
                        "in": "path",
                        "name": "category_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "default": "en-us",
                        "description": "Language to use in the response",
                        "enum": [
                            "de",
                            "en-us",
                            "fr",
                            "ja",
                            "ru",
                            "zh"
                        ],
                        "in": "query",
                        "name": "language",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Information about an item category",
                        "examples": {
                            "application/json": {
                                "category_id": 6,
                                "groups": [
                                    25,
                                    26,
                                    27
                                ],
                                "name": "Ship",
                                "published": true
                            }
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Content-Language": {
                                "description": "The language used in the response",
                                "enum": [
                                    "de",
                                    "en-us",
                                    "fr",
                                    "ja",
                                    "ru",
                                    "zh"
                                ],
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok object",
                            "properties": {
                                "category_id": {
                                    "description": "category_id integer",
                                    "format": "int32",
                                    "title": "get_universe_categories_category_id_category_id",
                                    "type": "integer"
                                },
                                "groups": {
                                    "description": "groups array",
                                    "items": {
                                        "description": "group integer",
                                        "format": "int32",
                                        "title": "get_universe_categories_category_id_group",
                                        "type": "integer"
                                    },
                                    "title": "get_universe_categories_category_id_groups",
                                    "type": "array"
                                },
                                "name": {
                                    "description": "name string",
                                    "title": "get_universe_categories_category_id_name",
                                    "type": "string"
                                },
                                "published": {
                                    "description": "published boolean",
                                    "title": "get_universe_categories_category_id_published",
                                    "type": "boolean"
                                }
                            },
                            "required": [
                                "category_id",
                                "name",
                                "published",
                                "groups"
                            ],
                            "title": "get_universe_categories_category_id_ok",
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "Category not found",
                        "examples": {
                            "application/json": {
                                "error": "Not found message"
                            }
                        },
                        "schema": {
                            "description": "Not found",
                            "properties": {
                                "error": {
                                    "description": "Not found message",
                                    "title": "get_universe_categories_category_id_404_not_found",
                                    "type": "string"
                                }
                            },
                            "title": "get_universe_categories_category_id_not_found",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_universe_categories_category_id_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_universe_categories_category_id_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "summary": "Get item category information",
                "tags": [
                    "Universe"
                ],
                "x-alternate-versions": [
                    "dev",
                    "latest",
                    "v1"
                ],
                "x-cached-seconds": 3600
            }
        },
        "/universe/constellations/": {
            "get": {
                "description": "Get a list of constellations\n\n---\n\nAlternate route: `/v1/universe/constellations/`\n\nAlternate route: `/latest/universe/constellations/`\n\nAlternate route: `/dev/universe/constellations/`\n\n\n---\n\nThis route is cached for up to 3600 seconds",
                "operationId": "get_universe_constellations",
                "parameters": [
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of constellation ids",
                        "examples": {
                            "application/json": [
                                20000001,
                                20000002
                            ]
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok array",
                            "items": {
                                "description": "200 ok integer",
                                "format": "int32",
                                "title": "get_universe_constellations_200_ok",
                                "type": "integer"
                            },
                            "title": "get_universe_constellations_ok",
                            "type": "array"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_universe_constellations_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_universe_constellations_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "summary": "Get constellations",
                "tags": [
                    "Universe"
                ],
                "x-alternate-versions": [
                    "dev",
                    "latest",
                    "v1"
                ],
                "x-cached-seconds": 3600
            }
        },
        "/universe/constellations/{constellation_id}/": {
            "get": {
                "description": "Get information on a constellation\n\n---\n\nAlternate route: `/v1/universe/constellations/{constellation_id}/`\n\nAlternate route: `/latest/universe/constellations/{constellation_id}/`\n\nAlternate route: `/dev/universe/constellations/{constellation_id}/`\n\n\n---\n\nThis route is cached for up to 3600 seconds",
                "operationId": "get_universe_constellations_constellation_id",
                "parameters": [
                    {
                        "description": "constellation_id integer",
                        "format": "int32",
                        "in": "path",
                        "name": "constellation_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "default": "en-us",
                        "description": "Language to use in the response",
                        "enum": [
                            "de",
                            "en-us",
                            "fr",
                            "ja",
                            "ru",
                            "zh"
                        ],
                        "in": "query",
                        "name": "language",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Information about a constellation",
                        "examples": {
                            "application/json": {
                                "constellation_id": 20000009,
                                "name": "Mekashtad",
                                "position": {
                                    "x": 67796138757472320,
                                    "y": -70591121348560960,
                                    "z": -59587016159270070
                                },
                                "region_id": 10000001,
                                "systems": [
                                    20000302,
                                    20000303
                                ]
                            }
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Content-Language": {
                                "description": "The language used in the response",
                                "enum": [
                                    "de",
                                    "en-us",
                                    "fr",
                                    "ja",
                                    "ru",
                                    "zh"
                                ],
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok object",
                            "properties": {
                                "constellation_id": {
                                    "description": "constellation_id integer",
                                    "format": "int32",
                                    "title": "get_universe_constellations_constellation_id_constellation_id",
                                    "type": "integer"
                                },
                                "name": {
                                    "description": "name string",
                                    "title": "get_universe_constellations_constellation_id_name",
                                    "type": "string"
                                },
                                "position": {
                                    "description": "position object",
                                    "properties": {
                                        "x": {
                                            "description": "x number",
                                            "format": "float",
                                            "title": "get_universe_constellations_constellation_id_x",
                                            "type": "number"
                                        },
                                        "y": {
                                            "description": "y number",
                                            "format": "float",
                                            "title": "get_universe_constellations_constellation_id_y",
                                            "type": "number"
                                        },
                                        "z": {
                                            "description": "z number",
                                            "format": "float",
                                            "title": "get_universe_constellations_constellation_id_z",
                                            "type": "number"
                                        }
                                    },
                                    "required": [
                                        "x",
                                        "y",
                                        "z"
                                    ],
                                    "title": "get_universe_constellations_constellation_id_position",
                                    "type": "object"
                                },
                                "region_id": {
                                    "description": "The region this constellation is in",
                                    "format": "int32",
                                    "title": "get_universe_constellations_constellation_id_region_id",
                                    "type": "integer"
                                },
                                "systems": {
                                    "description": "systems array",
                                    "items": {
                                        "description": "system integer",
                                        "format": "int32",
                                        "title": "get_universe_constellations_constellation_id_system",
                                        "type": "integer"
                                    },
                                    "title": "get_universe_constellations_constellation_id_systems",
                                    "type": "array"
                                }
                            },
                            "required": [
                                "constellation_id",
                                "name",
                                "position",
                                "region_id",
                                "systems"
                            ],
                            "title": "get_universe_constellations_constellation_id_ok",
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "Constellation not found",
                        "examples": {
                            "application/json": {
                                "error": "Not found message"
                            }
                        },
                        "schema": {
                            "description": "Not found",
                            "properties": {
                                "error": {
                                    "description": "Not found message",
                                    "title": "get_universe_constellations_constellation_id_404_not_found",
                                    "type": "string"
                                }
                            },
                            "title": "get_universe_constellations_constellation_id_not_found",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_universe_constellations_constellation_id_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_universe_constellations_constellation_id_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "summary": "Get constellation information",
                "tags": [
                    "Universe"
                ],
                "x-alternate-versions": [
                    "dev",
                    "latest",
                    "v1"
                ],
                "x-cached-seconds": 3600
            }
        },
        "/universe/factions/": {
            "get": {
                "description": "Get a list of factions\n\n---\n\nAlternate route: `/v1/universe/factions/`\n\nAlternate route: `/latest/universe/factions/`\n\nAlternate route: `/dev/universe/factions/`\n\n\n---\n\nThis route is cached for up to 3600 seconds",
                "operationId": "get_universe_factions",
                "parameters": [
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "default": "en-us",
                        "description": "Language to use in the response",
                        "enum": [
                            "de",
                            "en-us",
                            "fr",
                            "ja",
                            "ru",
                            "zh"
                        ],
                        "in": "query",
                        "name": "language",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of factions",
                        "examples": {
                            "application/json": [
                                {
                                    "corporation_id": 456,
                                    "description": "blah blah",
                                    "faction_id": 1,
                                    "is_unique": true,
                                    "name": "Faction",
                                    "size_factor": 1.0,
                                    "solar_system_id": 123,
                                    "station_count": 1000,
                                    "station_system_count": 100
                                }
                            ]
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Content-Language": {
                                "description": "The language used in the response",
                                "enum": [
                                    "de",
                                    "en-us",
                                    "fr",
                                    "ja",
                                    "ru",
                                    "zh"
                                ],
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok array",
                            "items": {
                                "description": "200 ok object",
                                "properties": {
                                    "corporation_id": {
                                        "description": "corporation_id integer",
                                        "format": "int32",
                                        "title": "get_universe_factions_corporation_id",
                                        "type": "integer"
                                    },
                                    "description": {
                                        "description": "description string",
                                        "title": "get_universe_factions_description",
                                        "type": "string"
                                    },
                                    "faction_id": {
                                        "description": "faction_id integer",
                                        "format": "int32",
                                        "title": "get_universe_factions_faction_id",
                                        "type": "integer"
                                    },
                                    "is_unique": {
                                        "description": "is_unique boolean",
                                        "title": "get_universe_factions_is_unique",
                                        "type": "boolean"
                                    },
                                    "militia_corporation_id": {
                                        "description": "militia_corporation_id integer",
                                        "format": "int32",
                                        "title": "get_universe_factions_militia_corporation_id",
                                        "type": "integer"
                                    },
                                    "name": {
                                        "description": "name string",
                                        "title": "get_universe_factions_name",
                                        "type": "string"
                                    },
                                    "size_factor": {
                                        "description": "size_factor number",
                                        "format": "float",
                                        "title": "get_universe_factions_size_factor",
                                        "type": "number"
                                    },
                                    "solar_system_id": {
                                        "description": "solar_system_id integer",
                                        "format": "int32",
                                        "title": "get_universe_factions_solar_system_id",
                                        "type": "integer"
                                    },
                                    "station_count": {
                                        "description": "station_count integer",
                                        "format": "int32",
                                        "title": "get_universe_factions_station_count",
                                        "type": "integer"
                                    },
                                    "station_system_count": {
                                        "description": "station_system_count integer",
                                        "format": "int32",
                                        "title": "get_universe_factions_station_system_count",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "faction_id",
                                    "name",
                                    "description",
                                    "solar_system_id",
                                    "corporation_id",
                                    "size_factor",
                                    "station_count",
                                    "station_system_count",
                                    "is_unique"
                                ],
                                "title": "get_universe_factions_200_ok",
                                "type": "object"
                            },
                            "title": "get_universe_factions_ok",
                            "type": "array"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_universe_factions_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_universe_factions_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "summary": "Get factions",
                "tags": [
                    "Universe"
                ],
                "x-alternate-versions": [
                    "dev",
                    "latest",
                    "v1"
                ],
                "x-cached-seconds": 3600
            }
        },
        "/universe/graphics/": {
            "get": {
                "description": "Get a list of graphics\n\n---\n\nAlternate route: `/v1/universe/graphics/`\n\nAlternate route: `/latest/universe/graphics/`\n\nAlternate route: `/dev/universe/graphics/`\n\n\n---\n\nThis route is cached for up to 3600 seconds",
                "operationId": "get_universe_graphics",
                "parameters": [
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of graphic ids",
                        "examples": {
                            "application/json": [
                                10,
                                4106
                            ]
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok array",
                            "items": {
                                "description": "200 ok integer",
                                "format": "int32",
                                "title": "get_universe_graphics_200_ok",
                                "type": "integer"
                            },
                            "title": "get_universe_graphics_ok",
                            "type": "array"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_universe_graphics_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_universe_graphics_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "summary": "Get graphics",
                "tags": [
                    "Universe"
                ],
                "x-alternate-versions": [
                    "dev",
                    "latest",
                    "v1"
                ],
                "x-cached-seconds": 3600
            }
        },
        "/universe/graphics/{graphic_id}/": {
            "get": {
                "description": "Get information on a graphic\n\n---\n\nAlternate route: `/v1/universe/graphics/{graphic_id}/`\n\nAlternate route: `/latest/universe/graphics/{graphic_id}/`\n\nAlternate route: `/dev/universe/graphics/{graphic_id}/`\n\n\n---\n\nThis route is cached for up to 3600 seconds",
                "operationId": "get_universe_graphics_graphic_id",
                "parameters": [
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "description": "graphic_id integer",
                        "format": "int32",
                        "in": "path",
                        "name": "graphic_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Information about a graphic",
                        "examples": {
                            "application/json": {
                                "graphic_file": "res:/dx9/model/worldobject/planet/moon.red",
                                "graphic_id": 10
                            }
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok object",
                            "properties": {
                                "collision_file": {
                                    "description": "collision_file string",
                                    "title": "get_universe_graphics_graphic_id_collision_file",
                                    "type": "string"
                                },
                                "graphic_file": {
                                    "description": "graphic_file string",
                                    "title": "get_universe_graphics_graphic_id_graphic_file",
                                    "type": "string"
                                },
                                "graphic_id": {
                                    "description": "graphic_id integer",
                                    "format": "int32",
                                    "title": "get_universe_graphics_graphic_id_graphic_id",
                                    "type": "integer"
                                },
                                "icon_folder": {
                                    "description": "icon_folder string",
                                    "title": "get_universe_graphics_graphic_id_icon_folder",
                                    "type": "string"
                                },
                                "sof_dna": {
                                    "description": "sof_dna string",
                                    "title": "get_universe_graphics_graphic_id_sof_dna",
                                    "type": "string"
                                },
                                "sof_fation_name": {
                                    "description": "sof_fation_name string",
                                    "title": "get_universe_graphics_graphic_id_sof_fation_name",
                                    "type": "string"
                                },
                                "sof_hull_name": {
                                    "description": "sof_hull_name string",
                                    "title": "get_universe_graphics_graphic_id_sof_hull_name",
                                    "type": "string"
                                },
                                "sof_race_name": {
                                    "description": "sof_race_name string",
                                    "title": "get_universe_graphics_graphic_id_sof_race_name",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "graphic_id"
                            ],
                            "title": "get_universe_graphics_graphic_id_ok",
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "Graphic not found",
                        "examples": {
                            "application/json": {
                                "error": "Not found message"
                            }
                        },
                        "schema": {
                            "description": "Not found",
                            "properties": {
                                "error": {
                                    "description": "Not found message",
                                    "title": "get_universe_graphics_graphic_id_404_not_found",
                                    "type": "string"
                                }
                            },
                            "title": "get_universe_graphics_graphic_id_not_found",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_universe_graphics_graphic_id_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_universe_graphics_graphic_id_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "summary": "Get graphic information",
                "tags": [
                    "Universe"
                ],
                "x-alternate-versions": [
                    "dev",
                    "latest",
                    "v1"
                ],
                "x-cached-seconds": 3600
            }
        },
        "/universe/groups/": {
            "get": {
                "description": "Get a list of item groups\n\n---\n\nAlternate route: `/v1/universe/groups/`\n\nAlternate route: `/latest/universe/groups/`\n\nAlternate route: `/dev/universe/groups/`\n\n\n---\n\nThis route is cached for up to 3600 seconds",
                "operationId": "get_universe_groups",
                "parameters": [
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "description": "Which page to query",
                        "format": "int32",
                        "in": "query",
                        "minimum": 1,
                        "name": "page",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of item group ids",
                        "examples": {
                            "application/json": [
                                1,
                                2,
                                3
                            ]
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok array",
                            "items": {
                                "description": "200 ok integer",
                                "format": "int32",
                                "title": "get_universe_groups_200_ok",
                                "type": "integer"
                            },
                            "title": "get_universe_groups_ok",
                            "type": "array"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_universe_groups_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_universe_groups_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "summary": "Get item groups",
                "tags": [
                    "Universe"
                ],
                "x-alternate-versions": [
                    "dev",
                    "latest",
                    "v1"
                ],
                "x-cached-seconds": 3600
            }
        },
        "/universe/groups/{group_id}/": {
            "get": {
                "description": "Get information on an item group\n\n---\n\nAlternate route: `/v1/universe/groups/{group_id}/`\n\nAlternate route: `/latest/universe/groups/{group_id}/`\n\nAlternate route: `/dev/universe/groups/{group_id}/`\n\n\n---\n\nThis route is cached for up to 3600 seconds",
                "operationId": "get_universe_groups_group_id",
                "parameters": [
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "description": "An Eve item group ID",
                        "format": "int32",
                        "in": "path",
                        "name": "group_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "default": "en-us",
                        "description": "Language to use in the response",
                        "enum": [
                            "de",
                            "en-us",
                            "fr",
                            "ja",
                            "ru",
                            "zh"
                        ],
                        "in": "query",
                        "name": "language",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Information about an item group",
                        "examples": {
                            "application/json": {
                                "category_id": 6,
                                "group_id": 25,
                                "name": "Frigate",
                                "published": true,
                                "types": [
                                    587,
                                    586,
                                    585
                                ]
                            }
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Content-Language": {
                                "description": "The language used in the response",
                                "enum": [
                                    "de",
                                    "en-us",
                                    "fr",
                                    "ja",
                                    "ru",
                                    "zh"
                                ],
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok object",
                            "properties": {
                                "category_id": {
                                    "description": "category_id integer",
                                    "format": "int32",
                                    "title": "get_universe_groups_group_id_category_id",
                                    "type": "integer"
                                },
                                "group_id": {
                                    "description": "group_id integer",
                                    "format": "int32",
                                    "title": "get_universe_groups_group_id_group_id",
                                    "type": "integer"
                                },
                                "name": {
                                    "description": "name string",
                                    "title": "get_universe_groups_group_id_name",
                                    "type": "string"
                                },
                                "published": {
                                    "description": "published boolean",
                                    "title": "get_universe_groups_group_id_published",
                                    "type": "boolean"
                                },
                                "types": {
                                    "description": "types array",
                                    "items": {
                                        "description": "type integer",
                                        "format": "int32",
                                        "title": "get_universe_groups_group_id_type",
                                        "type": "integer"
                                    },
                                    "title": "get_universe_groups_group_id_types",
                                    "type": "array"
                                }
                            },
                            "required": [
                                "group_id",
                                "name",
                                "published",
                                "category_id",
                                "types"
                            ],
                            "title": "get_universe_groups_group_id_ok",
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "Group not found",
                        "examples": {
                            "application/json": {
                                "error": "Not found message"
                            }
                        },
                        "schema": {
                            "description": "Not found",
                            "properties": {
                                "error": {
                                    "description": "Not found message",
                                    "title": "get_universe_groups_group_id_404_not_found",
                                    "type": "string"
                                }
                            },
                            "title": "get_universe_groups_group_id_not_found",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_universe_groups_group_id_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_universe_groups_group_id_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "summary": "Get item group information",
                "tags": [
                    "Universe"
                ],
                "x-alternate-versions": [
                    "dev",
                    "latest",
                    "v1"
                ],
                "x-cached-seconds": 3600
            }
        },
        "/universe/moons/{moon_id}/": {
            "get": {
                "description": "Get information on a moon\n\n---\n\nAlternate route: `/v1/universe/moons/{moon_id}/`\n\nAlternate route: `/latest/universe/moons/{moon_id}/`\n\nAlternate route: `/dev/universe/moons/{moon_id}/`\n\n\n---\n\nThis route is cached for up to 3600 seconds",
                "operationId": "get_universe_moons_moon_id",
                "parameters": [
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "description": "moon_id integer",
                        "format": "int32",
                        "in": "path",
                        "name": "moon_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Information about a moon",
                        "examples": {
                            "application/json": {
                                "moon_id": 40000042,
                                "name": "Akpivem I - Moon 1",
                                "position": {
                                    "x": 58605102008,
                                    "y": -3066616285,
                                    "z": -55193617920
                                },
                                "system_id": 30000003
                            }
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok object",
                            "properties": {
                                "moon_id": {
                                    "description": "moon_id integer",
                                    "format": "int32",
                                    "title": "get_universe_moons_moon_id_moon_id",
                                    "type": "integer"
                                },
                                "name": {
                                    "description": "name string",
                                    "title": "get_universe_moons_moon_id_name",
                                    "type": "string"
                                },
                                "position": {
                                    "description": "position object",
                                    "properties": {
                                        "x": {
                                            "description": "x number",
                                            "format": "float",
                                            "title": "get_universe_moons_moon_id_x",
                                            "type": "number"
                                        },
                                        "y": {
                                            "description": "y number",
                                            "format": "float",
                                            "title": "get_universe_moons_moon_id_y",
                                            "type": "number"
                                        },
                                        "z": {
                                            "description": "z number",
                                            "format": "float",
                                            "title": "get_universe_moons_moon_id_z",
                                            "type": "number"
                                        }
                                    },
                                    "required": [
                                        "x",
                                        "y",
                                        "z"
                                    ],
                                    "title": "get_universe_moons_moon_id_position",
                                    "type": "object"
                                },
                                "system_id": {
                                    "description": "The solar system this moon is in",
                                    "format": "int32",
                                    "title": "get_universe_moons_moon_id_system_id",
                                    "type": "integer"
                                }
                            },
                            "required": [
                                "moon_id",
                                "name",
                                "position",
                                "system_id"
                            ],
                            "title": "get_universe_moons_moon_id_ok",
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "Moon not found",
                        "examples": {
                            "application/json": {
                                "error": "Not found message"
                            }
                        },
                        "schema": {
                            "description": "Not found",
                            "properties": {
                                "error": {
                                    "description": "Not found message",
                                    "title": "get_universe_moons_moon_id_404_not_found",
                                    "type": "string"
                                }
                            },
                            "title": "get_universe_moons_moon_id_not_found",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_universe_moons_moon_id_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_universe_moons_moon_id_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "summary": "Get moon information",
                "tags": [
                    "Universe"
                ],
                "x-alternate-versions": [
                    "dev",
                    "latest",
                    "v1"
                ],
                "x-cached-seconds": 3600
            }
        },
        "/universe/names/": {
            "post": {
                "deprecated": true,
                "description": "Resolve a set of IDs to names and categories. Supported ID's for resolving are: Characters, Corporations, Alliances, Stations, Solar Systems, Constellations, Regions, Types.\n\n---\n\nAlternate route: `/v1/universe/names/`\n",
                "operationId": "post_universe_names",
                "parameters": [
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "description": "The ids to resolve",
                        "in": "body",
                        "name": "ids",
                        "required": true,
                        "schema": {
                            "description": "ids schema",
                            "properties": {
                                "ids": {
                                    "description": "ids array",
                                    "items": {
                                        "description": "id integer",
                                        "format": "int32",
                                        "title": "post_universe_names_id",
                                        "type": "integer"
                                    },
                                    "minItems": 1,
                                    "title": "post_universe_names_ids",
                                    "type": "array",
                                    "uniqueItems": true
                                }
                            },
                            "required": [
                                "ids"
                            ],
                            "title": "post_universe_names_ids"
                        }
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of id/name associations for a set of ID's. ID's that cannot be resolved are not returned.",
                        "examples": {
                            "application/json": [
                                {
                                    "category": "character",
                                    "id": 95465499,
                                    "name": "CCP Bartender"
                                },
                                {
                                    "category": "solar_system",
                                    "id": 30000142,
                                    "name": "Jita"
                                }
                            ]
                        },
                        "schema": {
                            "description": "200 ok array",
                            "items": {
                                "description": "200 ok object",
                                "properties": {
                                    "category": {
                                        "description": "category string",
                                        "enum": [
                                            "alliance",
                                            "character",
                                            "constellation",
                                            "corporation",
                                            "inventory_type",
                                            "region",
                                            "solar_system",
                                            "station"
                                        ],
                                        "title": "post_universe_names_category",
                                        "type": "string"
                                    },
                                    "id": {
                                        "description": "id integer",
                                        "format": "int32",
                                        "title": "post_universe_names_id",
                                        "type": "integer"
                                    },
                                    "name": {
                                        "description": "name string",
                                        "title": "post_universe_names_name",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "id",
                                    "name",
                                    "category"
                                ],
                                "title": "post_universe_names_200_ok",
                                "type": "object"
                            },
                            "title": "post_universe_names_ok",
                            "type": "array"
                        }
                    },
                    "404": {
                        "description": "no valid IDs found",
                        "examples": {
                            "application/json": {
                                "error": "Not found message"
                            }
                        },
                        "schema": {
                            "description": "Not found",
                            "properties": {
                                "error": {
                                    "description": "Not found message",
                                    "title": "post_universe_names_404_not_found",
                                    "type": "string"
                                }
                            },
                            "title": "post_universe_names_not_found",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "post_universe_names_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "post_universe_names_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "summary": "Get names and categories for a set of ID's",
                "tags": [
                    "Universe"
                ],
                "x-alternate-versions": [
                    "v1"
                ]
            }
        },
        "/universe/planets/{planet_id}/": {
            "get": {
                "description": "Get information on a planet\n\n---\n\nAlternate route: `/v1/universe/planets/{planet_id}/`\n\nAlternate route: `/latest/universe/planets/{planet_id}/`\n\nAlternate route: `/dev/universe/planets/{planet_id}/`\n\n\n---\n\nThis route is cached for up to 3600 seconds",
                "operationId": "get_universe_planets_planet_id",
                "parameters": [
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "description": "planet_id integer",
                        "format": "int32",
                        "in": "path",
                        "name": "planet_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Information about a planet",
                        "examples": {
                            "application/json": {
                                "name": "Akpivem III",
                                "planet_id": 40000046,
                                "position": {
                                    "x": -189226344497,
                                    "y": 9901605317,
                                    "z": -254852632979
                                },
                                "system_id": 30000003,
                                "type_id": 13
                            }
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok object",
                            "properties": {
                                "name": {
                                    "description": "name string",
                                    "title": "get_universe_planets_planet_id_name",
                                    "type": "string"
                                },
                                "planet_id": {
                                    "description": "planet_id integer",
                                    "format": "int32",
                                    "title": "get_universe_planets_planet_id_planet_id",
                                    "type": "integer"
                                },
                                "position": {
                                    "description": "position object",
                                    "properties": {
                                        "x": {
                                            "description": "x number",
                                            "format": "float",
                                            "title": "get_universe_planets_planet_id_x",
                                            "type": "number"
                                        },
                                        "y": {
                                            "description": "y number",
                                            "format": "float",
                                            "title": "get_universe_planets_planet_id_y",
                                            "type": "number"
                                        },
                                        "z": {
                                            "description": "z number",
                                            "format": "float",
                                            "title": "get_universe_planets_planet_id_z",
                                            "type": "number"
                                        }
                                    },
                                    "required": [
                                        "x",
                                        "y",
                                        "z"
                                    ],
                                    "title": "get_universe_planets_planet_id_position",
                                    "type": "object"
                                },
                                "system_id": {
                                    "description": "The solar system this planet is in",
                                    "format": "int32",
                                    "title": "get_universe_planets_planet_id_system_id",
                                    "type": "integer"
                                },
                                "type_id": {
                                    "description": "type_id integer",
                                    "format": "int32",
                                    "title": "get_universe_planets_planet_id_type_id",
                                    "type": "integer"
                                }
                            },
                            "required": [
                                "planet_id",
                                "name",
                                "type_id",
                                "position",
                                "system_id"
                            ],
                            "title": "get_universe_planets_planet_id_ok",
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "Planet not found",
                        "examples": {
                            "application/json": {
                                "error": "Not found message"
                            }
                        },
                        "schema": {
                            "description": "Not found",
                            "properties": {
                                "error": {
                                    "description": "Not found message",
                                    "title": "get_universe_planets_planet_id_404_not_found",
                                    "type": "string"
                                }
                            },
                            "title": "get_universe_planets_planet_id_not_found",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_universe_planets_planet_id_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_universe_planets_planet_id_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "summary": "Get planet information",
                "tags": [
                    "Universe"
                ],
                "x-alternate-versions": [
                    "dev",
                    "latest",
                    "v1"
                ],
                "x-cached-seconds": 3600
            }
        },
        "/universe/races/": {
            "get": {
                "description": "Get a list of character races\n\n---\n\nAlternate route: `/v1/universe/races/`\n\nAlternate route: `/latest/universe/races/`\n\nAlternate route: `/dev/universe/races/`\n\n\n---\n\nThis route is cached for up to 3600 seconds",
                "operationId": "get_universe_races",
                "parameters": [
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "default": "en-us",
                        "description": "Language to use in the response",
                        "enum": [
                            "de",
                            "en-us",
                            "fr",
                            "ja",
                            "ru",
                            "zh"
                        ],
                        "in": "query",
                        "name": "language",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of character races",
                        "examples": {
                            "application/json": [
                                {
                                    "alliance_id": 500001,
                                    "description": "Founded on the tenets of patriotism and hard work...",
                                    "name": "Caldari",
                                    "race_id": 1
                                }
                            ]
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Content-Language": {
                                "description": "The language used in the response",
                                "enum": [
                                    "de",
                                    "en-us",
                                    "fr",
                                    "ja",
                                    "ru",
                                    "zh"
                                ],
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok array",
                            "items": {
                                "description": "200 ok object",
                                "properties": {
                                    "alliance_id": {
                                        "description": "The alliance generally associated with this race",
                                        "format": "int32",
                                        "title": "get_universe_races_alliance_id",
                                        "type": "integer"
                                    },
                                    "description": {
                                        "description": "description string",
                                        "title": "get_universe_races_description",
                                        "type": "string"
                                    },
                                    "name": {
                                        "description": "name string",
                                        "title": "get_universe_races_name",
                                        "type": "string"
                                    },
                                    "race_id": {
                                        "description": "race_id integer",
                                        "format": "int32",
                                        "title": "get_universe_races_race_id",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "race_id",
                                    "name",
                                    "description",
                                    "alliance_id"
                                ],
                                "title": "get_universe_races_200_ok",
                                "type": "object"
                            },
                            "title": "get_universe_races_ok",
                            "type": "array"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_universe_races_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_universe_races_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "summary": "Get character races",
                "tags": [
                    "Universe"
                ],
                "x-alternate-versions": [
                    "dev",
                    "latest",
                    "v1"
                ],
                "x-cached-seconds": 3600
            }
        },
        "/universe/regions/": {
            "get": {
                "description": "Get a list of regions\n\n---\n\nAlternate route: `/v1/universe/regions/`\n\nAlternate route: `/latest/universe/regions/`\n\nAlternate route: `/dev/universe/regions/`\n\n\n---\n\nThis route is cached for up to 3600 seconds",
                "operationId": "get_universe_regions",
                "parameters": [
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of region ids",
                        "examples": {
                            "application/json": [
                                11000001,
                                11000002
                            ]
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok array",
                            "items": {
                                "description": "200 ok integer",
                                "format": "int32",
                                "title": "get_universe_regions_200_ok",
                                "type": "integer"
                            },
                            "title": "get_universe_regions_ok",
                            "type": "array"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_universe_regions_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_universe_regions_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "summary": "Get regions",
                "tags": [
                    "Universe"
                ],
                "x-alternate-versions": [
                    "dev",
                    "latest",
                    "v1"
                ],
                "x-cached-seconds": 3600
            }
        },
        "/universe/regions/{region_id}/": {
            "get": {
                "description": "Get information on a region\n\n---\n\nAlternate route: `/v1/universe/regions/{region_id}/`\n\nAlternate route: `/latest/universe/regions/{region_id}/`\n\nAlternate route: `/dev/universe/regions/{region_id}/`\n\n\n---\n\nThis route is cached for up to 3600 seconds",
                "operationId": "get_universe_regions_region_id",
                "parameters": [
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "default": "en-us",
                        "description": "Language to use in the response",
                        "enum": [
                            "de",
                            "en-us",
                            "fr",
                            "ja",
                            "ru",
                            "zh"
                        ],
                        "in": "query",
                        "name": "language",
                        "type": "string"
                    },
                    {
                        "description": "region_id integer",
                        "format": "int32",
                        "in": "path",
                        "name": "region_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Information about a region",
                        "examples": {
                            "application/json": {
                                "constellations": [
                                    20000302,
                                    20000303
                                ],
                                "description": "It has long been an established fact of civilization...",
                                "name": "Metropolis",
                                "region_id": 10000042
                            }
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Content-Language": {
                                "description": "The language used in the response",
                                "enum": [
                                    "de",
                                    "en-us",
                                    "fr",
                                    "ja",
                                    "ru",
                                    "zh"
                                ],
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok object",
                            "properties": {
                                "constellations": {
                                    "description": "constellations array",
                                    "items": {
                                        "description": "constellation integer",
                                        "format": "int32",
                                        "title": "get_universe_regions_region_id_constellation",
                                        "type": "integer"
                                    },
                                    "title": "get_universe_regions_region_id_constellations",
                                    "type": "array"
                                },
                                "description": {
                                    "description": "description string",
                                    "title": "get_universe_regions_region_id_description",
                                    "type": "string"
                                },
                                "name": {
                                    "description": "name string",
                                    "title": "get_universe_regions_region_id_name",
                                    "type": "string"
                                },
                                "region_id": {
                                    "description": "region_id integer",
                                    "format": "int32",
                                    "title": "get_universe_regions_region_id_region_id",
                                    "type": "integer"
                                }
                            },
                            "required": [
                                "region_id",
                                "name",
                                "constellations"
                            ],
                            "title": "get_universe_regions_region_id_ok",
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "Region not found",
                        "examples": {
                            "application/json": {
                                "error": "Not found message"
                            }
                        },
                        "schema": {
                            "description": "Not found",
                            "properties": {
                                "error": {
                                    "description": "Not found message",
                                    "title": "get_universe_regions_region_id_404_not_found",
                                    "type": "string"
                                }
                            },
                            "title": "get_universe_regions_region_id_not_found",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_universe_regions_region_id_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_universe_regions_region_id_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "summary": "Get region information",
                "tags": [
                    "Universe"
                ],
                "x-alternate-versions": [
                    "dev",
                    "latest",
                    "v1"
                ],
                "x-cached-seconds": 3600
            }
        },
        "/universe/schematics/{schematic_id}/": {
            "get": {
                "description": "Get information on a planetary factory schematic\n\n---\n\nAlternate route: `/v1/universe/schematics/{schematic_id}/`\n\nAlternate route: `/latest/universe/schematics/{schematic_id}/`\n\nAlternate route: `/dev/universe/schematics/{schematic_id}/`\n\n\n---\n\nThis route is cached for up to 3600 seconds",
                "operationId": "get_universe_schematics_schematic_id",
                "parameters": [
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "description": "A PI schematic ID",
                        "format": "int32",
                        "in": "path",
                        "name": "schematic_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Public data about a schematic",
                        "examples": {
                            "application/json": {
                                "cycle_time": 1800,
                                "schematic_name": "Bacteria"
                            }
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok object",
                            "properties": {
                                "cycle_time": {
                                    "description": "Time in seconds to process a run",
                                    "format": "int32",
                                    "title": "get_universe_schematics_schematic_id_cycle_time",
                                    "type": "integer"
                                },
                                "schematic_name": {
                                    "description": "schematic_name string",
                                    "title": "get_universe_schematics_schematic_id_schematic_name",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "schematic_name",
                                "cycle_time"
                            ],
                            "title": "get_universe_schematics_schematic_id_ok",
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "Schematic not found",
                        "examples": {
                            "application/json": {
                                "error": "Schematic not found"
                            }
                        },
                        "schema": {
                            "description": "Schematic not found",
                            "properties": {
                                "error": {
                                    "description": "error message",
                                    "title": "get_universe_schematics_schematic_id_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_universe_schematics_schematic_id_not_found",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_universe_schematics_schematic_id_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_universe_schematics_schematic_id_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "summary": "Get schematic information",
                "tags": [
                    "Planetary Interaction"
                ],
                "x-alternate-versions": [
                    "dev",
                    "latest",
                    "v1"
                ],
                "x-cached-seconds": 3600
            }
        },
        "/universe/stargates/{stargate_id}/": {
            "get": {
                "description": "Get information on a stargate\n\n---\n\nAlternate route: `/v1/universe/stargates/{stargate_id}/`\n\nAlternate route: `/latest/universe/stargates/{stargate_id}/`\n\nAlternate route: `/dev/universe/stargates/{stargate_id}/`\n\n\n---\n\nThis route is cached for up to 3600 seconds",
                "operationId": "get_universe_stargates_stargate_id",
                "parameters": [
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "description": "stargate_id integer",
                        "format": "int32",
                        "in": "path",
                        "name": "stargate_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Information about a stargate",
                        "examples": {
                            "application/json": {
                                "destination": {
                                    "stargate_id": 50000056,
                                    "system_id": 30000001
                                },
                                "name": "Stargate (Tanoo)",
                                "position": {
                                    "x": -101092761600,
                                    "y": 5279539200,
                                    "z": 1550503403520
                                },
                                "stargate_id": 50000342,
                                "system_id": 30000003,
                                "type_id": 29624
                            }
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok object",
                            "properties": {
                                "destination": {
                                    "description": "destination object",
                                    "properties": {
                                        "stargate_id": {
                                            "description": "The stargate this stargate connects to",
                                            "format": "int32",
                                            "title": "get_universe_stargates_stargate_id_stargate_id",
                                            "type": "integer"
                                        },
                                        "system_id": {
                                            "description": "The solar system this stargate connects to",
                                            "format": "int32",
                                            "title": "get_universe_stargates_stargate_id_system_id",
                                            "type": "integer"
                                        }
                                    },
                                    "required": [
                                        "system_id",
                                        "stargate_id"
                                    ],
                                    "title": "get_universe_stargates_stargate_id_destination",
                                    "type": "object"
                                },
                                "name": {
                                    "description": "name string",
                                    "title": "get_universe_stargates_stargate_id_name",
                                    "type": "string"
                                },
                                "position": {
                                    "description": "position object",
                                    "properties": {
                                        "x": {
                                            "description": "x number",
                                            "format": "float",
                                            "title": "get_universe_stargates_stargate_id_x",
                                            "type": "number"
                                        },
                                        "y": {
                                            "description": "y number",
                                            "format": "float",
                                            "title": "get_universe_stargates_stargate_id_y",
                                            "type": "number"
                                        },
                                        "z": {
                                            "description": "z number",
                                            "format": "float",
                                            "title": "get_universe_stargates_stargate_id_z",
                                            "type": "number"
                                        }
                                    },
                                    "required": [
                                        "x",
                                        "y",
                                        "z"
                                    ],
                                    "title": "get_universe_stargates_stargate_id_position",
                                    "type": "object"
                                },
                                "stargate_id": {
                                    "description": "stargate_id integer",
                                    "format": "int32",
                                    "title": "get_universe_stargates_stargate_id_stargate_id",
                                    "type": "integer"
                                },
                                "system_id": {
                                    "description": "The solar system this stargate is in",
                                    "format": "int32",
                                    "title": "get_universe_stargates_stargate_id_system_id",
                                    "type": "integer"
                                },
                                "type_id": {
                                    "description": "type_id integer",
                                    "format": "int32",
                                    "title": "get_universe_stargates_stargate_id_type_id",
                                    "type": "integer"
                                }
                            },
                            "required": [
                                "stargate_id",
                                "name",
                                "type_id",
                                "position",
                                "system_id",
                                "destination"
                            ],
                            "title": "get_universe_stargates_stargate_id_ok",
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "Stargate not found",
                        "examples": {
                            "application/json": {
                                "error": "Not found message"
                            }
                        },
                        "schema": {
                            "description": "Not found",
                            "properties": {
                                "error": {
                                    "description": "Not found message",
                                    "title": "get_universe_stargates_stargate_id_404_not_found",
                                    "type": "string"
                                }
                            },
                            "title": "get_universe_stargates_stargate_id_not_found",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_universe_stargates_stargate_id_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_universe_stargates_stargate_id_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "summary": "Get stargate information",
                "tags": [
                    "Universe"
                ],
                "x-alternate-versions": [
                    "dev",
                    "latest",
                    "v1"
                ],
                "x-cached-seconds": 3600
            }
        },
        "/universe/stations/{station_id}/": {
            "get": {
                "deprecated": true,
                "description": "Public information on stations\n\n---\n\nAlternate route: `/v1/universe/stations/{station_id}/`\n\n\n---\n\nThis route is cached for up to 3600 seconds",
                "operationId": "get_universe_stations_station_id",
                "parameters": [
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "description": "An Eve station ID",
                        "format": "int32",
                        "in": "path",
                        "name": "station_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Public data about a station",
                        "examples": {
                            "application/json": {
                                "solar_system_id": 30000142,
                                "station_name": "Jita IV Moon IV - Caldari Navy Assembly Plant"
                            }
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok object",
                            "properties": {
                                "solar_system_id": {
                                    "description": "solar_system_id integer",
                                    "format": "int32",
                                    "title": "get_universe_stations_station_id_solar_system_id",
                                    "type": "integer"
                                },
                                "station_name": {
                                    "description": "the full name of the station",
                                    "title": "get_universe_stations_station_id_station_name",
                                    "type": "string"
                                }
                            },
                            "title": "get_universe_stations_station_id_ok",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_universe_stations_station_id_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_universe_stations_station_id_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "summary": "Get station information",
                "tags": [
                    "Universe"
                ],
                "x-alternate-versions": [
                    "v1"
                ],
                "x-cached-seconds": 3600
            }
        },
        "/universe/structures/": {
            "get": {
                "description": "List all public structures\n\n---\n\nAlternate route: `/v1/universe/structures/`\n\nAlternate route: `/latest/universe/structures/`\n\nAlternate route: `/dev/universe/structures/`\n\n\n---\n\nThis route is cached for up to 3600 seconds",
                "operationId": "get_universe_structures",
                "parameters": [
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of public structure IDs",
                        "examples": {
                            "application/json": [
                                1000000017013,
                                1000000025062
                            ]
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok array",
                            "items": {
                                "description": "200 ok integer",
                                "format": "int64",
                                "minimum": 0,
                                "title": "get_universe_structures_200_ok",
                                "type": "integer"
                            },
                            "title": "get_universe_structures_ok",
                            "type": "array",
                            "uniqueItems": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_universe_structures_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_universe_structures_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "summary": "List all public structures",
                "tags": [
                    "Universe"
                ],
                "x-alternate-versions": [
                    "dev",
                    "latest",
                    "v1"
                ],
                "x-cached-seconds": 3600
            }
        },
        "/universe/structures/{structure_id}/": {
            "get": {
                "description": "Returns information on requested structure, if you are on the ACL. Otherwise, returns \"Forbidden\" for all inputs.\n\n---\n\nAlternate route: `/v1/universe/structures/{structure_id}/`\n\nAlternate route: `/latest/universe/structures/{structure_id}/`\n\nAlternate route: `/dev/universe/structures/{structure_id}/`\n\n\n---\n\nThis route is cached for up to 3600 seconds",
                "operationId": "get_universe_structures_structure_id",
                "parameters": [
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "description": "An Eve structure ID",
                        "format": "int64",
                        "in": "path",
                        "name": "structure_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Access token to use, if preferred over a header",
                        "in": "query",
                        "name": "token",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Data about a structure",
                        "examples": {
                            "application/json": {
                                "name": "V-3YG7 VI - The Capital",
                                "solar_system_id": 30000142
                            }
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok object",
                            "properties": {
                                "name": {
                                    "description": "The full name of the structure",
                                    "title": "get_universe_structures_structure_id_name",
                                    "type": "string"
                                },
                                "position": {
                                    "description": "Coordinates of the structure in Cartesian space relative to the Sun, in metres.\n",
                                    "properties": {
                                        "x": {
                                            "description": "x number",
                                            "format": "float",
                                            "title": "get_universe_structures_structure_id_x",
                                            "type": "number"
                                        },
                                        "y": {
                                            "description": "y number",
                                            "format": "float",
                                            "title": "get_universe_structures_structure_id_y",
                                            "type": "number"
                                        },
                                        "z": {
                                            "description": "z number",
                                            "format": "float",
                                            "title": "get_universe_structures_structure_id_z",
                                            "type": "number"
                                        }
                                    },
                                    "required": [
                                        "x",
                                        "y",
                                        "z"
                                    ],
                                    "title": "get_universe_structures_structure_id_position",
                                    "type": "object"
                                },
                                "solar_system_id": {
                                    "description": "solar_system_id integer",
                                    "format": "int32",
                                    "title": "get_universe_structures_structure_id_solar_system_id",
                                    "type": "integer"
                                },
                                "type_id": {
                                    "description": "type_id integer",
                                    "format": "int32",
                                    "title": "get_universe_structures_structure_id_type_id",
                                    "type": "integer"
                                }
                            },
                            "required": [
                                "name",
                                "solar_system_id"
                            ],
                            "title": "get_universe_structures_structure_id_ok",
                            "type": "object"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "examples": {
                            "application/json": {
                                "error": "Token is not valid for scope(s): esi-universe.read_structures.v1"
                            }
                        },
                        "schema": {
                            "description": "Forbidden",
                            "properties": {
                                "error": {
                                    "description": "Forbidden message",
                                    "title": "get_universe_structures_structure_id_403_forbidden",
                                    "type": "string"
                                }
                            },
                            "title": "get_universe_structures_structure_id_forbidden",
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "Structure not found",
                        "examples": {
                            "application/json": {
                                "error": "Not found message"
                            }
                        },
                        "schema": {
                            "description": "Not found",
                            "properties": {
                                "error": {
                                    "description": "Not found message",
                                    "title": "get_universe_structures_structure_id_404_not_found",
                                    "type": "string"
                                }
                            },
                            "title": "get_universe_structures_structure_id_not_found",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_universe_structures_structure_id_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_universe_structures_structure_id_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "evesso": [
                            "esi-universe.read_structures.v1"
                        ]
                    }
                ],
                "summary": "Get structure information",
                "tags": [
                    "Universe"
                ],
                "x-alternate-versions": [
                    "dev",
                    "latest",
                    "v1"
                ],
                "x-cached-seconds": 3600
            }
        },
        "/universe/system_jumps/": {
            "get": {
                "description": "Get the number of jumps in solar systems within the last hour, excluding wormhole space. Only systems with jumps will be listed\n\n---\n\nAlternate route: `/v1/universe/system_jumps/`\n\nAlternate route: `/latest/universe/system_jumps/`\n\nAlternate route: `/dev/universe/system_jumps/`\n\n\n---\n\nThis route is cached for up to 3600 seconds",
                "operationId": "get_universe_system_jumps",
                "parameters": [
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of systems and number of jumps",
                        "examples": {
                            "application/json": [
                                {
                                    "ship_jumps": 42,
                                    "system_id": 30002410
                                }
                            ]
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok array",
                            "items": {
                                "description": "200 ok object",
                                "properties": {
                                    "ship_jumps": {
                                        "description": "ship_jumps integer",
                                        "format": "int32",
                                        "title": "get_universe_system_jumps_ship_jumps",
                                        "type": "integer"
                                    },
                                    "system_id": {
                                        "description": "system_id integer",
                                        "format": "int32",
                                        "title": "get_universe_system_jumps_system_id",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "system_id",
                                    "ship_jumps"
                                ],
                                "title": "get_universe_system_jumps_200_ok",
                                "type": "object"
                            },
                            "title": "get_universe_system_jumps_ok",
                            "type": "array"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_universe_system_jumps_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_universe_system_jumps_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "summary": "Get system jumps",
                "tags": [
                    "Universe"
                ],
                "x-alternate-versions": [
                    "dev",
                    "latest",
                    "v1"
                ],
                "x-cached-seconds": 3600
            }
        },
        "/universe/system_kills/": {
            "get": {
                "description": "Get the number of ship, pod and NPC kills per solar system within the last hour, excluding wormhole space. Only systems with kills will be listed\n\n---\n\nAlternate route: `/v1/universe/system_kills/`\n\nAlternate route: `/latest/universe/system_kills/`\n\nAlternate route: `/dev/universe/system_kills/`\n\n\n---\n\nThis route is cached for up to 3600 seconds",
                "operationId": "get_universe_system_kills",
                "parameters": [
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of systems and number of ship, pod and NPC kills",
                        "examples": {
                            "application/json": [
                                {
                                    "npc_kills": 0,
                                    "pod_kills": 24,
                                    "ship_kills": 42,
                                    "system_id": 30002410
                                }
                            ]
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok array",
                            "items": {
                                "description": "200 ok object",
                                "properties": {
                                    "npc_kills": {
                                        "description": "Number of NPC ships killed in this system",
                                        "format": "int32",
                                        "title": "get_universe_system_kills_npc_kills",
                                        "type": "integer"
                                    },
                                    "pod_kills": {
                                        "description": "Number of pods killed in this system",
                                        "format": "int32",
                                        "title": "get_universe_system_kills_pod_kills",
                                        "type": "integer"
                                    },
                                    "ship_kills": {
                                        "description": "Number of player ships killed in this system",
                                        "format": "int32",
                                        "title": "get_universe_system_kills_ship_kills",
                                        "type": "integer"
                                    },
                                    "system_id": {
                                        "description": "system_id integer",
                                        "format": "int32",
                                        "title": "get_universe_system_kills_system_id",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "system_id",
                                    "ship_kills",
                                    "npc_kills",
                                    "pod_kills"
                                ],
                                "title": "get_universe_system_kills_200_ok",
                                "type": "object"
                            },
                            "title": "get_universe_system_kills_ok",
                            "type": "array"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_universe_system_kills_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_universe_system_kills_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "summary": "Get system kills",
                "tags": [
                    "Universe"
                ],
                "x-alternate-versions": [
                    "dev",
                    "latest",
                    "v1"
                ],
                "x-cached-seconds": 3600
            }
        },
        "/universe/systems/": {
            "get": {
                "description": "Get a list of solar systems\n\n---\n\nAlternate route: `/v1/universe/systems/`\n\nAlternate route: `/latest/universe/systems/`\n\nAlternate route: `/dev/universe/systems/`\n\n\n---\n\nThis route is cached for up to 3600 seconds",
                "operationId": "get_universe_systems",
                "parameters": [
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of solar system ids",
                        "examples": {
                            "application/json": [
                                30000001,
                                30000002
                            ]
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok array",
                            "items": {
                                "description": "200 ok integer",
                                "format": "int32",
                                "title": "get_universe_systems_200_ok",
                                "type": "integer"
                            },
                            "title": "get_universe_systems_ok",
                            "type": "array"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_universe_systems_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_universe_systems_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "summary": "Get solar systems",
                "tags": [
                    "Universe"
                ],
                "x-alternate-versions": [
                    "dev",
                    "latest",
                    "v1"
                ],
                "x-cached-seconds": 3600
            }
        },
        "/universe/systems/{system_id}/": {
            "get": {
                "deprecated": true,
                "description": "Information on solar systems\n\n---\n\nAlternate route: `/v1/universe/systems/{system_id}/`\n\n\n---\n\nThis route is cached for up to 3600 seconds",
                "operationId": "get_universe_systems_system_id",
                "parameters": [
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "description": "An Eve solar system ID",
                        "format": "int32",
                        "in": "path",
                        "name": "system_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Data about a solar system",
                        "examples": {
                            "application/json": {
                                "solar_system_name": "Jita"
                            }
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok object",
                            "properties": {
                                "solar_system_name": {
                                    "description": "the full name of the system",
                                    "title": "get_universe_systems_system_id_solar_system_name",
                                    "type": "string"
                                }
                            },
                            "title": "get_universe_systems_system_id_ok",
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "System not found",
                        "examples": {
                            "application/json": {
                                "error": "System not found"
                            }
                        },
                        "schema": {
                            "description": "System not found",
                            "properties": {
                                "error": {
                                    "description": "error message",
                                    "title": "get_universe_systems_system_id_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_universe_systems_system_id_not_found",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_universe_systems_system_id_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_universe_systems_system_id_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "summary": "Get solar system information",
                "tags": [
                    "Universe"
                ],
                "x-alternate-versions": [
                    "v1"
                ],
                "x-cached-seconds": 3600
            }
        },
        "/universe/types/": {
            "get": {
                "description": "Get a list of type ids\n\n---\n\nAlternate route: `/v1/universe/types/`\n\nAlternate route: `/latest/universe/types/`\n\nAlternate route: `/dev/universe/types/`\n\n\n---\n\nThis route is cached for up to 3600 seconds",
                "operationId": "get_universe_types",
                "parameters": [
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "description": "Which page to query",
                        "format": "int32",
                        "in": "query",
                        "minimum": 1,
                        "name": "page",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of type ids",
                        "examples": {
                            "application/json": [
                                1,
                                2,
                                3
                            ]
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok array",
                            "items": {
                                "description": "200 ok integer",
                                "format": "int32",
                                "title": "get_universe_types_200_ok",
                                "type": "integer"
                            },
                            "title": "get_universe_types_ok",
                            "type": "array"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_universe_types_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_universe_types_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "summary": "Get types",
                "tags": [
                    "Universe"
                ],
                "x-alternate-versions": [
                    "dev",
                    "latest",
                    "v1"
                ],
                "x-cached-seconds": 3600
            }
        },
        "/universe/types/{type_id}/": {
            "get": {
                "deprecated": true,
                "description": "Get information on a type\n\n---\n\nAlternate route: `/v1/universe/types/{type_id}/`\n\n\n---\n\nThis route is cached for up to 3600 seconds",
                "operationId": "get_universe_types_type_id",
                "parameters": [
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "description": "An Eve item type ID",
                        "format": "int32",
                        "in": "path",
                        "name": "type_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Public data about a type",
                        "examples": {
                            "application/json": {
                                "category_id": 6,
                                "graphic_id": 46,
                                "group_id": 25,
                                "type_description": "The Rifter is a very powerful combat frigate and can easily tackle the best frigates out there. It has gone through many radical design phases since its inauguration during the Minmatar Rebellion. The Rifter has a wide variety of offensive capabilities, making it an unpredictable and deadly adversary.",
                                "type_name": "Rifter"
                            }
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok object",
                            "properties": {
                                "category_id": {
                                    "description": "category_id integer",
                                    "format": "int32",
                                    "title": "get_universe_types_type_id_category_id",
                                    "type": "integer"
                                },
                                "graphic_id": {
                                    "description": "graphic_id integer",
                                    "format": "int32",
                                    "title": "get_universe_types_type_id_graphic_id",
                                    "type": "integer"
                                },
                                "group_id": {
                                    "description": "group_id integer",
                                    "format": "int32",
                                    "title": "get_universe_types_type_id_group_id",
                                    "type": "integer"
                                },
                                "icon_id": {
                                    "description": "icon_id integer",
                                    "format": "int32",
                                    "title": "get_universe_types_type_id_icon_id",
                                    "type": "integer"
                                },
                                "type_description": {
                                    "description": "type_description string",
                                    "title": "get_universe_types_type_id_type_description",
                                    "type": "string"
                                },
                                "type_name": {
                                    "description": "type_name string",
                                    "title": "get_universe_types_type_id_type_name",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "type_name",
                                "type_description",
                                "group_id",
                                "category_id"
                            ],
                            "title": "get_universe_types_type_id_ok",
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "Type not found",
                        "examples": {
                            "application/json": {
                                "error": "Type not found"
                            }
                        },
                        "schema": {
                            "description": "Type not found",
                            "properties": {
                                "error": {
                                    "description": "error message",
                                    "title": "get_universe_types_type_id_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_universe_types_type_id_not_found",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_universe_types_type_id_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_universe_types_type_id_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "summary": "Get type information",
                "tags": [
                    "Universe"
                ],
                "x-alternate-versions": [
                    "v1"
                ],
                "x-cached-seconds": 3600
            }
        },
        "/wars/": {
            "get": {
                "description": "Return a list of wars\n\n---\n\nAlternate route: `/v1/wars/`\n\nAlternate route: `/latest/wars/`\n\nAlternate route: `/dev/wars/`\n\n\n---\n\nThis route is cached for up to 3600 seconds",
                "operationId": "get_wars",
                "parameters": [
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "description": "Only return wars with ID smaller than this.",
                        "format": "int32",
                        "in": "query",
                        "name": "max_war_id",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of war IDs, 2000 at most, in decending order by war_id.",
                        "examples": {
                            "application/json": [
                                3,
                                2,
                                1
                            ]
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok array",
                            "items": {
                                "description": "200 ok integer",
                                "format": "int32",
                                "title": "get_wars_200_ok",
                                "type": "integer"
                            },
                            "title": "get_wars_ok",
                            "type": "array"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_wars_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_wars_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "summary": "List wars",
                "tags": [
                    "Wars"
                ],
                "x-alternate-versions": [
                    "dev",
                    "latest",
                    "v1"
                ],
                "x-cached-seconds": 3600
            }
        },
        "/wars/{war_id}/": {
            "get": {
                "description": "Return details about a war\n\n---\n\nAlternate route: `/v1/wars/{war_id}/`\n\nAlternate route: `/latest/wars/{war_id}/`\n\nAlternate route: `/dev/wars/{war_id}/`\n\n\n---\n\nThis route is cached for up to 3600 seconds",
                "operationId": "get_wars_war_id",
                "parameters": [
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "ID for a war",
                        "format": "int32",
                        "in": "path",
                        "name": "war_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Details about a war",
                        "examples": {
                            "application/json": {
                                "aggressor": {
                                    "corporation_id": 986665792,
                                    "isk_destroyed": 0,
                                    "ships_killed": 0
                                },
                                "declared": "2004-05-22T05:20:00Z",
                                "defender": {
                                    "corporation_id": 1001562011,
                                    "isk_destroyed": 0,
                                    "ships_killed": 0
                                },
                                "id": 1941,
                                "mutual": false,
                                "open_for_allies": false
                            }
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok object",
                            "properties": {
                                "aggressor": {
                                    "description": "The aggressor corporation or alliance that declared this war, only contains either corporation_id or alliance_id",
                                    "properties": {
                                        "alliance_id": {
                                            "description": "Alliance ID if and only if the aggressor is an alliance",
                                            "format": "int32",
                                            "title": "get_wars_war_id_alliance_id",
                                            "type": "integer"
                                        },
                                        "corporation_id": {
                                            "description": "Corporation ID if and only if the aggressor is a corporation",
                                            "format": "int32",
                                            "title": "get_wars_war_id_corporation_id",
                                            "type": "integer"
                                        },
                                        "isk_destroyed": {
                                            "description": "ISK value of ships the aggressor has destroyed",
                                            "format": "float",
                                            "title": "get_wars_war_id_isk_destroyed",
                                            "type": "number"
                                        },
                                        "ships_killed": {
                                            "description": "The number of ships the aggressor has killed",
                                            "format": "int32",
                                            "title": "get_wars_war_id_ships_killed",
                                            "type": "integer"
                                        }
                                    },
                                    "required": [
                                        "ships_killed",
                                        "isk_destroyed"
                                    ],
                                    "title": "get_wars_war_id_aggressor",
                                    "type": "object"
                                },
                                "allies": {
                                    "description": "allied corporations or alliances, each object contains either corporation_id or alliance_id",
                                    "items": {
                                        "description": "ally object",
                                        "properties": {
                                            "alliance_id": {
                                                "description": "Alliance ID if and only if this ally is an alliance",
                                                "format": "int32",
                                                "title": "get_wars_war_id_alliance_id",
                                                "type": "integer"
                                            },
                                            "corporation_id": {
                                                "description": "Corporation ID if and only if this ally is a corporation",
                                                "format": "int32",
                                                "title": "get_wars_war_id_corporation_id",
                                                "type": "integer"
                                            }
                                        },
                                        "title": "get_wars_war_id_ally",
                                        "type": "object"
                                    },
                                    "title": "get_wars_war_id_allies",
                                    "type": "array"
                                },
                                "declared": {
                                    "description": "Time that the war was declared",
                                    "format": "date-time",
                                    "title": "get_wars_war_id_declared",
                                    "type": "string"
                                },
                                "defender": {
                                    "description": "The defending corporation or alliance that declared this war, only contains either corporation_id or alliance_id",
                                    "properties": {
                                        "alliance_id": {
                                            "description": "Alliance ID if and only if the defender is an alliance",
                                            "format": "int32",
                                            "title": "get_wars_war_id_alliance_id",
                                            "type": "integer"
                                        },
                                        "corporation_id": {
                                            "description": "Corporation ID if and only if the defender is a corporation",
                                            "format": "int32",
                                            "title": "get_wars_war_id_corporation_id",
                                            "type": "integer"
                                        },
                                        "isk_destroyed": {
                                            "description": "ISK value of ships the defender has killed",
                                            "format": "float",
                                            "title": "get_wars_war_id_isk_destroyed",
                                            "type": "number"
                                        },
                                        "ships_killed": {
                                            "description": "The number of ships the defender has killed",
                                            "format": "int32",
                                            "title": "get_wars_war_id_ships_killed",
                                            "type": "integer"
                                        }
                                    },
                                    "required": [
                                        "ships_killed",
                                        "isk_destroyed"
                                    ],
                                    "title": "get_wars_war_id_defender",
                                    "type": "object"
                                },
                                "finished": {
                                    "description": "Time the war ended and shooting was no longer allowed",
                                    "format": "date-time",
                                    "title": "get_wars_war_id_finished",
                                    "type": "string"
                                },
                                "id": {
                                    "description": "ID of the specified war",
                                    "format": "int32",
                                    "title": "get_wars_war_id_id",
                                    "type": "integer"
                                },
                                "mutual": {
                                    "description": "Was the war declared mutual by both parties",
                                    "title": "get_wars_war_id_mutual",
                                    "type": "boolean"
                                },
                                "open_for_allies": {
                                    "description": "Is the war currently open for allies or not",
                                    "title": "get_wars_war_id_open_for_allies",
                                    "type": "boolean"
                                },
                                "retracted": {
                                    "description": "Time the war was retracted but both sides could still shoot each other",
                                    "format": "date-time",
                                    "title": "get_wars_war_id_retracted",
                                    "type": "string"
                                },
                                "started": {
                                    "description": "Time when the war started and both sides could shoot each other",
                                    "format": "date-time",
                                    "title": "get_wars_war_id_started",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "id",
                                "declared",
                                "mutual",
                                "open_for_allies",
                                "aggressor",
                                "defender"
                            ],
                            "title": "get_wars_war_id_ok",
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "War not found",
                        "examples": {
                            "application/json": {
                                "error": "Unprocessable entity message"
                            }
                        },
                        "schema": {
                            "description": "Unprocessable entity",
                            "properties": {
                                "error": {
                                    "description": "Unprocessable entity message",
                                    "title": "get_wars_war_id_422_unprocessable_entity",
                                    "type": "string"
                                }
                            },
                            "title": "get_wars_war_id_unprocessable_entity",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_wars_war_id_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_wars_war_id_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "summary": "Get war information",
                "tags": [
                    "Wars"
                ],
                "x-alternate-versions": [
                    "dev",
                    "latest",
                    "v1"
                ],
                "x-cached-seconds": 3600
            }
        },
        "/wars/{war_id}/killmails/": {
            "get": {
                "description": "Return a list of kills related to a war\n\n---\n\nAlternate route: `/v1/wars/{war_id}/killmails/`\n\nAlternate route: `/latest/wars/{war_id}/killmails/`\n\nAlternate route: `/dev/wars/{war_id}/killmails/`\n\n\n---\n\nThis route is cached for up to 3600 seconds",
                "operationId": "get_wars_war_id_killmails",
                "parameters": [
                    {
                        "default": "tranquility",
                        "description": "The server name you would like data from",
                        "enum": [
                            "tranquility",
                            "singularity"
                        ],
                        "in": "query",
                        "name": "datasource",
                        "type": "string"
                    },
                    {
                        "default": 1,
                        "description": "Which page to query, starting at 1, 2000 killmails per page.",
                        "format": "int32",
                        "in": "query",
                        "name": "page",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "description": "Client identifier, takes precedence over headers",
                        "in": "query",
                        "name": "user_agent",
                        "type": "string"
                    },
                    {
                        "description": "A valid war ID",
                        "format": "int32",
                        "in": "path",
                        "name": "war_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Client identifier, takes precedence over User-Agent",
                        "in": "header",
                        "name": "X-User-Agent",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of killmail IDs and hashes",
                        "examples": {
                            "application/json": [
                                {
                                    "killmail_hash": "8eef5e8fb6b88fe3407c489df33822b2e3b57a5e",
                                    "killmail_id": 2
                                },
                                {
                                    "killmail_hash": "b41ccb498ece33d64019f64c0db392aa3aa701fb",
                                    "killmail_id": 1
                                }
                            ]
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok array",
                            "items": {
                                "description": "200 ok object",
                                "properties": {
                                    "killmail_hash": {
                                        "description": "A hash of this killmail",
                                        "title": "get_wars_war_id_killmails_killmail_hash",
                                        "type": "string"
                                    },
                                    "killmail_id": {
                                        "description": "ID of this killmail",
                                        "format": "int32",
                                        "title": "get_wars_war_id_killmails_killmail_id",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "killmail_id",
                                    "killmail_hash"
                                ],
                                "title": "get_wars_war_id_killmails_200_ok",
                                "type": "object"
                            },
                            "title": "get_wars_war_id_killmails_ok",
                            "type": "array"
                        }
                    },
                    "422": {
                        "description": "War not found",
                        "examples": {
                            "application/json": {
                                "error": "Unprocessable entity message"
                            }
                        },
                        "schema": {
                            "description": "Unprocessable entity",
                            "properties": {
                                "error": {
                                    "description": "Unprocessable entity message",
                                    "title": "get_wars_war_id_killmails_422_unprocessable_entity",
                                    "type": "string"
                                }
                            },
                            "title": "get_wars_war_id_killmails_unprocessable_entity",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "uncaught exception: IOError('out of memory')"
                            }
                        },
                        "schema": {
                            "description": "Internal server error",
                            "properties": {
                                "error": {
                                    "description": "Internal server error message",
                                    "title": "get_wars_war_id_killmails_500_internal_server_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_wars_war_id_killmails_internal_server_error",
                            "type": "object"
                        }
                    }
                },
                "summary": "List kills for a war",
                "tags": [
                    "Wars"
                ],
                "x-alternate-versions": [
                    "dev",
                    "latest",
                    "v1"
                ],
                "x-cached-seconds": 3600
            }
        }
    },
    "produces": [
        "application/json"
    ],
    "schemes": [
        "https"
    ],
    "securityDefinitions": {
        "evesso": {
            "authorizationUrl": "https://login.eveonline.com/oauth/authorize",
            "flow": "implicit",
            "scopes": {
                "esi-assets.read_assets.v1": "EVE SSO scope esi-assets.read_assets.v1",
                "esi-bookmarks.read_character_bookmarks.v1": "EVE SSO scope esi-bookmarks.read_character_bookmarks.v1",
                "esi-calendar.read_calendar_events.v1": "EVE SSO scope esi-calendar.read_calendar_events.v1",
                "esi-characters.read_agents_research.v1": "EVE SSO scope esi-characters.read_agents_research.v1",
                "esi-characters.read_blueprints.v1": "EVE SSO scope esi-characters.read_blueprints.v1",
                "esi-characters.read_chat_channels.v1": "EVE SSO scope esi-characters.read_chat_channels.v1",
                "esi-characters.read_contacts.v1": "EVE SSO scope esi-characters.read_contacts.v1",
                "esi-characters.read_corporation_roles.v1": "EVE SSO scope esi-characters.read_corporation_roles.v1",
                "esi-characters.read_loyalty.v1": "EVE SSO scope esi-characters.read_loyalty.v1",
                "esi-characters.read_medals.v1": "EVE SSO scope esi-characters.read_medals.v1",
                "esi-characters.read_opportunities.v1": "EVE SSO scope esi-characters.read_opportunities.v1",
                "esi-characters.read_standings.v1": "EVE SSO scope esi-characters.read_standings.v1",
                "esi-characters.write_contacts.v1": "EVE SSO scope esi-characters.write_contacts.v1",
                "esi-clones.read_clones.v1": "EVE SSO scope esi-clones.read_clones.v1",
                "esi-corporations.read_corporation_membership.v1": "EVE SSO scope esi-corporations.read_corporation_membership.v1",
                "esi-corporations.read_structures.v1": "EVE SSO scope esi-corporations.read_structures.v1",
                "esi-corporations.write_structures.v1": "EVE SSO scope esi-corporations.write_structures.v1",
                "esi-fittings.read_fittings.v1": "EVE SSO scope esi-fittings.read_fittings.v1",
                "esi-fittings.write_fittings.v1": "EVE SSO scope esi-fittings.write_fittings.v1",
                "esi-fleets.read_fleet.v1": "EVE SSO scope esi-fleets.read_fleet.v1",
                "esi-fleets.write_fleet.v1": "EVE SSO scope esi-fleets.write_fleet.v1",
                "esi-industry.read_character_jobs.v1": "EVE SSO scope esi-industry.read_character_jobs.v1",
                "esi-killmails.read_killmails.v1": "EVE SSO scope esi-killmails.read_killmails.v1",
                "esi-mail.organize_mail.v1": "EVE SSO scope esi-mail.organize_mail.v1",
                "esi-mail.read_mail.v1": "EVE SSO scope esi-mail.read_mail.v1",
                "esi-mail.send_mail.v1": "EVE SSO scope esi-mail.send_mail.v1",
                "esi-markets.read_character_orders.v1": "EVE SSO scope esi-markets.read_character_orders.v1",
                "esi-markets.structure_markets.v1": "EVE SSO scope esi-markets.structure_markets.v1",
                "esi-planets.manage_planets.v1": "EVE SSO scope esi-planets.manage_planets.v1",
                "esi-search.search_structures.v1": "EVE SSO scope esi-search.search_structures.v1",
                "esi-skills.read_skillqueue.v1": "EVE SSO scope esi-skills.read_skillqueue.v1",
                "esi-skills.read_skills.v1": "EVE SSO scope esi-skills.read_skills.v1",
                "esi-ui.open_window.v1": "EVE SSO scope esi-ui.open_window.v1",
                "esi-ui.write_waypoint.v1": "EVE SSO scope esi-ui.write_waypoint.v1",
                "esi-universe.read_structures.v1": "EVE SSO scope esi-universe.read_structures.v1",
                "esi-wallet.read_character_wallet.v1": "EVE SSO scope esi-wallet.read_character_wallet.v1"
            },
            "type": "oauth2"
        }
    },
    "swagger": "2.0"
}
