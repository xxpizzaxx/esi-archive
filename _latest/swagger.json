{
    "basePath": "/",
    "definitions": {
        "forbidden": {
            "description": "Forbidden model",
            "properties": {
                "error": {
                    "description": "Forbidden message",
                    "type": "string"
                }
            },
            "title": "Forbidden",
            "type": "object"
        },
        "internal_server_error": {
            "description": "Internal server error model",
            "properties": {
                "error": {
                    "description": "Internal server error message",
                    "type": "string"
                }
            },
            "title": "Internal server error",
            "type": "object"
        }
    },
    "host": "esi.tech.ccp.is",
    "info": {
        "description": "An OpenAPI for EVE Online",
        "title": "EVE Swagger Interface",
        "version": "0.5.2"
    },
    "parameters": {
        "X-User-Agent": {
            "description": "Client identifier, takes precedence over User-Agent",
            "in": "header",
            "name": "X-User-Agent",
            "type": "string"
        },
        "character_id": {
            "description": "An EVE character ID",
            "format": "int32",
            "in": "path",
            "name": "character_id",
            "required": true,
            "type": "integer"
        },
        "datasource": {
            "default": "tranquility",
            "description": "The server name you would like data from",
            "enum": [
                "tranquility",
                "singularity"
            ],
            "in": "query",
            "name": "datasource",
            "type": "string"
        },
        "language": {
            "default": "en-us",
            "description": "Language to use in the response",
            "enum": [
                "de",
                "en-us",
                "fr",
                "ja",
                "ru",
                "zh"
            ],
            "in": "query",
            "name": "language",
            "type": "string"
        },
        "page": {
            "default": 1,
            "description": "Which page of results to return",
            "format": "int32",
            "in": "query",
            "name": "page",
            "type": "integer"
        },
        "token": {
            "description": "Access token to use if unable to set a header",
            "in": "query",
            "name": "token",
            "type": "string"
        },
        "user_agent": {
            "description": "Client identifier, takes precedence over headers",
            "in": "query",
            "name": "user_agent",
            "type": "string"
        }
    },
    "paths": {
        "/v1/characters/affiliation/": {
            "post": {
                "description": "Bulk lookup of character IDs to corporation, alliance and faction\n\n---\n\nThis route is cached for up to 3600 seconds",
                "operationId": "post_characters_affiliation",
                "parameters": [
                    {
                        "description": "The character IDs to fetch affiliations for",
                        "in": "body",
                        "name": "characters",
                        "required": true,
                        "schema": {
                            "description": "characters array",
                            "items": {
                                "description": "character integer",
                                "format": "int32",
                                "title": "post_characters_affiliation_character",
                                "type": "integer"
                            },
                            "maxItems": 1000,
                            "minItems": 1,
                            "title": "post_characters_affiliation_characters",
                            "type": "array",
                            "uniqueItems": true
                        }
                    },
                    {
                        "$ref": "#/parameters/datasource"
                    },
                    {
                        "$ref": "#/parameters/user_agent"
                    },
                    {
                        "$ref": "#/parameters/X-User-Agent"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Character corporation, alliance and faction IDs",
                        "examples": {
                            "application/json": [
                                {
                                    "alliance_id": 434243723,
                                    "character_id": 95538921,
                                    "corporation_id": 109299958
                                }
                            ]
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok array",
                            "items": {
                                "description": "200 ok object",
                                "properties": {
                                    "alliance_id": {
                                        "description": "The character's alliance ID, if their corporation is in an alliance",
                                        "format": "int32",
                                        "title": "post_characters_affiliation_alliance_id",
                                        "type": "integer"
                                    },
                                    "character_id": {
                                        "description": "The character's ID",
                                        "format": "int32",
                                        "title": "post_characters_affiliation_character_id",
                                        "type": "integer"
                                    },
                                    "corporation_id": {
                                        "description": "The character's corporation ID",
                                        "format": "int32",
                                        "title": "post_characters_affiliation_corporation_id",
                                        "type": "integer"
                                    },
                                    "faction_id": {
                                        "description": "The character's faction ID, if their corporation is in a faction",
                                        "format": "int32",
                                        "title": "post_characters_affiliation_faction_id",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "character_id",
                                    "corporation_id"
                                ],
                                "title": "post_characters_affiliation_200_ok",
                                "type": "object"
                            },
                            "maxItems": 1000,
                            "title": "post_characters_affiliation_ok",
                            "type": "array"
                        }
                    },
                    "422": {
                        "description": "No valid character IDs found",
                        "examples": {
                            "application/json": {
                                "error": "Unprocessable entity message"
                            }
                        },
                        "schema": {
                            "description": "Unprocessable entity",
                            "properties": {
                                "error": {
                                    "description": "Unprocessable entity message",
                                    "title": "post_characters_affiliation_422_unprocessable_entity",
                                    "type": "string"
                                }
                            },
                            "title": "post_characters_affiliation_unprocessable_entity",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "Internal server error message"
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/internal_server_error"
                        }
                    }
                },
                "summary": "Character affiliation",
                "tags": [
                    "Character"
                ],
                "x-alternate-versions": [
                    "dev",
                    "legacy",
                    "v1"
                ],
                "x-cached-seconds": 3600
            }
        },
        "/v1/characters/names/": {
            "get": {
                "description": "Resolve a set of character IDs to character names\n\n---\n\nThis route is cached for up to 3600 seconds",
                "operationId": "get_characters_names",
                "parameters": [
                    {
                        "description": "A comma separated list of character IDs",
                        "in": "query",
                        "items": {
                            "format": "int64",
                            "type": "integer"
                        },
                        "maxItems": 1000,
                        "minItems": 1,
                        "name": "character_ids",
                        "required": true,
                        "type": "array"
                    },
                    {
                        "$ref": "#/parameters/datasource"
                    },
                    {
                        "$ref": "#/parameters/user_agent"
                    },
                    {
                        "$ref": "#/parameters/X-User-Agent"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of id/name associations",
                        "examples": {
                            "application/json": [
                                {
                                    "character_id": 95465499,
                                    "character_name": "CCP Bartender"
                                }
                            ]
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok array",
                            "items": {
                                "description": "200 ok object",
                                "properties": {
                                    "character_id": {
                                        "description": "character_id integer",
                                        "format": "int64",
                                        "title": "get_characters_names_character_id",
                                        "type": "integer"
                                    },
                                    "character_name": {
                                        "description": "character_name string",
                                        "title": "get_characters_names_character_name",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "character_id",
                                    "character_name"
                                ],
                                "title": "get_characters_names_200_ok",
                                "type": "object"
                            },
                            "maxItems": 1000,
                            "title": "get_characters_names_ok",
                            "type": "array"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "Internal server error message"
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/internal_server_error"
                        }
                    }
                },
                "summary": "Get character names",
                "tags": [
                    "Character"
                ],
                "x-alternate-versions": [
                    "dev",
                    "legacy",
                    "v1"
                ],
                "x-cached-seconds": 3600
            }
        },
        "/v1/characters/{character_id}/agents_research/": {
            "get": {
                "description": "Return a list of agents research information for a character. The formula for finding the current research points with an agent is: currentPoints = remainderPoints + pointsPerDay * days(currentTime - researchStartDate)\n\n---\n\nThis route is cached for up to 3600 seconds",
                "operationId": "get_characters_character_id_agents_research",
                "parameters": [
                    {
                        "$ref": "#/parameters/character_id"
                    },
                    {
                        "$ref": "#/parameters/datasource"
                    },
                    {
                        "$ref": "#/parameters/token"
                    },
                    {
                        "$ref": "#/parameters/user_agent"
                    },
                    {
                        "$ref": "#/parameters/X-User-Agent"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of agents research information",
                        "examples": {
                            "application/json": [
                                {
                                    "agent_id": 3009358,
                                    "points_per_day": 53.5346162146776,
                                    "remainder_points": 53604.0634303189,
                                    "skill_type_id": 11450,
                                    "started_at": "2017-03-23T14:47:00Z"
                                }
                            ]
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok array",
                            "items": {
                                "description": "200 ok object",
                                "properties": {
                                    "agent_id": {
                                        "description": "agent_id integer",
                                        "format": "int32",
                                        "title": "get_characters_character_id_agents_research_agent_id",
                                        "type": "integer"
                                    },
                                    "points_per_day": {
                                        "description": "points_per_day number",
                                        "format": "float",
                                        "title": "get_characters_character_id_agents_research_points_per_day",
                                        "type": "number"
                                    },
                                    "remainder_points": {
                                        "description": "remainder_points number",
                                        "format": "float",
                                        "title": "get_characters_character_id_agents_research_remainder_points",
                                        "type": "number"
                                    },
                                    "skill_type_id": {
                                        "description": "skill_type_id integer",
                                        "format": "int32",
                                        "title": "get_characters_character_id_agents_research_skill_type_id",
                                        "type": "integer"
                                    },
                                    "started_at": {
                                        "description": "started_at string",
                                        "format": "date-time",
                                        "title": "get_characters_character_id_agents_research_started_at",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "agent_id",
                                    "skill_type_id",
                                    "started_at",
                                    "points_per_day",
                                    "remainder_points"
                                ],
                                "title": "get_characters_character_id_agents_research_200_ok",
                                "type": "object"
                            },
                            "maxItems": 1000,
                            "title": "get_characters_character_id_agents_research_ok",
                            "type": "array"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "examples": {
                            "application/json": {
                                "error": "Forbidden message"
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/forbidden"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "Internal server error message"
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/internal_server_error"
                        }
                    }
                },
                "security": [
                    {
                        "evesso": [
                            "esi-characters.read_agents_research.v1"
                        ]
                    }
                ],
                "summary": "Get agents research",
                "tags": [
                    "Character"
                ],
                "x-alternate-versions": [
                    "dev",
                    "legacy",
                    "v1"
                ],
                "x-cached-seconds": 3600
            }
        },
        "/v1/characters/{character_id}/blueprints/": {
            "get": {
                "description": "Return a list of blueprints the character has\n\n---\n\nThis route is cached for up to 3600 seconds",
                "operationId": "get_characters_character_id_blueprints",
                "parameters": [
                    {
                        "$ref": "#/parameters/character_id"
                    },
                    {
                        "$ref": "#/parameters/datasource"
                    },
                    {
                        "$ref": "#/parameters/token"
                    },
                    {
                        "$ref": "#/parameters/user_agent"
                    },
                    {
                        "$ref": "#/parameters/X-User-Agent"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of blueprints",
                        "examples": {
                            "application/json": [
                                {
                                    "item_id": 1000000010495,
                                    "location_flag": "Hangar",
                                    "location_id": 60014719,
                                    "material_efficiency": 0,
                                    "quantity": 1,
                                    "runs": -1,
                                    "time_efficiency": 0,
                                    "type_id": 691
                                }
                            ]
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok array",
                            "items": {
                                "description": "200 ok object",
                                "properties": {
                                    "item_id": {
                                        "description": "Unique ID for this item. The ID of an item is stable if that item is not repackaged, stacked, detached from a stack, assembled, or otherwise altered. If an item is changed in one of these ways, then the ID will also change (see notes below).",
                                        "format": "int64",
                                        "title": "get_characters_character_id_blueprints_item_id",
                                        "type": "integer"
                                    },
                                    "location_flag": {
                                        "description": "Indicates something about this item's storage location. The flag is used to differentiate between hangar divisions, drone bay, fitting location, and similar.",
                                        "enum": [
                                            "AutoFit",
                                            "Cargo",
                                            "CorpseBay",
                                            "DroneBay",
                                            "FleetHangar",
                                            "Deliveries",
                                            "HiddenModifiers",
                                            "Hangar",
                                            "HangarAll",
                                            "LoSlot0",
                                            "LoSlot1",
                                            "LoSlot2",
                                            "LoSlot3",
                                            "LoSlot4",
                                            "LoSlot5",
                                            "LoSlot6",
                                            "LoSlot7",
                                            "MedSlot0",
                                            "MedSlot1",
                                            "MedSlot2",
                                            "MedSlot3",
                                            "MedSlot4",
                                            "MedSlot5",
                                            "MedSlot6",
                                            "MedSlot7",
                                            "HiSlot0",
                                            "HiSlot1",
                                            "HiSlot2",
                                            "HiSlot3",
                                            "HiSlot4",
                                            "HiSlot5",
                                            "HiSlot6",
                                            "HiSlot7",
                                            "AssetSafety",
                                            "Locked",
                                            "Unlocked",
                                            "Implant",
                                            "QuafeBay",
                                            "RigSlot0",
                                            "RigSlot1",
                                            "RigSlot2",
                                            "RigSlot3",
                                            "RigSlot4",
                                            "RigSlot5",
                                            "RigSlot6",
                                            "RigSlot7",
                                            "ShipHangar",
                                            "SpecializedFuelBay",
                                            "SpecializedOreHold",
                                            "SpecializedGasHold",
                                            "SpecializedMineralHold",
                                            "SpecializedSalvageHold",
                                            "SpecializedShipHold",
                                            "SpecializedSmallShipHold",
                                            "SpecializedMediumShipHold",
                                            "SpecializedLargeShipHold",
                                            "SpecializedIndustrialShipHold",
                                            "SpecializedAmmoHold",
                                            "SpecializedCommandCenterHold",
                                            "SpecializedPlanetaryCommoditiesHold",
                                            "SpecializedMaterialBay",
                                            "SubSystemSlot0",
                                            "SubSystemSlot1",
                                            "SubSystemSlot2",
                                            "SubSystemSlot3",
                                            "SubSystemSlot4",
                                            "SubSystemSlot5",
                                            "SubSystemSlot6",
                                            "SubSystemSlot7",
                                            "FighterBay",
                                            "FighterTube0",
                                            "FighterTube1",
                                            "FighterTube2",
                                            "FighterTube3",
                                            "FighterTube4",
                                            "Module"
                                        ],
                                        "title": "get_characters_character_id_blueprints_location_flag",
                                        "type": "string"
                                    },
                                    "location_id": {
                                        "description": "References a solar system, station or itemID if this blueprint is located within a container. If an itemID the Character - AssetList API must be queried to find the container using the itemID, from which the correct location of the Blueprint can be derived.",
                                        "format": "int64",
                                        "title": "get_characters_character_id_blueprints_location_id",
                                        "type": "integer"
                                    },
                                    "material_efficiency": {
                                        "description": "Material Efficiency Level of the blueprint, can be any integer between 0 and 10.",
                                        "format": "int32",
                                        "title": "get_characters_character_id_blueprints_material_efficiency",
                                        "type": "integer"
                                    },
                                    "quantity": {
                                        "description": "Typically will be -1 or -2 designating a singleton item, where -1 is an original and -2 is a copy. It can be a positive integer if it is a stack of blueprint originals fresh from the market (no activities performed on them yet).",
                                        "format": "int32",
                                        "title": "get_characters_character_id_blueprints_quantity",
                                        "type": "integer"
                                    },
                                    "runs": {
                                        "description": "Number of runs remaining if the blueprint is a copy, -1 if it is an original.",
                                        "format": "int32",
                                        "title": "get_characters_character_id_blueprints_runs",
                                        "type": "integer"
                                    },
                                    "time_efficiency": {
                                        "description": "Time Efficiency Level of the blueprint, can be any even integer between 0 and 20.",
                                        "format": "int32",
                                        "title": "get_characters_character_id_blueprints_time_efficiency",
                                        "type": "integer"
                                    },
                                    "type_id": {
                                        "description": "type_id integer",
                                        "format": "int32",
                                        "title": "get_characters_character_id_blueprints_type_id",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "item_id",
                                    "type_id",
                                    "location_id",
                                    "location_flag",
                                    "quantity",
                                    "time_efficiency",
                                    "material_efficiency",
                                    "runs"
                                ],
                                "title": "get_characters_character_id_blueprints_200_ok",
                                "type": "object"
                            },
                            "maxItems": 10000,
                            "title": "get_characters_character_id_blueprints_ok",
                            "type": "array"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "examples": {
                            "application/json": {
                                "error": "Forbidden message"
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/forbidden"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "Internal server error message"
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/internal_server_error"
                        }
                    }
                },
                "security": [
                    {
                        "evesso": [
                            "esi-characters.read_blueprints.v1"
                        ]
                    }
                ],
                "summary": "Get blueprints",
                "tags": [
                    "Character"
                ],
                "x-alternate-versions": [
                    "dev",
                    "legacy",
                    "v1"
                ],
                "x-cached-seconds": 3600
            }
        },
        "/v1/characters/{character_id}/bookmarks/": {
            "get": {
                "description": "List your character's personal bookmarks\n\n---\n\nThis route is cached for up to 3600 seconds",
                "operationId": "get_characters_character_id_bookmarks",
                "parameters": [
                    {
                        "$ref": "#/parameters/character_id"
                    },
                    {
                        "$ref": "#/parameters/datasource"
                    },
                    {
                        "$ref": "#/parameters/token"
                    },
                    {
                        "$ref": "#/parameters/user_agent"
                    },
                    {
                        "$ref": "#/parameters/X-User-Agent"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of bookmarks",
                        "examples": {
                            "application/json": [
                                {
                                    "bookmark_id": 32,
                                    "create_date": "2016-08-09T11:57:47Z",
                                    "creator_id": 90000001,
                                    "folder_id": 5,
                                    "memo": "aoeu ( Citadel )",
                                    "note": "",
                                    "owner_id": 90000001,
                                    "target": {
                                        "item": {
                                            "item_id": 1000000012668,
                                            "type_id": 35832
                                        },
                                        "location_id": 30000005
                                    }
                                }
                            ]
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok array",
                            "items": {
                                "description": "200 ok object",
                                "properties": {
                                    "bookmark_id": {
                                        "description": "bookmark_id integer",
                                        "format": "int64",
                                        "title": "get_characters_character_id_bookmarks_bookmark_id",
                                        "type": "integer"
                                    },
                                    "create_date": {
                                        "description": "create_date string",
                                        "format": "date-time",
                                        "title": "get_characters_character_id_bookmarks_create_date",
                                        "type": "string"
                                    },
                                    "creator_id": {
                                        "description": "creator_id integer",
                                        "format": "int32",
                                        "title": "get_characters_character_id_bookmarks_creator_id",
                                        "type": "integer"
                                    },
                                    "folder_id": {
                                        "description": "folder_id integer",
                                        "format": "int32",
                                        "title": "get_characters_character_id_bookmarks_folder_id",
                                        "type": "integer"
                                    },
                                    "memo": {
                                        "description": "memo string",
                                        "title": "get_characters_character_id_bookmarks_memo",
                                        "type": "string"
                                    },
                                    "note": {
                                        "description": "note string",
                                        "title": "get_characters_character_id_bookmarks_note",
                                        "type": "string"
                                    },
                                    "owner_id": {
                                        "description": "owner_id integer",
                                        "format": "int32",
                                        "title": "get_characters_character_id_bookmarks_owner_id",
                                        "type": "integer"
                                    },
                                    "target": {
                                        "description": "target object",
                                        "properties": {
                                            "coordinates": {
                                                "description": "coordinates object",
                                                "properties": {
                                                    "x": {
                                                        "description": "x number",
                                                        "format": "double",
                                                        "title": "get_characters_character_id_bookmarks_x",
                                                        "type": "number"
                                                    },
                                                    "y": {
                                                        "description": "y number",
                                                        "format": "double",
                                                        "title": "get_characters_character_id_bookmarks_y",
                                                        "type": "number"
                                                    },
                                                    "z": {
                                                        "description": "z number",
                                                        "format": "double",
                                                        "title": "get_characters_character_id_bookmarks_z",
                                                        "type": "number"
                                                    }
                                                },
                                                "required": [
                                                    "x",
                                                    "y",
                                                    "z"
                                                ],
                                                "title": "get_characters_character_id_bookmarks_coordinates",
                                                "type": "object"
                                            },
                                            "item": {
                                                "description": "item object",
                                                "properties": {
                                                    "item_id": {
                                                        "description": "item_id integer",
                                                        "format": "int64",
                                                        "title": "get_characters_character_id_bookmarks_item_id",
                                                        "type": "integer"
                                                    },
                                                    "type_id": {
                                                        "description": "type_id integer",
                                                        "format": "int32",
                                                        "title": "get_characters_character_id_bookmarks_type_id",
                                                        "type": "integer"
                                                    }
                                                },
                                                "required": [
                                                    "item_id",
                                                    "type_id"
                                                ],
                                                "title": "get_characters_character_id_bookmarks_item",
                                                "type": "object"
                                            },
                                            "location_id": {
                                                "description": "location_id integer",
                                                "format": "int64",
                                                "title": "get_characters_character_id_bookmarks_location_id",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "location_id"
                                        ],
                                        "title": "get_characters_character_id_bookmarks_target",
                                        "type": "object"
                                    }
                                },
                                "required": [
                                    "bookmark_id",
                                    "creator_id",
                                    "owner_id",
                                    "create_date",
                                    "memo",
                                    "note",
                                    "target"
                                ],
                                "title": "get_characters_character_id_bookmarks_200_ok",
                                "type": "object"
                            },
                            "maxItems": 13000,
                            "title": "get_characters_character_id_bookmarks_ok",
                            "type": "array"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "examples": {
                            "application/json": {
                                "error": "Forbidden message"
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/forbidden"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "Internal server error message"
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/internal_server_error"
                        }
                    }
                },
                "security": [
                    {
                        "evesso": [
                            "esi-bookmarks.read_character_bookmarks.v1"
                        ]
                    }
                ],
                "summary": "List bookmarks",
                "tags": [
                    "Bookmarks"
                ],
                "x-alternate-versions": [
                    "dev",
                    "legacy",
                    "v1"
                ],
                "x-cached-seconds": 3600
            }
        },
        "/v1/characters/{character_id}/bookmarks/folders/": {
            "get": {
                "description": "List your character's personal bookmark folders\n\n---\n\nThis route is cached for up to 3600 seconds",
                "operationId": "get_characters_character_id_bookmarks_folders",
                "parameters": [
                    {
                        "$ref": "#/parameters/character_id"
                    },
                    {
                        "$ref": "#/parameters/datasource"
                    },
                    {
                        "$ref": "#/parameters/token"
                    },
                    {
                        "$ref": "#/parameters/user_agent"
                    },
                    {
                        "$ref": "#/parameters/X-User-Agent"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of bookmark folders",
                        "examples": {
                            "application/json": [
                                {
                                    "folder_id": 5,
                                    "name": "Icecream",
                                    "owner_id": 90000001
                                }
                            ]
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok array",
                            "items": {
                                "description": "200 ok object",
                                "properties": {
                                    "folder_id": {
                                        "description": "folder_id integer",
                                        "format": "int32",
                                        "title": "get_characters_character_id_bookmarks_folders_folder_id",
                                        "type": "integer"
                                    },
                                    "name": {
                                        "description": "name string",
                                        "title": "get_characters_character_id_bookmarks_folders_name",
                                        "type": "string"
                                    },
                                    "owner_id": {
                                        "description": "owner_id integer",
                                        "format": "int32",
                                        "title": "get_characters_character_id_bookmarks_folders_owner_id",
                                        "type": "integer"
                                    }
                                },
                                "title": "get_characters_character_id_bookmarks_folders_200_ok",
                                "type": "object"
                            },
                            "maxItems": 10000,
                            "title": "get_characters_character_id_bookmarks_folders_ok",
                            "type": "array"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "examples": {
                            "application/json": {
                                "error": "Forbidden message"
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/forbidden"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "Internal server error message"
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/internal_server_error"
                        }
                    }
                },
                "security": [
                    {
                        "evesso": [
                            "esi-bookmarks.read_character_bookmarks.v1"
                        ]
                    }
                ],
                "summary": "List bookmark folders",
                "tags": [
                    "Bookmarks"
                ],
                "x-alternate-versions": [
                    "dev",
                    "legacy",
                    "v1"
                ],
                "x-cached-seconds": 3600
            }
        },
        "/v1/characters/{character_id}/chat_channels/": {
            "get": {
                "description": "Return chat channels that a character is the owner or an operator of\n\n---\n\nThis route is cached for up to 300 seconds",
                "operationId": "get_characters_character_id_chat_channels",
                "parameters": [
                    {
                        "$ref": "#/parameters/character_id"
                    },
                    {
                        "$ref": "#/parameters/datasource"
                    },
                    {
                        "$ref": "#/parameters/token"
                    },
                    {
                        "$ref": "#/parameters/user_agent"
                    },
                    {
                        "$ref": "#/parameters/X-User-Agent"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of chat channels",
                        "examples": {
                            "application/json": [
                                {
                                    "allowed": [],
                                    "blocked": [],
                                    "channel_id": -69329950,
                                    "comparison_key": "players'haven",
                                    "has_password": false,
                                    "motd": "<b>Feed pineapples to the cats!</b>",
                                    "muted": [],
                                    "name": "Players' Haven",
                                    "operators": [],
                                    "owner_id": 95578451
                                }
                            ]
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok array",
                            "items": {
                                "description": "200 ok object",
                                "properties": {
                                    "allowed": {
                                        "description": "allowed array",
                                        "items": {
                                            "description": "allowed object",
                                            "properties": {
                                                "accessor_id": {
                                                    "description": "ID of an allowed channel member",
                                                    "format": "int32",
                                                    "title": "get_characters_character_id_chat_channels_accessor_id",
                                                    "type": "integer"
                                                },
                                                "accessor_type": {
                                                    "description": "accessor_type string",
                                                    "enum": [
                                                        "character",
                                                        "corporation",
                                                        "alliance"
                                                    ],
                                                    "title": "get_characters_character_id_chat_channels_accessor_type",
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "accessor_id",
                                                "accessor_type"
                                            ],
                                            "title": "get_characters_character_id_chat_channels_allowed",
                                            "type": "object"
                                        },
                                        "maxItems": 1000,
                                        "title": "get_characters_character_id_chat_channels_allowed",
                                        "type": "array"
                                    },
                                    "blocked": {
                                        "description": "blocked array",
                                        "items": {
                                            "description": "blocked object",
                                            "properties": {
                                                "accessor_id": {
                                                    "description": "ID of a blocked channel member",
                                                    "format": "int32",
                                                    "title": "get_characters_character_id_chat_channels_accessor_id",
                                                    "type": "integer"
                                                },
                                                "accessor_type": {
                                                    "description": "accessor_type string",
                                                    "enum": [
                                                        "character",
                                                        "corporation",
                                                        "alliance"
                                                    ],
                                                    "title": "get_characters_character_id_chat_channels_accessor_type",
                                                    "type": "string"
                                                },
                                                "end_at": {
                                                    "description": "Time at which this accessor will no longer be blocked",
                                                    "format": "date-time",
                                                    "title": "get_characters_character_id_chat_channels_end_at",
                                                    "type": "string"
                                                },
                                                "reason": {
                                                    "description": "Reason this accessor is blocked",
                                                    "title": "get_characters_character_id_chat_channels_reason",
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "accessor_id",
                                                "accessor_type"
                                            ],
                                            "title": "get_characters_character_id_chat_channels_blocked",
                                            "type": "object"
                                        },
                                        "maxItems": 1000,
                                        "title": "get_characters_character_id_chat_channels_blocked",
                                        "type": "array"
                                    },
                                    "channel_id": {
                                        "description": "Unique channel ID. Always negative for player-created channels. Permanent (CCP created) channels have a positive ID, but don't appear in the API",
                                        "format": "int32",
                                        "title": "get_characters_character_id_chat_channels_channel_id",
                                        "type": "integer"
                                    },
                                    "comparison_key": {
                                        "description": "Normalized, unique string used to compare channel names",
                                        "title": "get_characters_character_id_chat_channels_comparison_key",
                                        "type": "string"
                                    },
                                    "has_password": {
                                        "description": "Whether this is a password protected channel",
                                        "title": "get_characters_character_id_chat_channels_has_password",
                                        "type": "boolean"
                                    },
                                    "motd": {
                                        "description": "Message of the day for this channel",
                                        "title": "get_characters_character_id_chat_channels_motd",
                                        "type": "string"
                                    },
                                    "muted": {
                                        "description": "muted array",
                                        "items": {
                                            "description": "muted object",
                                            "properties": {
                                                "accessor_id": {
                                                    "description": "ID of a muted channel member",
                                                    "format": "int32",
                                                    "title": "get_characters_character_id_chat_channels_accessor_id",
                                                    "type": "integer"
                                                },
                                                "accessor_type": {
                                                    "description": "accessor_type string",
                                                    "enum": [
                                                        "character",
                                                        "corporation",
                                                        "alliance"
                                                    ],
                                                    "title": "get_characters_character_id_chat_channels_accessor_type",
                                                    "type": "string"
                                                },
                                                "end_at": {
                                                    "description": "Time at which this accessor will no longer be muted",
                                                    "format": "date-time",
                                                    "title": "get_characters_character_id_chat_channels_end_at",
                                                    "type": "string"
                                                },
                                                "reason": {
                                                    "description": "Reason this accessor is muted",
                                                    "title": "get_characters_character_id_chat_channels_reason",
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "accessor_id",
                                                "accessor_type"
                                            ],
                                            "title": "get_characters_character_id_chat_channels_muted",
                                            "type": "object"
                                        },
                                        "maxItems": 1000,
                                        "title": "get_characters_character_id_chat_channels_muted",
                                        "type": "array"
                                    },
                                    "name": {
                                        "description": "Displayed name of channel",
                                        "title": "get_characters_character_id_chat_channels_name",
                                        "type": "string"
                                    },
                                    "operators": {
                                        "description": "operators array",
                                        "items": {
                                            "description": "operator object",
                                            "properties": {
                                                "accessor_id": {
                                                    "description": "ID of a channel operator",
                                                    "format": "int32",
                                                    "title": "get_characters_character_id_chat_channels_accessor_id",
                                                    "type": "integer"
                                                },
                                                "accessor_type": {
                                                    "description": "accessor_type string",
                                                    "enum": [
                                                        "character",
                                                        "corporation",
                                                        "alliance"
                                                    ],
                                                    "title": "get_characters_character_id_chat_channels_accessor_type",
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "accessor_id",
                                                "accessor_type"
                                            ],
                                            "title": "get_characters_character_id_chat_channels_operator",
                                            "type": "object"
                                        },
                                        "maxItems": 1000,
                                        "title": "get_characters_character_id_chat_channels_operators",
                                        "type": "array"
                                    },
                                    "owner_id": {
                                        "description": "owner_id integer",
                                        "format": "int32",
                                        "title": "get_characters_character_id_chat_channels_owner_id",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "channel_id",
                                    "name",
                                    "owner_id",
                                    "comparison_key",
                                    "has_password",
                                    "motd",
                                    "allowed",
                                    "operators",
                                    "blocked",
                                    "muted"
                                ],
                                "title": "get_characters_character_id_chat_channels_200_ok",
                                "type": "object"
                            },
                            "maxItems": 1000,
                            "title": "get_characters_character_id_chat_channels_ok",
                            "type": "array"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "examples": {
                            "application/json": {
                                "error": "Forbidden message"
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/forbidden"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "Internal server error message"
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/internal_server_error"
                        }
                    }
                },
                "security": [
                    {
                        "evesso": [
                            "esi-characters.read_chat_channels.v1"
                        ]
                    }
                ],
                "summary": "Get chat channels",
                "tags": [
                    "Character"
                ],
                "x-alternate-versions": [
                    "dev",
                    "legacy",
                    "v1"
                ],
                "x-cached-seconds": 300
            }
        },
        "/v1/characters/{character_id}/contacts/": {
            "delete": {
                "description": "Bulk delete contacts\n\n---\n",
                "operationId": "delete_characters_character_id_contacts",
                "parameters": [
                    {
                        "$ref": "#/parameters/character_id"
                    },
                    {
                        "description": "A list of contacts to delete",
                        "in": "body",
                        "name": "contact_ids",
                        "required": true,
                        "schema": {
                            "description": "contact_ids array",
                            "items": {
                                "description": "ID of the contact to delete",
                                "format": "int32",
                                "title": "delete_characters_character_id_contacts_contact_id",
                                "type": "integer"
                            },
                            "maxItems": 100,
                            "minItems": 1,
                            "title": "delete_characters_character_id_contacts_contact_ids",
                            "type": "array"
                        }
                    },
                    {
                        "$ref": "#/parameters/datasource"
                    },
                    {
                        "$ref": "#/parameters/token"
                    },
                    {
                        "$ref": "#/parameters/user_agent"
                    },
                    {
                        "$ref": "#/parameters/X-User-Agent"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Contacts deleted"
                    },
                    "403": {
                        "description": "Forbidden",
                        "examples": {
                            "application/json": {
                                "error": "Forbidden message"
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/forbidden"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "Internal server error message"
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/internal_server_error"
                        }
                    }
                },
                "security": [
                    {
                        "evesso": [
                            "esi-characters.write_contacts.v1"
                        ]
                    }
                ],
                "summary": "Delete contacts",
                "tags": [
                    "Contacts"
                ],
                "x-alternate-versions": [
                    "legacy",
                    "v1"
                ]
            },
            "get": {
                "description": "Return contacts of a character\n\n---\n\nThis route is cached for up to 300 seconds",
                "operationId": "get_characters_character_id_contacts",
                "parameters": [
                    {
                        "$ref": "#/parameters/character_id"
                    },
                    {
                        "$ref": "#/parameters/datasource"
                    },
                    {
                        "$ref": "#/parameters/page"
                    },
                    {
                        "$ref": "#/parameters/token"
                    },
                    {
                        "$ref": "#/parameters/user_agent"
                    },
                    {
                        "$ref": "#/parameters/X-User-Agent"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of contacts",
                        "examples": {
                            "application/json": [
                                {
                                    "contact_id": 123,
                                    "contact_type": "character",
                                    "is_blocked": true,
                                    "is_watched": true,
                                    "standing": 10.0
                                }
                            ]
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok array",
                            "items": {
                                "description": "200 ok object",
                                "properties": {
                                    "contact_id": {
                                        "description": "contact_id integer",
                                        "format": "int32",
                                        "title": "get_characters_character_id_contacts_contact_id",
                                        "type": "integer"
                                    },
                                    "contact_type": {
                                        "description": "contact_type string",
                                        "enum": [
                                            "character",
                                            "corporation",
                                            "alliance",
                                            "faction"
                                        ],
                                        "title": "get_characters_character_id_contacts_contact_type",
                                        "type": "string"
                                    },
                                    "is_blocked": {
                                        "description": "Whether this contact is in the blocked list. Note a missing value denotes unknown, not true or false",
                                        "title": "get_characters_character_id_contacts_is_blocked",
                                        "type": "boolean"
                                    },
                                    "is_watched": {
                                        "description": "Whether this contact is being watched",
                                        "title": "get_characters_character_id_contacts_is_watched",
                                        "type": "boolean"
                                    },
                                    "label_id": {
                                        "description": "Custom label of the contact",
                                        "format": "int64",
                                        "title": "get_characters_character_id_contacts_label_id",
                                        "type": "integer"
                                    },
                                    "standing": {
                                        "description": "Standing of the contact",
                                        "format": "float",
                                        "title": "get_characters_character_id_contacts_standing",
                                        "type": "number"
                                    }
                                },
                                "required": [
                                    "standing",
                                    "contact_type",
                                    "contact_id"
                                ],
                                "title": "get_characters_character_id_contacts_200_ok",
                                "type": "object"
                            },
                            "maxItems": 1024,
                            "title": "get_characters_character_id_contacts_ok",
                            "type": "array"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "examples": {
                            "application/json": {
                                "error": "Forbidden message"
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/forbidden"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "Internal server error message"
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/internal_server_error"
                        }
                    }
                },
                "security": [
                    {
                        "evesso": [
                            "esi-characters.read_contacts.v1"
                        ]
                    }
                ],
                "summary": "Get contacts",
                "tags": [
                    "Contacts"
                ],
                "x-alternate-versions": [
                    "dev",
                    "legacy",
                    "v1"
                ],
                "x-cached-seconds": 300
            },
            "post": {
                "description": "Bulk add contacts with same settings\n\n---\n",
                "operationId": "post_characters_character_id_contacts",
                "parameters": [
                    {
                        "$ref": "#/parameters/character_id"
                    },
                    {
                        "description": "A list of contacts to add",
                        "in": "body",
                        "name": "contact_ids",
                        "required": true,
                        "schema": {
                            "description": "contact_ids array",
                            "items": {
                                "description": "ID of the contact to add",
                                "format": "int32",
                                "title": "post_characters_character_id_contacts_contact_id",
                                "type": "integer"
                            },
                            "maxItems": 100,
                            "minItems": 1,
                            "title": "post_characters_character_id_contacts_contact_ids",
                            "type": "array"
                        }
                    },
                    {
                        "$ref": "#/parameters/datasource"
                    },
                    {
                        "default": 0,
                        "description": "Add a custom label to the new contact",
                        "format": "int64",
                        "in": "query",
                        "name": "label_id",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "description": "Standing for the new contact",
                        "format": "float",
                        "in": "query",
                        "maximum": 10,
                        "minimum": -10,
                        "name": "standing",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "$ref": "#/parameters/token"
                    },
                    {
                        "$ref": "#/parameters/user_agent"
                    },
                    {
                        "default": false,
                        "description": "Whether the new contact should be watched, note this is only effective on characters",
                        "in": "query",
                        "name": "watched",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "$ref": "#/parameters/X-User-Agent"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "A list of contact ids that successfully created",
                        "examples": {
                            "application/json": [
                                123,
                                456
                            ]
                        },
                        "schema": {
                            "description": "201 created array",
                            "items": {
                                "description": "201 created integer",
                                "format": "int32",
                                "title": "post_characters_character_id_contacts_201_created",
                                "type": "integer"
                            },
                            "maxItems": 100,
                            "title": "post_characters_character_id_contacts_created",
                            "type": "array"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "examples": {
                            "application/json": {
                                "error": "Forbidden message"
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/forbidden"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "Internal server error message"
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/internal_server_error"
                        }
                    }
                },
                "security": [
                    {
                        "evesso": [
                            "esi-characters.write_contacts.v1"
                        ]
                    }
                ],
                "summary": "Add contacts",
                "tags": [
                    "Contacts"
                ],
                "x-alternate-versions": [
                    "dev",
                    "legacy",
                    "v1"
                ]
            },
            "put": {
                "description": "Bulk edit contacts with same settings\n\n---\n",
                "operationId": "put_characters_character_id_contacts",
                "parameters": [
                    {
                        "$ref": "#/parameters/character_id"
                    },
                    {
                        "description": "A list of contacts to edit",
                        "in": "body",
                        "name": "contact_ids",
                        "required": true,
                        "schema": {
                            "description": "contact_ids array",
                            "items": {
                                "description": "ID of the contact to edit",
                                "format": "int32",
                                "title": "put_characters_character_id_contacts_contact_id",
                                "type": "integer"
                            },
                            "maxItems": 100,
                            "minItems": 1,
                            "title": "put_characters_character_id_contacts_contact_ids",
                            "type": "array"
                        }
                    },
                    {
                        "$ref": "#/parameters/datasource"
                    },
                    {
                        "default": 0,
                        "description": "Add a custom label to the contact, use 0 for clearing label",
                        "format": "int64",
                        "in": "query",
                        "name": "label_id",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "description": "Standing for the contact",
                        "format": "float",
                        "in": "query",
                        "maximum": 10,
                        "minimum": -10,
                        "name": "standing",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "$ref": "#/parameters/token"
                    },
                    {
                        "$ref": "#/parameters/user_agent"
                    },
                    {
                        "default": false,
                        "description": "Whether the contact should be watched, note this is only effective on characters",
                        "in": "query",
                        "name": "watched",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "$ref": "#/parameters/X-User-Agent"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Contacts updated"
                    },
                    "403": {
                        "description": "Forbidden",
                        "examples": {
                            "application/json": {
                                "error": "Forbidden message"
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/forbidden"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "Internal server error message"
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/internal_server_error"
                        }
                    }
                },
                "security": [
                    {
                        "evesso": [
                            "esi-characters.write_contacts.v1"
                        ]
                    }
                ],
                "summary": "Edit contacts",
                "tags": [
                    "Contacts"
                ],
                "x-alternate-versions": [
                    "dev",
                    "legacy",
                    "v1"
                ]
            }
        },
        "/v1/characters/{character_id}/contacts/labels/": {
            "get": {
                "description": "Return custom labels for contacts the character defined\n\n---\n\nThis route is cached for up to 300 seconds",
                "operationId": "get_characters_character_id_contacts_labels",
                "parameters": [
                    {
                        "$ref": "#/parameters/character_id"
                    },
                    {
                        "$ref": "#/parameters/datasource"
                    },
                    {
                        "$ref": "#/parameters/token"
                    },
                    {
                        "$ref": "#/parameters/user_agent"
                    },
                    {
                        "$ref": "#/parameters/X-User-Agent"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of contact labels",
                        "examples": {
                            "application/json": [
                                {
                                    "label_id": 123,
                                    "label_name": "Friends"
                                }
                            ]
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok array",
                            "items": {
                                "description": "200 ok object",
                                "properties": {
                                    "label_id": {
                                        "description": "label_id integer",
                                        "format": "int64",
                                        "title": "get_characters_character_id_contacts_labels_label_id",
                                        "type": "integer"
                                    },
                                    "label_name": {
                                        "description": "label_name string",
                                        "title": "get_characters_character_id_contacts_labels_label_name",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "label_id",
                                    "label_name"
                                ],
                                "title": "get_characters_character_id_contacts_labels_200_ok",
                                "type": "object"
                            },
                            "maxItems": 64,
                            "title": "get_characters_character_id_contacts_labels_ok",
                            "type": "array"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "examples": {
                            "application/json": {
                                "error": "Forbidden message"
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/forbidden"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "Internal server error message"
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/internal_server_error"
                        }
                    }
                },
                "security": [
                    {
                        "evesso": [
                            "esi-characters.read_contacts.v1"
                        ]
                    }
                ],
                "summary": "Get contact labels",
                "tags": [
                    "Contacts"
                ],
                "x-alternate-versions": [
                    "dev",
                    "legacy",
                    "v1"
                ],
                "x-cached-seconds": 300
            }
        },
        "/v1/characters/{character_id}/corporationhistory/": {
            "get": {
                "description": "Get a list of all the corporations a character has been a member of\n\n---\n\nThis route is cached for up to 3600 seconds",
                "operationId": "get_characters_character_id_corporationhistory",
                "parameters": [
                    {
                        "$ref": "#/parameters/character_id"
                    },
                    {
                        "$ref": "#/parameters/datasource"
                    },
                    {
                        "$ref": "#/parameters/user_agent"
                    },
                    {
                        "$ref": "#/parameters/X-User-Agent"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Corporation history for the given character",
                        "examples": {
                            "application/json": [
                                {
                                    "corporation_id": 90000001,
                                    "is_deleted": true,
                                    "record_id": 500,
                                    "start_date": "2016-06-26T20:00:00Z"
                                },
                                {
                                    "corporation_id": 90000002,
                                    "record_id": 501,
                                    "start_date": "2016-07-26T20:00:00Z"
                                }
                            ]
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok array",
                            "items": {
                                "description": "200 ok object",
                                "properties": {
                                    "corporation_id": {
                                        "description": "corporation_id integer",
                                        "format": "int32",
                                        "title": "get_characters_character_id_corporationhistory_corporation_id",
                                        "type": "integer"
                                    },
                                    "is_deleted": {
                                        "description": "True if the corporation has been deleted",
                                        "title": "get_characters_character_id_corporationhistory_is_deleted",
                                        "type": "boolean"
                                    },
                                    "record_id": {
                                        "description": "An incrementing ID that can be used to canonically establish order of records in cases where dates may be ambiguous",
                                        "format": "int32",
                                        "title": "get_characters_character_id_corporationhistory_record_id",
                                        "type": "integer"
                                    },
                                    "start_date": {
                                        "description": "start_date string",
                                        "format": "date-time",
                                        "title": "get_characters_character_id_corporationhistory_start_date",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "start_date",
                                    "corporation_id",
                                    "record_id"
                                ],
                                "title": "get_characters_character_id_corporationhistory_200_ok",
                                "type": "object"
                            },
                            "maxItems": 10000,
                            "title": "get_characters_character_id_corporationhistory_ok",
                            "type": "array"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "Internal server error message"
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/internal_server_error"
                        }
                    }
                },
                "summary": "Get corporation history",
                "tags": [
                    "Character"
                ],
                "x-alternate-versions": [
                    "dev",
                    "legacy",
                    "v1"
                ],
                "x-cached-seconds": 3600
            }
        },
        "/v1/characters/{character_id}/industry/jobs/": {
            "get": {
                "description": "List industry jobs placed by a character\n\n---\n\nThis route is cached for up to 300 seconds",
                "operationId": "get_characters_character_id_industry_jobs",
                "parameters": [
                    {
                        "$ref": "#/parameters/character_id"
                    },
                    {
                        "$ref": "#/parameters/datasource"
                    },
                    {
                        "description": "Whether retrieve completed character industry jobs as well",
                        "in": "query",
                        "name": "include_completed",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "$ref": "#/parameters/token"
                    },
                    {
                        "$ref": "#/parameters/user_agent"
                    },
                    {
                        "$ref": "#/parameters/X-User-Agent"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Industry jobs placed by a character",
                        "examples": {
                            "application/json": [
                                {
                                    "activity_id": 1,
                                    "blueprint_id": 1015116533326,
                                    "blueprint_location_id": 60006382,
                                    "blueprint_type_id": 2047,
                                    "cost": 118.0,
                                    "duration": 548,
                                    "end_date": "2014-07-19T15:56:14Z",
                                    "facility_id": 60006382,
                                    "installer_id": 498338451,
                                    "job_id": 229136101,
                                    "licensed_runs": 200,
                                    "output_location_id": 60006382,
                                    "runs": 1,
                                    "start_date": "2014-07-19T15:47:06Z",
                                    "station_id": 60006382,
                                    "status": "active"
                                }
                            ]
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok array",
                            "items": {
                                "description": "200 ok object",
                                "properties": {
                                    "activity_id": {
                                        "description": "Job activity ID",
                                        "format": "int32",
                                        "title": "get_characters_character_id_industry_jobs_activity_id",
                                        "type": "integer"
                                    },
                                    "blueprint_id": {
                                        "description": "blueprint_id integer",
                                        "format": "int64",
                                        "title": "get_characters_character_id_industry_jobs_blueprint_id",
                                        "type": "integer"
                                    },
                                    "blueprint_location_id": {
                                        "description": "Location ID of the location from which the blueprint was installed. Normally a station ID, but can also be an asset (e.g. container) or corporation facility",
                                        "format": "int64",
                                        "title": "get_characters_character_id_industry_jobs_blueprint_location_id",
                                        "type": "integer"
                                    },
                                    "blueprint_type_id": {
                                        "description": "blueprint_type_id integer",
                                        "format": "int32",
                                        "title": "get_characters_character_id_industry_jobs_blueprint_type_id",
                                        "type": "integer"
                                    },
                                    "completed_character_id": {
                                        "description": "ID of the character which completed this job",
                                        "format": "int32",
                                        "title": "get_characters_character_id_industry_jobs_completed_character_id",
                                        "type": "integer"
                                    },
                                    "completed_date": {
                                        "description": "Date and time when this job was completed",
                                        "format": "date-time",
                                        "title": "get_characters_character_id_industry_jobs_completed_date",
                                        "type": "string"
                                    },
                                    "cost": {
                                        "description": "The sume of job installation fee and industry facility tax",
                                        "format": "float",
                                        "title": "get_characters_character_id_industry_jobs_cost",
                                        "type": "number"
                                    },
                                    "duration": {
                                        "description": "Job duration in seconds",
                                        "format": "int32",
                                        "title": "get_characters_character_id_industry_jobs_duration",
                                        "type": "integer"
                                    },
                                    "end_date": {
                                        "description": "Date and time when this job finished",
                                        "format": "date-time",
                                        "title": "get_characters_character_id_industry_jobs_end_date",
                                        "type": "string"
                                    },
                                    "facility_id": {
                                        "description": "ID of the facility where this job is running",
                                        "format": "int64",
                                        "title": "get_characters_character_id_industry_jobs_facility_id",
                                        "type": "integer"
                                    },
                                    "installer_id": {
                                        "description": "ID of the character which installed this job",
                                        "format": "int32",
                                        "title": "get_characters_character_id_industry_jobs_installer_id",
                                        "type": "integer"
                                    },
                                    "job_id": {
                                        "description": "Unique job ID",
                                        "format": "int32",
                                        "title": "get_characters_character_id_industry_jobs_job_id",
                                        "type": "integer"
                                    },
                                    "licensed_runs": {
                                        "description": "Number of runs blueprint is licensed for",
                                        "format": "int32",
                                        "title": "get_characters_character_id_industry_jobs_licensed_runs",
                                        "type": "integer"
                                    },
                                    "output_location_id": {
                                        "description": "Location ID of the location to which the output of the job will be delivered. Normally a station ID, but can also be a corporation facility",
                                        "format": "int64",
                                        "title": "get_characters_character_id_industry_jobs_output_location_id",
                                        "type": "integer"
                                    },
                                    "pause_date": {
                                        "description": "Date and time when this job was paused (i.e. time when the facility where this job was installed went offline)",
                                        "format": "date-time",
                                        "title": "get_characters_character_id_industry_jobs_pause_date",
                                        "type": "string"
                                    },
                                    "probability": {
                                        "description": "Chance of success for invention",
                                        "format": "float",
                                        "title": "get_characters_character_id_industry_jobs_probability",
                                        "type": "number"
                                    },
                                    "product_type_id": {
                                        "description": "Type ID of product (manufactured, copied or invented)",
                                        "format": "int32",
                                        "title": "get_characters_character_id_industry_jobs_product_type_id",
                                        "type": "integer"
                                    },
                                    "runs": {
                                        "description": "Number of runs for a manufacturing job, or number of copies to make for a blueprint copy",
                                        "format": "int32",
                                        "title": "get_characters_character_id_industry_jobs_runs",
                                        "type": "integer"
                                    },
                                    "start_date": {
                                        "description": "Date and time when this job started",
                                        "format": "date-time",
                                        "title": "get_characters_character_id_industry_jobs_start_date",
                                        "type": "string"
                                    },
                                    "station_id": {
                                        "description": "ID of the station where industry facility is located",
                                        "format": "int64",
                                        "title": "get_characters_character_id_industry_jobs_station_id",
                                        "type": "integer"
                                    },
                                    "status": {
                                        "description": "status string",
                                        "enum": [
                                            "active",
                                            "paused",
                                            "ready",
                                            "delivered",
                                            "cancelled",
                                            "reverted"
                                        ],
                                        "title": "get_characters_character_id_industry_jobs_status",
                                        "type": "string"
                                    },
                                    "successful_runs": {
                                        "description": "Number of successful runs for this job. Equal to runs unless this is an invention job",
                                        "format": "int32",
                                        "title": "get_characters_character_id_industry_jobs_successful_runs",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "job_id",
                                    "installer_id",
                                    "facility_id",
                                    "station_id",
                                    "activity_id",
                                    "blueprint_id",
                                    "blueprint_type_id",
                                    "blueprint_location_id",
                                    "output_location_id",
                                    "runs",
                                    "status",
                                    "duration",
                                    "start_date",
                                    "end_date"
                                ],
                                "title": "get_characters_character_id_industry_jobs_200_ok",
                                "type": "object"
                            },
                            "maxItems": 2000,
                            "title": "get_characters_character_id_industry_jobs_ok",
                            "type": "array"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "examples": {
                            "application/json": {
                                "error": "Forbidden message"
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/forbidden"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "Internal server error message"
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/internal_server_error"
                        }
                    }
                },
                "security": [
                    {
                        "evesso": [
                            "esi-industry.read_character_jobs.v1"
                        ]
                    }
                ],
                "summary": "List character industry jobs",
                "tags": [
                    "Industry"
                ],
                "x-alternate-versions": [
                    "dev",
                    "legacy",
                    "v1"
                ],
                "x-cached-seconds": 300
            }
        },
        "/v1/characters/{character_id}/killmails/recent/": {
            "get": {
                "description": "Return a list of character's recent kills and losses\n\n---\n\nThis route is cached for up to 120 seconds",
                "operationId": "get_characters_character_id_killmails_recent",
                "parameters": [
                    {
                        "$ref": "#/parameters/character_id"
                    },
                    {
                        "$ref": "#/parameters/datasource"
                    },
                    {
                        "default": 50,
                        "description": "How many killmails to return at maximum",
                        "format": "int32",
                        "in": "query",
                        "maximum": 5000,
                        "name": "max_count",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "description": "Only return killmails with ID smaller than this.\n",
                        "format": "int32",
                        "in": "query",
                        "name": "max_kill_id",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "$ref": "#/parameters/token"
                    },
                    {
                        "$ref": "#/parameters/user_agent"
                    },
                    {
                        "$ref": "#/parameters/X-User-Agent"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of killmail IDs and hashes",
                        "examples": {
                            "application/json": [
                                {
                                    "killmail_hash": "8eef5e8fb6b88fe3407c489df33822b2e3b57a5e",
                                    "killmail_id": 2
                                },
                                {
                                    "killmail_hash": "b41ccb498ece33d64019f64c0db392aa3aa701fb",
                                    "killmail_id": 1
                                }
                            ]
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok array",
                            "items": {
                                "description": "200 ok object",
                                "properties": {
                                    "killmail_hash": {
                                        "description": "A hash of this killmail",
                                        "title": "get_characters_character_id_killmails_recent_killmail_hash",
                                        "type": "string"
                                    },
                                    "killmail_id": {
                                        "description": "ID of this killmail",
                                        "format": "int32",
                                        "title": "get_characters_character_id_killmails_recent_killmail_id",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "killmail_id",
                                    "killmail_hash"
                                ],
                                "title": "get_characters_character_id_killmails_recent_200_ok",
                                "type": "object"
                            },
                            "maxItems": 5000,
                            "title": "get_characters_character_id_killmails_recent_ok",
                            "type": "array"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "examples": {
                            "application/json": {
                                "error": "Forbidden message"
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/forbidden"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "Internal server error message"
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/internal_server_error"
                        }
                    }
                },
                "security": [
                    {
                        "evesso": [
                            "esi-killmails.read_killmails.v1"
                        ]
                    }
                ],
                "summary": "List kills and losses",
                "tags": [
                    "Killmails"
                ],
                "x-alternate-versions": [
                    "dev",
                    "legacy",
                    "v1"
                ],
                "x-cached-seconds": 120
            }
        },
        "/v1/characters/{character_id}/medals/": {
            "get": {
                "description": "Return a list of medals the character has\n\n---\n\nThis route is cached for up to 3600 seconds",
                "operationId": "get_characters_character_id_medals",
                "parameters": [
                    {
                        "$ref": "#/parameters/character_id"
                    },
                    {
                        "$ref": "#/parameters/datasource"
                    },
                    {
                        "$ref": "#/parameters/token"
                    },
                    {
                        "$ref": "#/parameters/user_agent"
                    },
                    {
                        "$ref": "#/parameters/X-User-Agent"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of medals",
                        "examples": {
                            "application/json": [
                                {
                                    "corporation_id": 98000001,
                                    "date": "2017-03-16T15:01:45Z",
                                    "description": "For 33 corp!",
                                    "graphics": [
                                        {
                                            "color": -1,
                                            "graphic": "gallente.1_1",
                                            "layer": 0,
                                            "part": 1
                                        }
                                    ],
                                    "issuer_id": 2112000002,
                                    "medal_id": 3,
                                    "reason": "Thanks!",
                                    "status": "private",
                                    "title": "33 tester medal"
                                }
                            ]
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok array",
                            "items": {
                                "description": "200 ok object",
                                "properties": {
                                    "corporation_id": {
                                        "description": "corporation_id integer",
                                        "format": "int32",
                                        "title": "get_characters_character_id_medals_corporation_id",
                                        "type": "integer"
                                    },
                                    "date": {
                                        "description": "date string",
                                        "format": "date-time",
                                        "title": "get_characters_character_id_medals_date",
                                        "type": "string"
                                    },
                                    "description": {
                                        "description": "description string",
                                        "title": "get_characters_character_id_medals_description",
                                        "type": "string"
                                    },
                                    "graphics": {
                                        "description": "graphics array",
                                        "items": {
                                            "description": "graphic object",
                                            "properties": {
                                                "color": {
                                                    "description": "color integer",
                                                    "format": "int32",
                                                    "title": "get_characters_character_id_medals_color",
                                                    "type": "integer"
                                                },
                                                "graphic": {
                                                    "description": "graphic string",
                                                    "title": "get_characters_character_id_medals_graphic",
                                                    "type": "string"
                                                },
                                                "layer": {
                                                    "description": "layer integer",
                                                    "format": "int32",
                                                    "title": "get_characters_character_id_medals_layer",
                                                    "type": "integer"
                                                },
                                                "part": {
                                                    "description": "part integer",
                                                    "format": "int32",
                                                    "title": "get_characters_character_id_medals_part",
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "part",
                                                "layer",
                                                "graphic"
                                            ],
                                            "title": "get_characters_character_id_medals_graphic",
                                            "type": "object"
                                        },
                                        "maxItems": 10,
                                        "title": "get_characters_character_id_medals_graphics",
                                        "type": "array"
                                    },
                                    "issuer_id": {
                                        "description": "issuer_id integer",
                                        "format": "int32",
                                        "title": "get_characters_character_id_medals_issuer_id",
                                        "type": "integer"
                                    },
                                    "medal_id": {
                                        "description": "medal_id integer",
                                        "format": "int32",
                                        "title": "get_characters_character_id_medals_medal_id",
                                        "type": "integer"
                                    },
                                    "reason": {
                                        "description": "reason string",
                                        "title": "get_characters_character_id_medals_reason",
                                        "type": "string"
                                    },
                                    "status": {
                                        "description": "status string",
                                        "enum": [
                                            "public",
                                            "private"
                                        ],
                                        "title": "get_characters_character_id_medals_status",
                                        "type": "string"
                                    },
                                    "title": {
                                        "description": "title string",
                                        "title": "get_characters_character_id_medals_title",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "medal_id",
                                    "title",
                                    "description",
                                    "corporation_id",
                                    "issuer_id",
                                    "date",
                                    "reason",
                                    "status",
                                    "graphics"
                                ],
                                "title": "get_characters_character_id_medals_200_ok",
                                "type": "object"
                            },
                            "maxItems": 1000,
                            "title": "get_characters_character_id_medals_ok",
                            "type": "array"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "examples": {
                            "application/json": {
                                "error": "Forbidden message"
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/forbidden"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "Internal server error message"
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/internal_server_error"
                        }
                    }
                },
                "security": [
                    {
                        "evesso": [
                            "esi-characters.read_medals.v1"
                        ]
                    }
                ],
                "summary": "Get medals",
                "tags": [
                    "Character"
                ],
                "x-alternate-versions": [
                    "dev",
                    "legacy",
                    "v1"
                ],
                "x-cached-seconds": 3600
            }
        },
        "/v1/characters/{character_id}/standings/": {
            "get": {
                "description": "Return character standings from agents, NPC corporations, and factions\n\n---\n\nThis route is cached for up to 3600 seconds",
                "operationId": "get_characters_character_id_standings",
                "parameters": [
                    {
                        "$ref": "#/parameters/character_id"
                    },
                    {
                        "$ref": "#/parameters/datasource"
                    },
                    {
                        "$ref": "#/parameters/token"
                    },
                    {
                        "$ref": "#/parameters/user_agent"
                    },
                    {
                        "$ref": "#/parameters/X-User-Agent"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of standings",
                        "examples": {
                            "application/json": [
                                {
                                    "from_id": 3009841,
                                    "from_type": "agent",
                                    "standing": 0.1
                                },
                                {
                                    "from_id": 1000061,
                                    "from_type": "npc_corp",
                                    "standing": 0
                                },
                                {
                                    "from_id": 500003,
                                    "from_type": "faction",
                                    "standing": -1
                                }
                            ]
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok array",
                            "items": {
                                "description": "200 ok object",
                                "properties": {
                                    "from_id": {
                                        "description": "from_id integer",
                                        "format": "int32",
                                        "title": "get_characters_character_id_standings_from_id",
                                        "type": "integer"
                                    },
                                    "from_type": {
                                        "description": "from_type string",
                                        "enum": [
                                            "agent",
                                            "npc_corp",
                                            "faction"
                                        ],
                                        "title": "get_characters_character_id_standings_from_type",
                                        "type": "string"
                                    },
                                    "standing": {
                                        "description": "standing number",
                                        "format": "float",
                                        "maximum": 10,
                                        "minimum": -10,
                                        "title": "get_characters_character_id_standings_standing",
                                        "type": "number"
                                    }
                                },
                                "required": [
                                    "from_id",
                                    "from_type",
                                    "standing"
                                ],
                                "title": "get_characters_character_id_standings_200_ok",
                                "type": "object"
                            },
                            "maxItems": 10000,
                            "title": "get_characters_character_id_standings_ok",
                            "type": "array"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "examples": {
                            "application/json": {
                                "error": "Forbidden message"
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/forbidden"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "Internal server error message"
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/internal_server_error"
                        }
                    }
                },
                "security": [
                    {
                        "evesso": [
                            "esi-characters.read_standings.v1"
                        ]
                    }
                ],
                "summary": "Get standings",
                "tags": [
                    "Character"
                ],
                "x-alternate-versions": [
                    "dev",
                    "legacy",
                    "v1"
                ],
                "x-cached-seconds": 3600
            }
        },
        "/v1/dogma/attributes/": {
            "get": {
                "description": "Get a list of dogma attribute ids\n\n---\n\nThis route expires daily at 11:05",
                "operationId": "get_dogma_attributes",
                "parameters": [
                    {
                        "$ref": "#/parameters/datasource"
                    },
                    {
                        "$ref": "#/parameters/user_agent"
                    },
                    {
                        "$ref": "#/parameters/X-User-Agent"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of dogma attribute ids",
                        "examples": {
                            "application/json": [
                                1,
                                2,
                                3
                            ]
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok array",
                            "items": {
                                "description": "200 ok integer",
                                "format": "int32",
                                "title": "get_dogma_attributes_200_ok",
                                "type": "integer"
                            },
                            "maxItems": 10000,
                            "title": "get_dogma_attributes_ok",
                            "type": "array"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "Internal server error message"
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/internal_server_error"
                        }
                    }
                },
                "summary": "Get attributes",
                "tags": [
                    "Dogma"
                ],
                "x-alternate-versions": [
                    "dev",
                    "legacy",
                    "v1"
                ]
            }
        },
        "/v1/dogma/attributes/{attribute_id}/": {
            "get": {
                "description": "Get information on a dogma attribute\n\n---\n\nThis route expires daily at 11:05",
                "operationId": "get_dogma_attributes_attribute_id",
                "parameters": [
                    {
                        "description": "A dogma attribute ID",
                        "format": "int32",
                        "in": "path",
                        "name": "attribute_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "$ref": "#/parameters/datasource"
                    },
                    {
                        "$ref": "#/parameters/user_agent"
                    },
                    {
                        "$ref": "#/parameters/X-User-Agent"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Information about a dogma attribute",
                        "examples": {
                            "application/json": {
                                "attribute_id": 20,
                                "default_value": 1,
                                "description": "Factor by which topspeed increases.",
                                "display_name": "Maximum Velocity Bonus",
                                "high_is_good": true,
                                "icon_id": 1389,
                                "name": "speedFactor",
                                "published": true,
                                "unit_id": 124
                            }
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok object",
                            "properties": {
                                "attribute_id": {
                                    "description": "attribute_id integer",
                                    "format": "int32",
                                    "title": "get_dogma_attributes_attribute_id_attribute_id",
                                    "type": "integer"
                                },
                                "default_value": {
                                    "description": "default_value number",
                                    "format": "float",
                                    "title": "get_dogma_attributes_attribute_id_default_value",
                                    "type": "number"
                                },
                                "description": {
                                    "description": "description string",
                                    "title": "get_dogma_attributes_attribute_id_description",
                                    "type": "string"
                                },
                                "display_name": {
                                    "description": "display_name string",
                                    "title": "get_dogma_attributes_attribute_id_display_name",
                                    "type": "string"
                                },
                                "high_is_good": {
                                    "description": "high_is_good boolean",
                                    "title": "get_dogma_attributes_attribute_id_high_is_good",
                                    "type": "boolean"
                                },
                                "icon_id": {
                                    "description": "icon_id integer",
                                    "format": "int32",
                                    "title": "get_dogma_attributes_attribute_id_icon_id",
                                    "type": "integer"
                                },
                                "name": {
                                    "description": "name string",
                                    "title": "get_dogma_attributes_attribute_id_name",
                                    "type": "string"
                                },
                                "published": {
                                    "description": "published boolean",
                                    "title": "get_dogma_attributes_attribute_id_published",
                                    "type": "boolean"
                                },
                                "stackable": {
                                    "description": "stackable boolean",
                                    "title": "get_dogma_attributes_attribute_id_stackable",
                                    "type": "boolean"
                                },
                                "unit_id": {
                                    "description": "unit_id integer",
                                    "format": "int32",
                                    "title": "get_dogma_attributes_attribute_id_unit_id",
                                    "type": "integer"
                                }
                            },
                            "required": [
                                "attribute_id"
                            ],
                            "title": "get_dogma_attributes_attribute_id_ok",
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "Dogma attribute not found",
                        "examples": {
                            "application/json": {
                                "error": "Not found message"
                            }
                        },
                        "schema": {
                            "description": "Not found",
                            "properties": {
                                "error": {
                                    "description": "Not found message",
                                    "title": "get_dogma_attributes_attribute_id_404_not_found",
                                    "type": "string"
                                }
                            },
                            "title": "get_dogma_attributes_attribute_id_not_found",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "Internal server error message"
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/internal_server_error"
                        }
                    }
                },
                "summary": "Get attribute information",
                "tags": [
                    "Dogma"
                ],
                "x-alternate-versions": [
                    "dev",
                    "legacy",
                    "v1"
                ]
            }
        },
        "/v1/dogma/effects/": {
            "get": {
                "description": "Get a list of dogma effect ids\n\n---\n\nThis route expires daily at 11:05",
                "operationId": "get_dogma_effects",
                "parameters": [
                    {
                        "$ref": "#/parameters/datasource"
                    },
                    {
                        "$ref": "#/parameters/user_agent"
                    },
                    {
                        "$ref": "#/parameters/X-User-Agent"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of dogma effect ids",
                        "examples": {
                            "application/json": [
                                1,
                                2,
                                3
                            ]
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok array",
                            "items": {
                                "description": "200 ok integer",
                                "format": "int32",
                                "title": "get_dogma_effects_200_ok",
                                "type": "integer"
                            },
                            "maxItems": 10000,
                            "title": "get_dogma_effects_ok",
                            "type": "array"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "Internal server error message"
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/internal_server_error"
                        }
                    }
                },
                "summary": "Get effects",
                "tags": [
                    "Dogma"
                ],
                "x-alternate-versions": [
                    "dev",
                    "legacy",
                    "v1"
                ]
            }
        },
        "/v1/dogma/effects/{effect_id}/": {
            "get": {
                "description": "Get information on a dogma effect\n\n---\n\nThis route expires daily at 11:05",
                "operationId": "get_dogma_effects_effect_id",
                "parameters": [
                    {
                        "$ref": "#/parameters/datasource"
                    },
                    {
                        "description": "A dogma effect ID",
                        "format": "int32",
                        "in": "path",
                        "name": "effect_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "$ref": "#/parameters/user_agent"
                    },
                    {
                        "$ref": "#/parameters/X-User-Agent"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Information about a dogma effect",
                        "examples": {
                            "application/json": {
                                "description": "Requires a high power slot.",
                                "display_name": "High power",
                                "effect_category": 0,
                                "effect_id": 12,
                                "icon_id": 293,
                                "name": "hiPower",
                                "post_expression": 131,
                                "pre_expression": 131,
                                "published": true
                            }
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok object",
                            "properties": {
                                "description": {
                                    "description": "description string",
                                    "title": "get_dogma_effects_effect_id_description",
                                    "type": "string"
                                },
                                "disallow_auto_repeat": {
                                    "description": "disallow_auto_repeat boolean",
                                    "title": "get_dogma_effects_effect_id_disallow_auto_repeat",
                                    "type": "boolean"
                                },
                                "discharge_attribute_id": {
                                    "description": "discharge_attribute_id integer",
                                    "format": "int32",
                                    "title": "get_dogma_effects_effect_id_discharge_attribute_id",
                                    "type": "integer"
                                },
                                "display_name": {
                                    "description": "display_name string",
                                    "title": "get_dogma_effects_effect_id_display_name",
                                    "type": "string"
                                },
                                "duration_attribute_id": {
                                    "description": "duration_attribute_id integer",
                                    "format": "int32",
                                    "title": "get_dogma_effects_effect_id_duration_attribute_id",
                                    "type": "integer"
                                },
                                "effect_category": {
                                    "description": "effect_category integer",
                                    "format": "int32",
                                    "title": "get_dogma_effects_effect_id_effect_category",
                                    "type": "integer"
                                },
                                "effect_id": {
                                    "description": "effect_id integer",
                                    "format": "int32",
                                    "title": "get_dogma_effects_effect_id_effect_id",
                                    "type": "integer"
                                },
                                "electronic_chance": {
                                    "description": "electronic_chance boolean",
                                    "title": "get_dogma_effects_effect_id_electronic_chance",
                                    "type": "boolean"
                                },
                                "falloff_attribute_id": {
                                    "description": "falloff_attribute_id integer",
                                    "format": "int32",
                                    "title": "get_dogma_effects_effect_id_falloff_attribute_id",
                                    "type": "integer"
                                },
                                "icon_id": {
                                    "description": "icon_id integer",
                                    "format": "int32",
                                    "title": "get_dogma_effects_effect_id_icon_id",
                                    "type": "integer"
                                },
                                "is_assistance": {
                                    "description": "is_assistance boolean",
                                    "title": "get_dogma_effects_effect_id_is_assistance",
                                    "type": "boolean"
                                },
                                "is_offensive": {
                                    "description": "is_offensive boolean",
                                    "title": "get_dogma_effects_effect_id_is_offensive",
                                    "type": "boolean"
                                },
                                "is_warp_safe": {
                                    "description": "is_warp_safe boolean",
                                    "title": "get_dogma_effects_effect_id_is_warp_safe",
                                    "type": "boolean"
                                },
                                "modifiers": {
                                    "description": "modifiers array",
                                    "items": {
                                        "description": "modifier object",
                                        "properties": {
                                            "domain": {
                                                "description": "domain string",
                                                "title": "get_dogma_effects_effect_id_domain",
                                                "type": "string"
                                            },
                                            "func": {
                                                "description": "func string",
                                                "title": "get_dogma_effects_effect_id_func",
                                                "type": "string"
                                            },
                                            "modified_attribute_id": {
                                                "description": "modified_attribute_id integer",
                                                "format": "int32",
                                                "title": "get_dogma_effects_effect_id_modified_attribute_id",
                                                "type": "integer"
                                            },
                                            "modifying_attribute_id": {
                                                "description": "modifying_attribute_id integer",
                                                "format": "int32",
                                                "title": "get_dogma_effects_effect_id_modifying_attribute_id",
                                                "type": "integer"
                                            },
                                            "operator": {
                                                "description": "operator integer",
                                                "format": "int32",
                                                "title": "get_dogma_effects_effect_id_operator",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "func",
                                            "domain",
                                            "modified_attribute_id",
                                            "modifying_attribute_id",
                                            "operator"
                                        ],
                                        "title": "get_dogma_effects_effect_id_modifier",
                                        "type": "object"
                                    },
                                    "maxItems": 100,
                                    "title": "get_dogma_effects_effect_id_modifiers",
                                    "type": "array"
                                },
                                "name": {
                                    "description": "name string",
                                    "title": "get_dogma_effects_effect_id_name",
                                    "type": "string"
                                },
                                "post_expression": {
                                    "description": "post_expression integer",
                                    "format": "int32",
                                    "title": "get_dogma_effects_effect_id_post_expression",
                                    "type": "integer"
                                },
                                "pre_expression": {
                                    "description": "pre_expression integer",
                                    "format": "int32",
                                    "title": "get_dogma_effects_effect_id_pre_expression",
                                    "type": "integer"
                                },
                                "published": {
                                    "description": "published boolean",
                                    "title": "get_dogma_effects_effect_id_published",
                                    "type": "boolean"
                                },
                                "range_attribute_id": {
                                    "description": "range_attribute_id integer",
                                    "format": "int32",
                                    "title": "get_dogma_effects_effect_id_range_attribute_id",
                                    "type": "integer"
                                },
                                "range_chance": {
                                    "description": "range_chance boolean",
                                    "title": "get_dogma_effects_effect_id_range_chance",
                                    "type": "boolean"
                                },
                                "tracking_speed_attribute_id": {
                                    "description": "tracking_speed_attribute_id integer",
                                    "format": "int32",
                                    "title": "get_dogma_effects_effect_id_tracking_speed_attribute_id",
                                    "type": "integer"
                                }
                            },
                            "required": [
                                "effect_id"
                            ],
                            "title": "get_dogma_effects_effect_id_ok",
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "Dogma effect not found",
                        "examples": {
                            "application/json": {
                                "error": "Not found message"
                            }
                        },
                        "schema": {
                            "description": "Not found",
                            "properties": {
                                "error": {
                                    "description": "Not found message",
                                    "title": "get_dogma_effects_effect_id_404_not_found",
                                    "type": "string"
                                }
                            },
                            "title": "get_dogma_effects_effect_id_not_found",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "Internal server error message"
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/internal_server_error"
                        }
                    }
                },
                "summary": "Get effect information",
                "tags": [
                    "Dogma"
                ],
                "x-alternate-versions": [
                    "legacy",
                    "v1"
                ]
            }
        },
        "/v1/fleets/{fleet_id}/": {
            "get": {
                "description": "Return details about a fleet\n\n---\n\nThis route is cached for up to 5 seconds",
                "operationId": "get_fleets_fleet_id",
                "parameters": [
                    {
                        "$ref": "#/parameters/datasource"
                    },
                    {
                        "description": "ID for a fleet",
                        "format": "int64",
                        "in": "path",
                        "name": "fleet_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "$ref": "#/parameters/token"
                    },
                    {
                        "$ref": "#/parameters/user_agent"
                    },
                    {
                        "$ref": "#/parameters/X-User-Agent"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Details about a fleet",
                        "examples": {
                            "application/json": {
                                "is_free_move": false,
                                "is_registered": false,
                                "is_voice_enabled": false,
                                "motd": "This is an <b>awesome</b> fleet!"
                            }
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok object",
                            "properties": {
                                "is_free_move": {
                                    "description": "Is free-move enabled",
                                    "title": "get_fleets_fleet_id_is_free_move",
                                    "type": "boolean"
                                },
                                "is_registered": {
                                    "description": "Does the fleet have an active fleet advertisement",
                                    "title": "get_fleets_fleet_id_is_registered",
                                    "type": "boolean"
                                },
                                "is_voice_enabled": {
                                    "description": "Is EVE Voice enabled",
                                    "title": "get_fleets_fleet_id_is_voice_enabled",
                                    "type": "boolean"
                                },
                                "motd": {
                                    "description": "Fleet MOTD in CCP flavoured HTML",
                                    "title": "get_fleets_fleet_id_motd",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "motd",
                                "is_free_move",
                                "is_registered",
                                "is_voice_enabled"
                            ],
                            "title": "get_fleets_fleet_id_ok",
                            "type": "object"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "examples": {
                            "application/json": {
                                "error": "Forbidden message"
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/forbidden"
                        }
                    },
                    "404": {
                        "description": "The fleet does not exist or you don't have access to it",
                        "examples": {
                            "application/json": {
                                "error": "Not found message"
                            }
                        },
                        "schema": {
                            "description": "Not found",
                            "properties": {
                                "error": {
                                    "description": "Not found message",
                                    "title": "get_fleets_fleet_id_404_not_found",
                                    "type": "string"
                                }
                            },
                            "title": "get_fleets_fleet_id_not_found",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "Internal server error message"
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/internal_server_error"
                        }
                    }
                },
                "security": [
                    {
                        "evesso": [
                            "esi-fleets.read_fleet.v1"
                        ]
                    }
                ],
                "summary": "Get fleet information",
                "tags": [
                    "Fleets"
                ],
                "x-alternate-versions": [
                    "dev",
                    "legacy",
                    "v1"
                ],
                "x-cached-seconds": 5
            },
            "put": {
                "description": "Update settings about a fleet\n\n---\n",
                "operationId": "put_fleets_fleet_id",
                "parameters": [
                    {
                        "$ref": "#/parameters/datasource"
                    },
                    {
                        "description": "ID for a fleet",
                        "format": "int64",
                        "in": "path",
                        "name": "fleet_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "What to update for this fleet",
                        "in": "body",
                        "name": "new_settings",
                        "required": true,
                        "schema": {
                            "description": "new_settings object",
                            "properties": {
                                "is_free_move": {
                                    "description": "Should free-move be enabled in the fleet",
                                    "title": "put_fleets_fleet_id_is_free_move",
                                    "type": "boolean"
                                },
                                "motd": {
                                    "description": "New fleet MOTD in CCP flavoured HTML",
                                    "title": "put_fleets_fleet_id_motd",
                                    "type": "string"
                                }
                            },
                            "title": "put_fleets_fleet_id_new_settings",
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/token"
                    },
                    {
                        "$ref": "#/parameters/user_agent"
                    },
                    {
                        "$ref": "#/parameters/X-User-Agent"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Fleet updated"
                    },
                    "400": {
                        "description": "Invalid request body",
                        "examples": {
                            "application/json": {
                                "error": "Bad request message"
                            }
                        },
                        "schema": {
                            "description": "Bad request",
                            "properties": {
                                "error": {
                                    "description": "Bad request message",
                                    "title": "put_fleets_fleet_id_400_bad_request",
                                    "type": "string"
                                }
                            },
                            "title": "put_fleets_fleet_id_bad_request",
                            "type": "object"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "examples": {
                            "application/json": {
                                "error": "Forbidden message"
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/forbidden"
                        }
                    },
                    "404": {
                        "description": "The fleet does not exist or you don't have access to it",
                        "examples": {
                            "application/json": {
                                "error": "Not found message"
                            }
                        },
                        "schema": {
                            "description": "Not found",
                            "properties": {
                                "error": {
                                    "description": "Not found message",
                                    "title": "put_fleets_fleet_id_404_not_found",
                                    "type": "string"
                                }
                            },
                            "title": "put_fleets_fleet_id_not_found",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "Internal server error message"
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/internal_server_error"
                        }
                    }
                },
                "security": [
                    {
                        "evesso": [
                            "esi-fleets.write_fleet.v1"
                        ]
                    }
                ],
                "summary": "Update fleet",
                "tags": [
                    "Fleets"
                ],
                "x-alternate-versions": [
                    "dev",
                    "legacy",
                    "v1"
                ]
            }
        },
        "/v1/fleets/{fleet_id}/members/": {
            "get": {
                "description": "Return information about fleet members\n\n---\n\nThis route is cached for up to 5 seconds",
                "operationId": "get_fleets_fleet_id_members",
                "parameters": [
                    {
                        "$ref": "#/parameters/datasource"
                    },
                    {
                        "description": "ID for a fleet",
                        "format": "int64",
                        "in": "path",
                        "name": "fleet_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "$ref": "#/parameters/language"
                    },
                    {
                        "$ref": "#/parameters/token"
                    },
                    {
                        "$ref": "#/parameters/user_agent"
                    },
                    {
                        "$ref": "#/parameters/X-User-Agent"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of fleet members",
                        "examples": {
                            "application/json": [
                                {
                                    "character_id": 93265215,
                                    "join_time": "2016-04-29T12:34:56Z",
                                    "role": "squad_commander",
                                    "role_name": "Squad Commander (Boss)",
                                    "ship_type_id": 33328,
                                    "solar_system_id": 30003729,
                                    "squad_id": 3129411261968,
                                    "station_id": 61000180,
                                    "takes_fleet_warp": true,
                                    "wing_id": 2073711261968
                                }
                            ]
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Content-Language": {
                                "description": "The language used in the response",
                                "enum": [
                                    "de",
                                    "en-us",
                                    "fr",
                                    "ja",
                                    "ru",
                                    "zh"
                                ],
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok array",
                            "items": {
                                "description": "200 ok object",
                                "properties": {
                                    "character_id": {
                                        "description": "character_id integer",
                                        "format": "int32",
                                        "title": "get_fleets_fleet_id_members_character_id",
                                        "type": "integer"
                                    },
                                    "join_time": {
                                        "description": "join_time string",
                                        "format": "date-time",
                                        "title": "get_fleets_fleet_id_members_join_time",
                                        "type": "string"
                                    },
                                    "role": {
                                        "description": "Member\u2019s role in fleet",
                                        "enum": [
                                            "fleet_commander",
                                            "wing_commander",
                                            "squad_commander",
                                            "squad_member"
                                        ],
                                        "title": "get_fleets_fleet_id_members_role",
                                        "type": "string"
                                    },
                                    "role_name": {
                                        "description": "Localized role names",
                                        "title": "get_fleets_fleet_id_members_role_name",
                                        "type": "string"
                                    },
                                    "ship_type_id": {
                                        "description": "ship_type_id integer",
                                        "format": "int32",
                                        "title": "get_fleets_fleet_id_members_ship_type_id",
                                        "type": "integer"
                                    },
                                    "solar_system_id": {
                                        "description": "Solar system the member is located in",
                                        "format": "int32",
                                        "title": "get_fleets_fleet_id_members_solar_system_id",
                                        "type": "integer"
                                    },
                                    "squad_id": {
                                        "description": "ID of the squad the member is in. If not applicable, will be set to -1",
                                        "format": "int64",
                                        "title": "get_fleets_fleet_id_members_squad_id",
                                        "type": "integer"
                                    },
                                    "station_id": {
                                        "description": "Station in which the member is docked in, if applicable",
                                        "format": "int64",
                                        "title": "get_fleets_fleet_id_members_station_id",
                                        "type": "integer"
                                    },
                                    "takes_fleet_warp": {
                                        "description": "Whether the member take fleet warps",
                                        "title": "get_fleets_fleet_id_members_takes_fleet_warp",
                                        "type": "boolean"
                                    },
                                    "wing_id": {
                                        "description": "ID of the wing the member is in. If not applicable, will be set to -1",
                                        "format": "int64",
                                        "title": "get_fleets_fleet_id_members_wing_id",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "character_id",
                                    "ship_type_id",
                                    "wing_id",
                                    "squad_id",
                                    "role",
                                    "role_name",
                                    "join_time",
                                    "takes_fleet_warp",
                                    "solar_system_id"
                                ],
                                "title": "get_fleets_fleet_id_members_200_ok",
                                "type": "object"
                            },
                            "maxItems": 256,
                            "title": "get_fleets_fleet_id_members_ok",
                            "type": "array"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "examples": {
                            "application/json": {
                                "error": "Forbidden message"
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/forbidden"
                        }
                    },
                    "404": {
                        "description": "The fleet does not exist or you don't have access to it",
                        "examples": {
                            "application/json": {
                                "error": "Not found message"
                            }
                        },
                        "schema": {
                            "description": "Not found",
                            "properties": {
                                "error": {
                                    "description": "Not found message",
                                    "title": "get_fleets_fleet_id_members_404_not_found",
                                    "type": "string"
                                }
                            },
                            "title": "get_fleets_fleet_id_members_not_found",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "Internal server error message"
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/internal_server_error"
                        }
                    }
                },
                "security": [
                    {
                        "evesso": [
                            "esi-fleets.read_fleet.v1"
                        ]
                    }
                ],
                "summary": "Get fleet members",
                "tags": [
                    "Fleets"
                ],
                "x-alternate-versions": [
                    "dev",
                    "legacy",
                    "v1"
                ],
                "x-cached-seconds": 5
            },
            "post": {
                "description": "Invite a character into the fleet, if a character has a CSPA charge set, it is not possible to invite them to the fleet using ESI\n\n---\n",
                "operationId": "post_fleets_fleet_id_members",
                "parameters": [
                    {
                        "$ref": "#/parameters/datasource"
                    },
                    {
                        "description": "ID for a fleet",
                        "format": "int64",
                        "in": "path",
                        "name": "fleet_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Details of the invitation",
                        "in": "body",
                        "name": "invitation",
                        "required": true,
                        "schema": {
                            "description": "invitation object",
                            "properties": {
                                "character_id": {
                                    "description": "The character you want to invite",
                                    "format": "int32",
                                    "title": "post_fleets_fleet_id_members_character_id",
                                    "type": "integer"
                                },
                                "role": {
                                    "description": "- If a character is invited with the `fleet_commander` role, neither `wing_id` or `squad_id` should be specified - If a character is invited with the `wing_commander` role, only `wing_id` should be specified - If a character is invited with the `squad_commander` role, both `wing_id` and `squad_id` should be specified - If a character is invited with the `squad_member` role, `wing_id` and `squad_id` should either both be specified or not specified at all. If they aren\u2019t specified, the invited character will join any squad with available positions\n",
                                    "enum": [
                                        "fleet_commander",
                                        "wing_commander",
                                        "squad_commander",
                                        "squad_member"
                                    ],
                                    "title": "post_fleets_fleet_id_members_role",
                                    "type": "string"
                                },
                                "squad_id": {
                                    "description": "squad_id integer",
                                    "format": "int64",
                                    "minimum": 0,
                                    "title": "post_fleets_fleet_id_members_squad_id",
                                    "type": "integer"
                                },
                                "wing_id": {
                                    "description": "wing_id integer",
                                    "format": "int64",
                                    "minimum": 0,
                                    "title": "post_fleets_fleet_id_members_wing_id",
                                    "type": "integer"
                                }
                            },
                            "required": [
                                "character_id",
                                "role"
                            ],
                            "title": "post_fleets_fleet_id_members_invitation",
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/token"
                    },
                    {
                        "$ref": "#/parameters/user_agent"
                    },
                    {
                        "$ref": "#/parameters/X-User-Agent"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Fleet invitation sent"
                    },
                    "403": {
                        "description": "Forbidden",
                        "examples": {
                            "application/json": {
                                "error": "Forbidden message"
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/forbidden"
                        }
                    },
                    "404": {
                        "description": "The fleet does not exist or you don't have access to it",
                        "examples": {
                            "application/json": {
                                "error": "Not found message"
                            }
                        },
                        "schema": {
                            "description": "Not found",
                            "properties": {
                                "error": {
                                    "description": "Not found message",
                                    "title": "post_fleets_fleet_id_members_404_not_found",
                                    "type": "string"
                                }
                            },
                            "title": "post_fleets_fleet_id_members_not_found",
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Errors in invitation",
                        "examples": {
                            "application/json": {
                                "error": "missing wing_id"
                            }
                        },
                        "schema": {
                            "description": "422 unprocessable entity object",
                            "properties": {
                                "error": {
                                    "description": "error message",
                                    "title": "post_fleets_fleet_id_members_error",
                                    "type": "string"
                                }
                            },
                            "title": "post_fleets_fleet_id_members_unprocessable_entity",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "Internal server error message"
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/internal_server_error"
                        }
                    }
                },
                "security": [
                    {
                        "evesso": [
                            "esi-fleets.write_fleet.v1"
                        ]
                    }
                ],
                "summary": "Create fleet invitation",
                "tags": [
                    "Fleets"
                ],
                "x-alternate-versions": [
                    "dev",
                    "legacy",
                    "v1"
                ]
            }
        },
        "/v1/fleets/{fleet_id}/members/{member_id}/": {
            "delete": {
                "description": "Kick a fleet member\n\n---\n",
                "operationId": "delete_fleets_fleet_id_members_member_id",
                "parameters": [
                    {
                        "$ref": "#/parameters/datasource"
                    },
                    {
                        "description": "ID for a fleet",
                        "format": "int64",
                        "in": "path",
                        "name": "fleet_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "The character ID of a member in this fleet",
                        "format": "int32",
                        "in": "path",
                        "name": "member_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "$ref": "#/parameters/token"
                    },
                    {
                        "$ref": "#/parameters/user_agent"
                    },
                    {
                        "$ref": "#/parameters/X-User-Agent"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Fleet member kicked"
                    },
                    "403": {
                        "description": "Forbidden",
                        "examples": {
                            "application/json": {
                                "error": "Forbidden message"
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/forbidden"
                        }
                    },
                    "404": {
                        "description": "The fleet does not exist or you don't have access to it",
                        "examples": {
                            "application/json": {
                                "error": "Not found message"
                            }
                        },
                        "schema": {
                            "description": "Not found",
                            "properties": {
                                "error": {
                                    "description": "Not found message",
                                    "title": "delete_fleets_fleet_id_members_member_id_404_not_found",
                                    "type": "string"
                                }
                            },
                            "title": "delete_fleets_fleet_id_members_member_id_not_found",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "Internal server error message"
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/internal_server_error"
                        }
                    }
                },
                "security": [
                    {
                        "evesso": [
                            "esi-fleets.write_fleet.v1"
                        ]
                    }
                ],
                "summary": "Kick fleet member",
                "tags": [
                    "Fleets"
                ],
                "x-alternate-versions": [
                    "dev",
                    "legacy",
                    "v1"
                ]
            },
            "put": {
                "description": "Move a fleet member around\n\n---\n",
                "operationId": "put_fleets_fleet_id_members_member_id",
                "parameters": [
                    {
                        "$ref": "#/parameters/datasource"
                    },
                    {
                        "description": "ID for a fleet",
                        "format": "int64",
                        "in": "path",
                        "name": "fleet_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "The character ID of a member in this fleet",
                        "format": "int32",
                        "in": "path",
                        "name": "member_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Details of the invitation",
                        "in": "body",
                        "name": "movement",
                        "required": true,
                        "schema": {
                            "description": "movement object",
                            "properties": {
                                "role": {
                                    "description": "- If a character is moved to the `fleet_commander` role, neither `wing_id` or `squad_id` should be specified - If a character is moved to the `wing_commander` role, only `wing_id` should be specified - If a character is moved to the `squad_commander` role, both `wing_id` and `squad_id` should be specified - If a character is moved to the `squad_member` role, both `wing_id` and `squad_id` should be specified\n",
                                    "enum": [
                                        "fleet_commander",
                                        "wing_commander",
                                        "squad_commander",
                                        "squad_member"
                                    ],
                                    "title": "put_fleets_fleet_id_members_member_id_role",
                                    "type": "string"
                                },
                                "squad_id": {
                                    "description": "squad_id integer",
                                    "format": "int64",
                                    "minimum": 0,
                                    "title": "put_fleets_fleet_id_members_member_id_squad_id",
                                    "type": "integer"
                                },
                                "wing_id": {
                                    "description": "wing_id integer",
                                    "format": "int64",
                                    "minimum": 0,
                                    "title": "put_fleets_fleet_id_members_member_id_wing_id",
                                    "type": "integer"
                                }
                            },
                            "required": [
                                "role"
                            ],
                            "title": "put_fleets_fleet_id_members_member_id_movement",
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/token"
                    },
                    {
                        "$ref": "#/parameters/user_agent"
                    },
                    {
                        "$ref": "#/parameters/X-User-Agent"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Fleet invitation sent"
                    },
                    "403": {
                        "description": "Forbidden",
                        "examples": {
                            "application/json": {
                                "error": "Forbidden message"
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/forbidden"
                        }
                    },
                    "404": {
                        "description": "The fleet does not exist or you don't have access to it",
                        "examples": {
                            "application/json": {
                                "error": "Not found message"
                            }
                        },
                        "schema": {
                            "description": "Not found",
                            "properties": {
                                "error": {
                                    "description": "Not found message",
                                    "title": "put_fleets_fleet_id_members_member_id_404_not_found",
                                    "type": "string"
                                }
                            },
                            "title": "put_fleets_fleet_id_members_member_id_not_found",
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Errors in invitation",
                        "examples": {
                            "application/json": {
                                "error": "missing wing_id"
                            }
                        },
                        "schema": {
                            "description": "422 unprocessable entity object",
                            "properties": {
                                "error": {
                                    "description": "error message",
                                    "title": "put_fleets_fleet_id_members_member_id_error",
                                    "type": "string"
                                }
                            },
                            "title": "put_fleets_fleet_id_members_member_id_unprocessable_entity",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "Internal server error message"
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/internal_server_error"
                        }
                    }
                },
                "security": [
                    {
                        "evesso": [
                            "esi-fleets.write_fleet.v1"
                        ]
                    }
                ],
                "summary": "Move fleet member",
                "tags": [
                    "Fleets"
                ],
                "x-alternate-versions": [
                    "dev",
                    "legacy",
                    "v1"
                ]
            }
        },
        "/v1/fleets/{fleet_id}/squads/{squad_id}/": {
            "delete": {
                "description": "Delete a fleet squad, only empty squads can be deleted\n\n---\n",
                "operationId": "delete_fleets_fleet_id_squads_squad_id",
                "parameters": [
                    {
                        "$ref": "#/parameters/datasource"
                    },
                    {
                        "description": "ID for a fleet",
                        "format": "int64",
                        "in": "path",
                        "name": "fleet_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "The squad to delete",
                        "format": "int64",
                        "in": "path",
                        "name": "squad_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "$ref": "#/parameters/token"
                    },
                    {
                        "$ref": "#/parameters/user_agent"
                    },
                    {
                        "$ref": "#/parameters/X-User-Agent"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Squad deleted"
                    },
                    "403": {
                        "description": "Forbidden",
                        "examples": {
                            "application/json": {
                                "error": "Forbidden message"
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/forbidden"
                        }
                    },
                    "404": {
                        "description": "The fleet does not exist or you don't have access to it",
                        "examples": {
                            "application/json": {
                                "error": "Not found message"
                            }
                        },
                        "schema": {
                            "description": "Not found",
                            "properties": {
                                "error": {
                                    "description": "Not found message",
                                    "title": "delete_fleets_fleet_id_squads_squad_id_404_not_found",
                                    "type": "string"
                                }
                            },
                            "title": "delete_fleets_fleet_id_squads_squad_id_not_found",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "Internal server error message"
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/internal_server_error"
                        }
                    }
                },
                "security": [
                    {
                        "evesso": [
                            "esi-fleets.write_fleet.v1"
                        ]
                    }
                ],
                "summary": "Delete fleet squad",
                "tags": [
                    "Fleets"
                ],
                "x-alternate-versions": [
                    "dev",
                    "legacy",
                    "v1"
                ]
            },
            "put": {
                "description": "Rename a fleet squad\n\n---\n",
                "operationId": "put_fleets_fleet_id_squads_squad_id",
                "parameters": [
                    {
                        "$ref": "#/parameters/datasource"
                    },
                    {
                        "description": "ID for a fleet",
                        "format": "int64",
                        "in": "path",
                        "name": "fleet_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "New name of the squad",
                        "in": "body",
                        "name": "naming",
                        "required": true,
                        "schema": {
                            "description": "naming object",
                            "properties": {
                                "name": {
                                    "description": "name string",
                                    "maxLength": 10,
                                    "title": "put_fleets_fleet_id_squads_squad_id_name",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "name"
                            ],
                            "title": "put_fleets_fleet_id_squads_squad_id_naming",
                            "type": "object"
                        }
                    },
                    {
                        "description": "The squad to rename",
                        "format": "int64",
                        "in": "path",
                        "name": "squad_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "$ref": "#/parameters/token"
                    },
                    {
                        "$ref": "#/parameters/user_agent"
                    },
                    {
                        "$ref": "#/parameters/X-User-Agent"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Squad renamed"
                    },
                    "403": {
                        "description": "Forbidden",
                        "examples": {
                            "application/json": {
                                "error": "Forbidden message"
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/forbidden"
                        }
                    },
                    "404": {
                        "description": "The fleet does not exist or you don't have access to it",
                        "examples": {
                            "application/json": {
                                "error": "Not found message"
                            }
                        },
                        "schema": {
                            "description": "Not found",
                            "properties": {
                                "error": {
                                    "description": "Not found message",
                                    "title": "put_fleets_fleet_id_squads_squad_id_404_not_found",
                                    "type": "string"
                                }
                            },
                            "title": "put_fleets_fleet_id_squads_squad_id_not_found",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "Internal server error message"
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/internal_server_error"
                        }
                    }
                },
                "security": [
                    {
                        "evesso": [
                            "esi-fleets.write_fleet.v1"
                        ]
                    }
                ],
                "summary": "Rename fleet squad",
                "tags": [
                    "Fleets"
                ],
                "x-alternate-versions": [
                    "dev",
                    "legacy",
                    "v1"
                ]
            }
        },
        "/v1/fleets/{fleet_id}/wings/": {
            "get": {
                "description": "Return information about wings in a fleet\n\n---\n\nThis route is cached for up to 5 seconds",
                "operationId": "get_fleets_fleet_id_wings",
                "parameters": [
                    {
                        "$ref": "#/parameters/datasource"
                    },
                    {
                        "description": "ID for a fleet",
                        "format": "int64",
                        "in": "path",
                        "name": "fleet_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "$ref": "#/parameters/language"
                    },
                    {
                        "$ref": "#/parameters/token"
                    },
                    {
                        "$ref": "#/parameters/user_agent"
                    },
                    {
                        "$ref": "#/parameters/X-User-Agent"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of fleet wings",
                        "examples": {
                            "application/json": [
                                {
                                    "id": 2073711261968,
                                    "name": "Wing 1",
                                    "squads": [
                                        {
                                            "id": 3129411261968,
                                            "name": "Squad 1"
                                        }
                                    ]
                                }
                            ]
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Content-Language": {
                                "description": "The language used in the response",
                                "enum": [
                                    "de",
                                    "en-us",
                                    "fr",
                                    "ja",
                                    "ru",
                                    "zh"
                                ],
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok array",
                            "items": {
                                "description": "200 ok object",
                                "properties": {
                                    "id": {
                                        "description": "id integer",
                                        "format": "int64",
                                        "title": "get_fleets_fleet_id_wings_id",
                                        "type": "integer"
                                    },
                                    "name": {
                                        "description": "name string",
                                        "title": "get_fleets_fleet_id_wings_name",
                                        "type": "string"
                                    },
                                    "squads": {
                                        "description": "squads array",
                                        "items": {
                                            "description": "squad object",
                                            "properties": {
                                                "id": {
                                                    "description": "id integer",
                                                    "format": "int64",
                                                    "title": "get_fleets_fleet_id_wings_id",
                                                    "type": "integer"
                                                },
                                                "name": {
                                                    "description": "name string",
                                                    "title": "get_fleets_fleet_id_wings_name",
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "name",
                                                "id"
                                            ],
                                            "title": "get_fleets_fleet_id_wings_squad",
                                            "type": "object"
                                        },
                                        "maxItems": 25,
                                        "title": "get_fleets_fleet_id_wings_squads",
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "name",
                                    "id",
                                    "squads"
                                ],
                                "title": "get_fleets_fleet_id_wings_200_ok",
                                "type": "object"
                            },
                            "maxItems": 25,
                            "title": "get_fleets_fleet_id_wings_ok",
                            "type": "array"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "examples": {
                            "application/json": {
                                "error": "Forbidden message"
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/forbidden"
                        }
                    },
                    "404": {
                        "description": "The fleet does not exist or you don't have access to it",
                        "examples": {
                            "application/json": {
                                "error": "Not found message"
                            }
                        },
                        "schema": {
                            "description": "Not found",
                            "properties": {
                                "error": {
                                    "description": "Not found message",
                                    "title": "get_fleets_fleet_id_wings_404_not_found",
                                    "type": "string"
                                }
                            },
                            "title": "get_fleets_fleet_id_wings_not_found",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "Internal server error message"
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/internal_server_error"
                        }
                    }
                },
                "security": [
                    {
                        "evesso": [
                            "esi-fleets.read_fleet.v1"
                        ]
                    }
                ],
                "summary": "Get fleet wings",
                "tags": [
                    "Fleets"
                ],
                "x-alternate-versions": [
                    "dev",
                    "legacy",
                    "v1"
                ],
                "x-cached-seconds": 5
            },
            "post": {
                "description": "Create a new wing in a fleet\n\n---\n",
                "operationId": "post_fleets_fleet_id_wings",
                "parameters": [
                    {
                        "$ref": "#/parameters/datasource"
                    },
                    {
                        "description": "ID for a fleet",
                        "format": "int64",
                        "in": "path",
                        "name": "fleet_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "$ref": "#/parameters/token"
                    },
                    {
                        "$ref": "#/parameters/user_agent"
                    },
                    {
                        "$ref": "#/parameters/X-User-Agent"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Wing created",
                        "examples": {
                            "application/json": {
                                "wing_id": 123
                            }
                        },
                        "schema": {
                            "description": "201 created object",
                            "properties": {
                                "wing_id": {
                                    "description": "The wing_id of the newly created wing",
                                    "format": "int64",
                                    "title": "post_fleets_fleet_id_wings_wing_id",
                                    "type": "integer"
                                }
                            },
                            "required": [
                                "wing_id"
                            ],
                            "title": "post_fleets_fleet_id_wings_created",
                            "type": "object"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "examples": {
                            "application/json": {
                                "error": "Forbidden message"
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/forbidden"
                        }
                    },
                    "404": {
                        "description": "The fleet does not exist or you don't have access to it",
                        "examples": {
                            "application/json": {
                                "error": "Not found message"
                            }
                        },
                        "schema": {
                            "description": "Not found",
                            "properties": {
                                "error": {
                                    "description": "Not found message",
                                    "title": "post_fleets_fleet_id_wings_404_not_found",
                                    "type": "string"
                                }
                            },
                            "title": "post_fleets_fleet_id_wings_not_found",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "Internal server error message"
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/internal_server_error"
                        }
                    }
                },
                "security": [
                    {
                        "evesso": [
                            "esi-fleets.write_fleet.v1"
                        ]
                    }
                ],
                "summary": "Create fleet wing",
                "tags": [
                    "Fleets"
                ],
                "x-alternate-versions": [
                    "dev",
                    "legacy",
                    "v1"
                ]
            }
        },
        "/v1/fleets/{fleet_id}/wings/{wing_id}/": {
            "delete": {
                "description": "Delete a fleet wing, only empty wings can be deleted. The wing may contain squads, but the squads must be empty\n\n---\n",
                "operationId": "delete_fleets_fleet_id_wings_wing_id",
                "parameters": [
                    {
                        "$ref": "#/parameters/datasource"
                    },
                    {
                        "description": "ID for a fleet",
                        "format": "int64",
                        "in": "path",
                        "name": "fleet_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "$ref": "#/parameters/token"
                    },
                    {
                        "$ref": "#/parameters/user_agent"
                    },
                    {
                        "description": "The wing to delete",
                        "format": "int64",
                        "in": "path",
                        "name": "wing_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "$ref": "#/parameters/X-User-Agent"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Wing deleted"
                    },
                    "403": {
                        "description": "Forbidden",
                        "examples": {
                            "application/json": {
                                "error": "Forbidden message"
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/forbidden"
                        }
                    },
                    "404": {
                        "description": "The fleet does not exist or you don't have access to it",
                        "examples": {
                            "application/json": {
                                "error": "Not found message"
                            }
                        },
                        "schema": {
                            "description": "Not found",
                            "properties": {
                                "error": {
                                    "description": "Not found message",
                                    "title": "delete_fleets_fleet_id_wings_wing_id_404_not_found",
                                    "type": "string"
                                }
                            },
                            "title": "delete_fleets_fleet_id_wings_wing_id_not_found",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "Internal server error message"
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/internal_server_error"
                        }
                    }
                },
                "security": [
                    {
                        "evesso": [
                            "esi-fleets.write_fleet.v1"
                        ]
                    }
                ],
                "summary": "Delete fleet wing",
                "tags": [
                    "Fleets"
                ],
                "x-alternate-versions": [
                    "dev",
                    "legacy",
                    "v1"
                ]
            },
            "put": {
                "description": "Rename a fleet wing\n\n---\n",
                "operationId": "put_fleets_fleet_id_wings_wing_id",
                "parameters": [
                    {
                        "$ref": "#/parameters/datasource"
                    },
                    {
                        "description": "ID for a fleet",
                        "format": "int64",
                        "in": "path",
                        "name": "fleet_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "New name of the wing",
                        "in": "body",
                        "name": "naming",
                        "required": true,
                        "schema": {
                            "description": "naming object",
                            "properties": {
                                "name": {
                                    "description": "name string",
                                    "maxLength": 10,
                                    "title": "put_fleets_fleet_id_wings_wing_id_name",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "name"
                            ],
                            "title": "put_fleets_fleet_id_wings_wing_id_naming",
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/token"
                    },
                    {
                        "$ref": "#/parameters/user_agent"
                    },
                    {
                        "description": "The wing to rename",
                        "format": "int64",
                        "in": "path",
                        "name": "wing_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "$ref": "#/parameters/X-User-Agent"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Wing renamed"
                    },
                    "403": {
                        "description": "Forbidden",
                        "examples": {
                            "application/json": {
                                "error": "Forbidden message"
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/forbidden"
                        }
                    },
                    "404": {
                        "description": "The fleet does not exist or you don't have access to it",
                        "examples": {
                            "application/json": {
                                "error": "Not found message"
                            }
                        },
                        "schema": {
                            "description": "Not found",
                            "properties": {
                                "error": {
                                    "description": "Not found message",
                                    "title": "put_fleets_fleet_id_wings_wing_id_404_not_found",
                                    "type": "string"
                                }
                            },
                            "title": "put_fleets_fleet_id_wings_wing_id_not_found",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "Internal server error message"
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/internal_server_error"
                        }
                    }
                },
                "security": [
                    {
                        "evesso": [
                            "esi-fleets.write_fleet.v1"
                        ]
                    }
                ],
                "summary": "Rename fleet wing",
                "tags": [
                    "Fleets"
                ],
                "x-alternate-versions": [
                    "dev",
                    "legacy",
                    "v1"
                ]
            }
        },
        "/v1/fleets/{fleet_id}/wings/{wing_id}/squads/": {
            "post": {
                "description": "Create a new squad in a fleet\n\n---\n",
                "operationId": "post_fleets_fleet_id_wings_wing_id_squads",
                "parameters": [
                    {
                        "$ref": "#/parameters/datasource"
                    },
                    {
                        "description": "ID for a fleet",
                        "format": "int64",
                        "in": "path",
                        "name": "fleet_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "$ref": "#/parameters/token"
                    },
                    {
                        "$ref": "#/parameters/user_agent"
                    },
                    {
                        "description": "The wing_id to create squad in",
                        "format": "int64",
                        "in": "path",
                        "name": "wing_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "$ref": "#/parameters/X-User-Agent"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Squad created",
                        "examples": {
                            "application/json": {
                                "squad_id": 123
                            }
                        },
                        "schema": {
                            "description": "201 created object",
                            "properties": {
                                "squad_id": {
                                    "description": "The squad_id of the newly created squad",
                                    "format": "int64",
                                    "title": "post_fleets_fleet_id_wings_wing_id_squads_squad_id",
                                    "type": "integer"
                                }
                            },
                            "required": [
                                "squad_id"
                            ],
                            "title": "post_fleets_fleet_id_wings_wing_id_squads_created",
                            "type": "object"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "examples": {
                            "application/json": {
                                "error": "Forbidden message"
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/forbidden"
                        }
                    },
                    "404": {
                        "description": "The fleet does not exist or you don't have access to it",
                        "examples": {
                            "application/json": {
                                "error": "Not found message"
                            }
                        },
                        "schema": {
                            "description": "Not found",
                            "properties": {
                                "error": {
                                    "description": "Not found message",
                                    "title": "post_fleets_fleet_id_wings_wing_id_squads_404_not_found",
                                    "type": "string"
                                }
                            },
                            "title": "post_fleets_fleet_id_wings_wing_id_squads_not_found",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "Internal server error message"
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/internal_server_error"
                        }
                    }
                },
                "security": [
                    {
                        "evesso": [
                            "esi-fleets.write_fleet.v1"
                        ]
                    }
                ],
                "summary": "Create fleet squad",
                "tags": [
                    "Fleets"
                ],
                "x-alternate-versions": [
                    "dev",
                    "legacy",
                    "v1"
                ]
            }
        },
        "/v1/incursions/": {
            "get": {
                "description": "Return a list of current incursions\n\n---\n\nThis route is cached for up to 300 seconds",
                "operationId": "get_incursions",
                "parameters": [
                    {
                        "$ref": "#/parameters/datasource"
                    },
                    {
                        "$ref": "#/parameters/user_agent"
                    },
                    {
                        "$ref": "#/parameters/X-User-Agent"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of incursions",
                        "examples": {
                            "application/json": [
                                {
                                    "constellation_id": 20000607,
                                    "faction_id": 500019,
                                    "has_boss": true,
                                    "infested_solar_systems": [
                                        30004148,
                                        30004149,
                                        30004150,
                                        30004151,
                                        30004152,
                                        30004153,
                                        30004154
                                    ],
                                    "influence": 1.0,
                                    "staging_solar_system_id": 30004154,
                                    "state": "mobilizing",
                                    "type": "Incursion"
                                }
                            ]
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok array",
                            "items": {
                                "description": "200 ok object",
                                "properties": {
                                    "constellation_id": {
                                        "description": "The constellation id in which this incursion takes place",
                                        "format": "int32",
                                        "title": "get_incursions_constellation_id",
                                        "type": "integer"
                                    },
                                    "faction_id": {
                                        "description": "The attacking faction's id",
                                        "format": "int32",
                                        "title": "get_incursions_faction_id",
                                        "type": "integer"
                                    },
                                    "has_boss": {
                                        "description": "Whether the final encounter has boss or not",
                                        "title": "get_incursions_has_boss",
                                        "type": "boolean"
                                    },
                                    "infested_solar_systems": {
                                        "description": "A list of infested solar system ids that are a part of this incursion",
                                        "items": {
                                            "description": "infested_solar_system integer",
                                            "format": "int32",
                                            "title": "get_incursions_infested_solar_system",
                                            "type": "integer"
                                        },
                                        "maxItems": 100,
                                        "title": "get_incursions_infested_solar_systems",
                                        "type": "array"
                                    },
                                    "influence": {
                                        "description": "Influence of this incursion as a float from 0 to 1",
                                        "format": "float",
                                        "title": "get_incursions_influence",
                                        "type": "number"
                                    },
                                    "staging_solar_system_id": {
                                        "description": "Staging solar system for this incursion",
                                        "format": "int32",
                                        "title": "get_incursions_staging_solar_system_id",
                                        "type": "integer"
                                    },
                                    "state": {
                                        "description": "The state of this incursion",
                                        "enum": [
                                            "withdrawing",
                                            "mobilizing",
                                            "established"
                                        ],
                                        "title": "get_incursions_state",
                                        "type": "string"
                                    },
                                    "type": {
                                        "description": "The type of this incursion",
                                        "title": "get_incursions_type",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "type",
                                    "state",
                                    "influence",
                                    "has_boss",
                                    "faction_id",
                                    "constellation_id",
                                    "staging_solar_system_id",
                                    "infested_solar_systems"
                                ],
                                "title": "get_incursions_200_ok",
                                "type": "object"
                            },
                            "maxItems": 100,
                            "title": "get_incursions_ok",
                            "type": "array"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "Internal server error message"
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/internal_server_error"
                        }
                    }
                },
                "summary": "List incursions",
                "tags": [
                    "Incursions"
                ],
                "x-alternate-versions": [
                    "dev",
                    "legacy",
                    "v1"
                ],
                "x-cached-seconds": 300
            }
        },
        "/v1/industry/facilities/": {
            "get": {
                "description": "Return a list of industry facilities\n\n---\n\nThis route is cached for up to 3600 seconds",
                "operationId": "get_industry_facilities",
                "parameters": [
                    {
                        "$ref": "#/parameters/datasource"
                    },
                    {
                        "$ref": "#/parameters/user_agent"
                    },
                    {
                        "$ref": "#/parameters/X-User-Agent"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of prices",
                        "examples": {
                            "application/json": [
                                {
                                    "facility_id": 60012544,
                                    "owner_id": 1000126,
                                    "region_id": 10000001,
                                    "solar_system_id": 30000032,
                                    "tax": 0.1,
                                    "type_id": 2502
                                }
                            ]
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok array",
                            "items": {
                                "description": "200 ok object",
                                "properties": {
                                    "facility_id": {
                                        "description": "ID of the facility",
                                        "format": "int64",
                                        "title": "get_industry_facilities_facility_id",
                                        "type": "integer"
                                    },
                                    "owner_id": {
                                        "description": "Owner of the facility",
                                        "format": "int32",
                                        "title": "get_industry_facilities_owner_id",
                                        "type": "integer"
                                    },
                                    "region_id": {
                                        "description": "Region ID where the facility is",
                                        "format": "int32",
                                        "title": "get_industry_facilities_region_id",
                                        "type": "integer"
                                    },
                                    "solar_system_id": {
                                        "description": "Solar system ID where the facility is",
                                        "format": "int32",
                                        "title": "get_industry_facilities_solar_system_id",
                                        "type": "integer"
                                    },
                                    "tax": {
                                        "description": "Tax imposed by the facility",
                                        "format": "float",
                                        "title": "get_industry_facilities_tax",
                                        "type": "number"
                                    },
                                    "type_id": {
                                        "description": "Type ID of the facility",
                                        "format": "int32",
                                        "title": "get_industry_facilities_type_id",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "facility_id",
                                    "owner_id",
                                    "type_id",
                                    "solar_system_id",
                                    "region_id"
                                ],
                                "title": "get_industry_facilities_200_ok",
                                "type": "object"
                            },
                            "maxItems": 10000,
                            "title": "get_industry_facilities_ok",
                            "type": "array"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "Internal server error message"
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/internal_server_error"
                        }
                    }
                },
                "summary": "List industry facilities",
                "tags": [
                    "Industry"
                ],
                "x-alternate-versions": [
                    "dev",
                    "legacy",
                    "v1"
                ],
                "x-cached-seconds": 3600
            }
        },
        "/v1/industry/systems/": {
            "get": {
                "description": "Return cost indices for solar systems\n\n---\n\nThis route is cached for up to 3600 seconds",
                "operationId": "get_industry_systems",
                "parameters": [
                    {
                        "$ref": "#/parameters/datasource"
                    },
                    {
                        "$ref": "#/parameters/user_agent"
                    },
                    {
                        "$ref": "#/parameters/X-User-Agent"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of cost indicies",
                        "examples": {
                            "application/json": [
                                {
                                    "cost_indices": [
                                        {
                                            "activity": "invention",
                                            "cost_index": 0.00480411064973412
                                        }
                                    ],
                                    "solar_system_id": 30011392
                                }
                            ]
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok array",
                            "items": {
                                "description": "200 ok object",
                                "properties": {
                                    "cost_indices": {
                                        "description": "cost_indices array",
                                        "items": {
                                            "description": "cost_indice object",
                                            "properties": {
                                                "activity": {
                                                    "description": "activity string",
                                                    "enum": [
                                                        "none",
                                                        "manufacturing",
                                                        "researching_technology",
                                                        "researching_time_efficiency",
                                                        "researching_material_efficiency",
                                                        "copying",
                                                        "duplicating",
                                                        "invention",
                                                        "reverse_engineering"
                                                    ],
                                                    "title": "get_industry_systems_activity",
                                                    "type": "string"
                                                },
                                                "cost_index": {
                                                    "description": "cost_index number",
                                                    "format": "float",
                                                    "title": "get_industry_systems_cost_index",
                                                    "type": "number"
                                                }
                                            },
                                            "required": [
                                                "activity",
                                                "cost_index"
                                            ],
                                            "title": "get_industry_systems_cost_indice",
                                            "type": "object"
                                        },
                                        "maxItems": 10,
                                        "title": "get_industry_systems_cost_indices",
                                        "type": "array"
                                    },
                                    "solar_system_id": {
                                        "description": "solar_system_id integer",
                                        "format": "int32",
                                        "title": "get_industry_systems_solar_system_id",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "solar_system_id",
                                    "cost_indices"
                                ],
                                "title": "get_industry_systems_200_ok",
                                "type": "object"
                            },
                            "maxItems": 10000,
                            "title": "get_industry_systems_ok",
                            "type": "array"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "Internal server error message"
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/internal_server_error"
                        }
                    }
                },
                "summary": "List solar system cost indices",
                "tags": [
                    "Industry"
                ],
                "x-alternate-versions": [
                    "dev",
                    "legacy",
                    "v1"
                ],
                "x-cached-seconds": 3600
            }
        },
        "/v1/killmails/{killmail_id}/{killmail_hash}/": {
            "get": {
                "description": "Return a single killmail from its ID and hash\n\n---\n\nThis route is cached for up to 3600 seconds",
                "operationId": "get_killmails_killmail_id_killmail_hash",
                "parameters": [
                    {
                        "$ref": "#/parameters/datasource"
                    },
                    {
                        "description": "The killmail hash for verification",
                        "in": "path",
                        "name": "killmail_hash",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The killmail ID to be queried",
                        "format": "int32",
                        "in": "path",
                        "name": "killmail_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "$ref": "#/parameters/user_agent"
                    },
                    {
                        "$ref": "#/parameters/X-User-Agent"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A killmail",
                        "examples": {
                            "application/json": {
                                "attackers": [
                                    {
                                        "character_id": 95810944,
                                        "corporation_id": 1000179,
                                        "damage_done": 5745,
                                        "faction_id": 500003,
                                        "final_blow": true,
                                        "security_status": -0.3,
                                        "ship_type_id": 17841,
                                        "weapon_type_id": 3074
                                    }
                                ],
                                "killmail_id": 56733821,
                                "killmail_time": "2016-10-22T17:13:36Z",
                                "solar_system_id": 30002976,
                                "victim": {
                                    "alliance_id": 621338554,
                                    "character_id": 92796241,
                                    "corporation_id": 841363671,
                                    "damage_taken": 5745,
                                    "items": [
                                        {
                                            "flag": 20,
                                            "item_type_id": 5973,
                                            "quantity_dropped": 1,
                                            "singleton": 0
                                        }
                                    ],
                                    "position": {
                                        "x": 452186600569.4748,
                                        "y": 146704961490.90222,
                                        "z": 109514596532.54477
                                    },
                                    "ship_type_id": 17812
                                }
                            }
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok object",
                            "properties": {
                                "attackers": {
                                    "description": "attackers array",
                                    "items": {
                                        "description": "attacker object",
                                        "properties": {
                                            "alliance_id": {
                                                "description": "alliance_id integer",
                                                "format": "int32",
                                                "title": "get_killmails_killmail_id_killmail_hash_alliance_id",
                                                "type": "integer"
                                            },
                                            "character_id": {
                                                "description": "character_id integer",
                                                "format": "int32",
                                                "title": "get_killmails_killmail_id_killmail_hash_character_id",
                                                "type": "integer"
                                            },
                                            "corporation_id": {
                                                "description": "corporation_id integer",
                                                "format": "int32",
                                                "title": "get_killmails_killmail_id_killmail_hash_corporation_id",
                                                "type": "integer"
                                            },
                                            "damage_done": {
                                                "description": "damage_done integer",
                                                "format": "int32",
                                                "title": "get_killmails_killmail_id_killmail_hash_damage_done",
                                                "type": "integer"
                                            },
                                            "faction_id": {
                                                "description": "faction_id integer",
                                                "format": "int32",
                                                "title": "get_killmails_killmail_id_killmail_hash_faction_id",
                                                "type": "integer"
                                            },
                                            "final_blow": {
                                                "description": "Was the attacker the one to achieve the final blow\n",
                                                "title": "get_killmails_killmail_id_killmail_hash_final_blow",
                                                "type": "boolean"
                                            },
                                            "security_status": {
                                                "description": "Security status for the attacker\n",
                                                "format": "float",
                                                "title": "get_killmails_killmail_id_killmail_hash_security_status",
                                                "type": "number"
                                            },
                                            "ship_type_id": {
                                                "description": "What ship was the attacker flying\n",
                                                "format": "int32",
                                                "title": "get_killmails_killmail_id_killmail_hash_ship_type_id",
                                                "type": "integer"
                                            },
                                            "weapon_type_id": {
                                                "description": "What weapon was used by the attacker for the kill\n",
                                                "format": "int32",
                                                "title": "get_killmails_killmail_id_killmail_hash_weapon_type_id",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "security_status",
                                            "final_blow",
                                            "damage_done"
                                        ],
                                        "title": "get_killmails_killmail_id_killmail_hash_attacker",
                                        "type": "object"
                                    },
                                    "maxItems": 10000,
                                    "title": "get_killmails_killmail_id_killmail_hash_attackers",
                                    "type": "array"
                                },
                                "killmail_id": {
                                    "description": "ID of the killmail",
                                    "format": "int32",
                                    "title": "get_killmails_killmail_id_killmail_hash_killmail_id",
                                    "type": "integer"
                                },
                                "killmail_time": {
                                    "description": "Time that the victim was killed and the killmail generated\n",
                                    "format": "date-time",
                                    "title": "get_killmails_killmail_id_killmail_hash_killmail_time",
                                    "type": "string"
                                },
                                "moon_id": {
                                    "description": "Moon if the kill took place at one",
                                    "format": "int32",
                                    "title": "get_killmails_killmail_id_killmail_hash_moon_id",
                                    "type": "integer"
                                },
                                "solar_system_id": {
                                    "description": "Solar system that the kill took place in\n",
                                    "format": "int32",
                                    "title": "get_killmails_killmail_id_killmail_hash_solar_system_id",
                                    "type": "integer"
                                },
                                "victim": {
                                    "description": "victim object",
                                    "properties": {
                                        "alliance_id": {
                                            "description": "alliance_id integer",
                                            "format": "int32",
                                            "title": "get_killmails_killmail_id_killmail_hash_alliance_id",
                                            "type": "integer"
                                        },
                                        "character_id": {
                                            "description": "character_id integer",
                                            "format": "int32",
                                            "title": "get_killmails_killmail_id_killmail_hash_character_id",
                                            "type": "integer"
                                        },
                                        "corporation_id": {
                                            "description": "corporation_id integer",
                                            "format": "int32",
                                            "title": "get_killmails_killmail_id_killmail_hash_corporation_id",
                                            "type": "integer"
                                        },
                                        "damage_taken": {
                                            "description": "How much total damage was taken by the victim\n",
                                            "format": "int32",
                                            "title": "get_killmails_killmail_id_killmail_hash_damage_taken",
                                            "type": "integer"
                                        },
                                        "faction_id": {
                                            "description": "faction_id integer",
                                            "format": "int32",
                                            "title": "get_killmails_killmail_id_killmail_hash_faction_id",
                                            "type": "integer"
                                        },
                                        "items": {
                                            "description": "items array",
                                            "items": {
                                                "description": "item object",
                                                "properties": {
                                                    "flag": {
                                                        "description": "Flag for the location of the item\n",
                                                        "format": "int32",
                                                        "title": "get_killmails_killmail_id_killmail_hash_flag",
                                                        "type": "integer"
                                                    },
                                                    "item_type_id": {
                                                        "description": "item_type_id integer",
                                                        "format": "int32",
                                                        "title": "get_killmails_killmail_id_killmail_hash_item_type_id",
                                                        "type": "integer"
                                                    },
                                                    "items": {
                                                        "description": "items array",
                                                        "items": {
                                                            "description": "item object",
                                                            "properties": {
                                                                "flag": {
                                                                    "description": "flag integer",
                                                                    "format": "int32",
                                                                    "title": "get_killmails_killmail_id_killmail_hash_flag",
                                                                    "type": "integer"
                                                                },
                                                                "item_type_id": {
                                                                    "description": "item_type_id integer",
                                                                    "format": "int32",
                                                                    "title": "get_killmails_killmail_id_killmail_hash_item_type_id",
                                                                    "type": "integer"
                                                                },
                                                                "quantity_destroyed": {
                                                                    "description": "quantity_destroyed integer",
                                                                    "format": "int64",
                                                                    "title": "get_killmails_killmail_id_killmail_hash_quantity_destroyed",
                                                                    "type": "integer"
                                                                },
                                                                "quantity_dropped": {
                                                                    "description": "quantity_dropped integer",
                                                                    "format": "int64",
                                                                    "title": "get_killmails_killmail_id_killmail_hash_quantity_dropped",
                                                                    "type": "integer"
                                                                },
                                                                "singleton": {
                                                                    "description": "singleton integer",
                                                                    "format": "int32",
                                                                    "title": "get_killmails_killmail_id_killmail_hash_singleton",
                                                                    "type": "integer"
                                                                }
                                                            },
                                                            "required": [
                                                                "item_type_id",
                                                                "singleton",
                                                                "flag"
                                                            ],
                                                            "title": "get_killmails_killmail_id_killmail_hash_item",
                                                            "type": "object"
                                                        },
                                                        "maxItems": 10000,
                                                        "title": "get_killmails_killmail_id_killmail_hash_items",
                                                        "type": "array"
                                                    },
                                                    "quantity_destroyed": {
                                                        "description": "How many of the item were destroyed if any\n",
                                                        "format": "int64",
                                                        "title": "get_killmails_killmail_id_killmail_hash_quantity_destroyed",
                                                        "type": "integer"
                                                    },
                                                    "quantity_dropped": {
                                                        "description": "How many of the item were dropped if any\n",
                                                        "format": "int64",
                                                        "title": "get_killmails_killmail_id_killmail_hash_quantity_dropped",
                                                        "type": "integer"
                                                    },
                                                    "singleton": {
                                                        "description": "singleton integer",
                                                        "format": "int32",
                                                        "title": "get_killmails_killmail_id_killmail_hash_singleton",
                                                        "type": "integer"
                                                    }
                                                },
                                                "required": [
                                                    "item_type_id",
                                                    "singleton",
                                                    "flag"
                                                ],
                                                "title": "get_killmails_killmail_id_killmail_hash_item",
                                                "type": "object"
                                            },
                                            "maxItems": 10000,
                                            "title": "get_killmails_killmail_id_killmail_hash_items",
                                            "type": "array"
                                        },
                                        "position": {
                                            "description": "Coordinates of the victim in Cartesian space relative to the Sun\n",
                                            "properties": {
                                                "x": {
                                                    "description": "x number",
                                                    "format": "float",
                                                    "title": "get_killmails_killmail_id_killmail_hash_x",
                                                    "type": "number"
                                                },
                                                "y": {
                                                    "description": "y number",
                                                    "format": "float",
                                                    "title": "get_killmails_killmail_id_killmail_hash_y",
                                                    "type": "number"
                                                },
                                                "z": {
                                                    "description": "z number",
                                                    "format": "float",
                                                    "title": "get_killmails_killmail_id_killmail_hash_z",
                                                    "type": "number"
                                                }
                                            },
                                            "required": [
                                                "x",
                                                "y",
                                                "z"
                                            ],
                                            "title": "get_killmails_killmail_id_killmail_hash_position",
                                            "type": "object"
                                        },
                                        "ship_type_id": {
                                            "description": "The ship that the victim was piloting and was destroyed\n",
                                            "format": "int32",
                                            "title": "get_killmails_killmail_id_killmail_hash_ship_type_id",
                                            "type": "integer"
                                        }
                                    },
                                    "required": [
                                        "damage_taken",
                                        "ship_type_id"
                                    ],
                                    "title": "get_killmails_killmail_id_killmail_hash_victim",
                                    "type": "object"
                                },
                                "war_id": {
                                    "description": "War if the killmail is generated in relation to an official war\n",
                                    "format": "int32",
                                    "title": "get_killmails_killmail_id_killmail_hash_war_id",
                                    "type": "integer"
                                }
                            },
                            "required": [
                                "killmail_id",
                                "killmail_time",
                                "victim",
                                "attackers",
                                "solar_system_id"
                            ],
                            "title": "get_killmails_killmail_id_killmail_hash_ok",
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Invalid killmail_id and/or killmail_hash",
                        "examples": {
                            "application/json": {
                                "error": "Unprocessable entity message"
                            }
                        },
                        "schema": {
                            "description": "Unprocessable entity",
                            "properties": {
                                "error": {
                                    "description": "Unprocessable entity message",
                                    "title": "get_killmails_killmail_id_killmail_hash_422_unprocessable_entity",
                                    "type": "string"
                                }
                            },
                            "title": "get_killmails_killmail_id_killmail_hash_unprocessable_entity",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "Internal server error message"
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/internal_server_error"
                        }
                    }
                },
                "summary": "Get a single killmail",
                "tags": [
                    "Killmails"
                ],
                "x-alternate-versions": [
                    "dev",
                    "legacy",
                    "v1"
                ],
                "x-cached-seconds": 3600
            }
        },
        "/v1/route/{origin}/{destination}/": {
            "get": {
                "description": "Get the systems between origin and destination\n\n---\n\nThis route is cached for up to 86400 seconds",
                "operationId": "get_route_origin_destination",
                "parameters": [
                    {
                        "description": "avoid solar system ID(s)",
                        "in": "query",
                        "items": {
                            "format": "int32",
                            "type": "integer"
                        },
                        "maxItems": 100,
                        "name": "avoid",
                        "type": "array",
                        "uniqueItems": true
                    },
                    {
                        "description": "connected solar system pairs",
                        "in": "query",
                        "items": {
                            "collectionFormat": "pipes",
                            "items": {
                                "format": "int32",
                                "type": "integer"
                            },
                            "maxItems": 2,
                            "minItems": 2,
                            "type": "array",
                            "uniqueItems": true
                        },
                        "maxItems": 100,
                        "name": "connections",
                        "type": "array",
                        "uniqueItems": true
                    },
                    {
                        "$ref": "#/parameters/datasource"
                    },
                    {
                        "description": "destination solar system ID",
                        "format": "int32",
                        "in": "path",
                        "name": "destination",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "default": "shortest",
                        "description": "route security preference",
                        "enum": [
                            "shortest",
                            "secure",
                            "insecure"
                        ],
                        "in": "query",
                        "name": "flag",
                        "type": "string"
                    },
                    {
                        "description": "origin solar system ID",
                        "format": "int32",
                        "in": "path",
                        "name": "origin",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "$ref": "#/parameters/user_agent"
                    },
                    {
                        "$ref": "#/parameters/X-User-Agent"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Solar systems in route from origin to destination",
                        "examples": {
                            "application/json": [
                                30002771,
                                30002770,
                                30002769,
                                30002772
                            ]
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "Solar systems in route",
                            "items": {
                                "description": "Solar system in route",
                                "format": "int32",
                                "title": "Solar system ID",
                                "type": "integer"
                            },
                            "maxItems": 1000,
                            "title": "get_route_origin_destination_ok",
                            "type": "array"
                        }
                    },
                    "404": {
                        "description": "No route found",
                        "examples": {
                            "application/json": {
                                "error": "Not found message"
                            }
                        },
                        "schema": {
                            "description": "Not found",
                            "properties": {
                                "error": {
                                    "description": "Not found message",
                                    "title": "get_route_origin_destination_404_not_found",
                                    "type": "string"
                                }
                            },
                            "title": "get_route_origin_destination_not_found",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "Internal server error message"
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/internal_server_error"
                        }
                    }
                },
                "summary": "Get route",
                "tags": [
                    "Routes"
                ],
                "x-alternate-versions": [
                    "dev",
                    "legacy",
                    "v1"
                ],
                "x-cached-seconds": 86400
            }
        },
        "/v1/sovereignty/campaigns/": {
            "get": {
                "description": "Shows sovereignty data for campaigns.\n\n---\n\nThis route is cached for up to 5 seconds",
                "operationId": "get_sovereignty_campaigns",
                "parameters": [
                    {
                        "$ref": "#/parameters/datasource"
                    },
                    {
                        "$ref": "#/parameters/user_agent"
                    },
                    {
                        "$ref": "#/parameters/X-User-Agent"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of sovereignty campaigns",
                        "examples": {
                            "application/json": [
                                {
                                    "attackers_score": 0.4,
                                    "campaign_id": 32833,
                                    "constellation_id": 20000125,
                                    "defender_id": 1695357456,
                                    "defender_score": 0.6,
                                    "event_type": "station_defense",
                                    "solar_system_id": 30000856,
                                    "start_time": "2016-10-29T14:34:40Z",
                                    "structure_id": 61001096
                                }
                            ]
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok array",
                            "items": {
                                "description": "200 ok object",
                                "properties": {
                                    "attackers_score": {
                                        "description": "Score for all attacking parties, only present in Defense Events.\n",
                                        "format": "float",
                                        "title": "get_sovereignty_campaigns_attackers_score",
                                        "type": "number"
                                    },
                                    "campaign_id": {
                                        "description": "Unique ID for this campaign.",
                                        "format": "int32",
                                        "title": "get_sovereignty_campaigns_campaign_id",
                                        "type": "integer"
                                    },
                                    "constellation_id": {
                                        "description": "The constellation in which the campaign will take place.\n",
                                        "format": "int32",
                                        "title": "get_sovereignty_campaigns_constellation_id",
                                        "type": "integer"
                                    },
                                    "defender_id": {
                                        "description": "Defending alliance, only present in Defense Events\n",
                                        "format": "int32",
                                        "title": "get_sovereignty_campaigns_defender_id",
                                        "type": "integer"
                                    },
                                    "defender_score": {
                                        "description": "Score for the defending alliance, only present in Defense Events.\n",
                                        "format": "float",
                                        "title": "get_sovereignty_campaigns_defender_score",
                                        "type": "number"
                                    },
                                    "event_type": {
                                        "description": "Type of event this campaign is for. tcu_defense, ihub_defense and station_defense are referred to as \"Defense Events\", station_freeport as \"Freeport Events\".\n",
                                        "enum": [
                                            "tcu_defense",
                                            "ihub_defense",
                                            "station_defense",
                                            "station_freeport"
                                        ],
                                        "title": "get_sovereignty_campaigns_event_type",
                                        "type": "string"
                                    },
                                    "participants": {
                                        "description": "Alliance participating and their respective scores, only present in Freeport Events.\n",
                                        "items": {
                                            "description": "participant object",
                                            "properties": {
                                                "alliance_id": {
                                                    "description": "alliance_id integer",
                                                    "format": "int32",
                                                    "title": "get_sovereignty_campaigns_alliance_id",
                                                    "type": "integer"
                                                },
                                                "score": {
                                                    "description": "score number",
                                                    "format": "float",
                                                    "title": "get_sovereignty_campaigns_score",
                                                    "type": "number"
                                                }
                                            },
                                            "required": [
                                                "alliance_id",
                                                "score"
                                            ],
                                            "title": "get_sovereignty_campaigns_participant",
                                            "type": "object"
                                        },
                                        "maxItems": 5000,
                                        "title": "get_sovereignty_campaigns_participants",
                                        "type": "array"
                                    },
                                    "solar_system_id": {
                                        "description": "The solar system the structure is located in.\n",
                                        "format": "int32",
                                        "title": "get_sovereignty_campaigns_solar_system_id",
                                        "type": "integer"
                                    },
                                    "start_time": {
                                        "description": "Time the event is scheduled to start.\n",
                                        "format": "date-time",
                                        "title": "get_sovereignty_campaigns_start_time",
                                        "type": "string"
                                    },
                                    "structure_id": {
                                        "description": "The structure item ID that is related to this campaign.\n",
                                        "format": "int64",
                                        "title": "get_sovereignty_campaigns_structure_id",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "campaign_id",
                                    "structure_id",
                                    "solar_system_id",
                                    "constellation_id",
                                    "event_type",
                                    "start_time"
                                ],
                                "title": "get_sovereignty_campaigns_200_ok",
                                "type": "object"
                            },
                            "maxItems": 10000,
                            "title": "get_sovereignty_campaigns_ok",
                            "type": "array"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "Internal server error message"
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/internal_server_error"
                        }
                    }
                },
                "summary": "List sovereignty campaigns",
                "tags": [
                    "Sovereignty"
                ],
                "x-alternate-versions": [
                    "dev",
                    "legacy",
                    "v1"
                ],
                "x-cached-seconds": 5
            }
        },
        "/v1/sovereignty/map/": {
            "get": {
                "description": "Shows sovereignty information for solar systems\n\n---\n\nThis route is cached for up to 3600 seconds",
                "operationId": "get_sovereignty_map",
                "parameters": [
                    {
                        "$ref": "#/parameters/datasource"
                    },
                    {
                        "$ref": "#/parameters/user_agent"
                    },
                    {
                        "$ref": "#/parameters/X-User-Agent"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of sovereignty information for solar systems in New Eden",
                        "examples": {
                            "application/json": [
                                {
                                    "faction_id": 500001,
                                    "system_id": 30045334
                                }
                            ]
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok array",
                            "items": {
                                "description": "200 ok object",
                                "properties": {
                                    "alliance_id": {
                                        "description": "alliance_id integer",
                                        "format": "int32",
                                        "title": "get_sovereignty_map_alliance_id",
                                        "type": "integer"
                                    },
                                    "corporation_id": {
                                        "description": "corporation_id integer",
                                        "format": "int32",
                                        "title": "get_sovereignty_map_corporation_id",
                                        "type": "integer"
                                    },
                                    "faction_id": {
                                        "description": "faction_id integer",
                                        "format": "int32",
                                        "title": "get_sovereignty_map_faction_id",
                                        "type": "integer"
                                    },
                                    "system_id": {
                                        "description": "system_id integer",
                                        "format": "int32",
                                        "title": "get_sovereignty_map_system_id",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "system_id"
                                ],
                                "title": "get_sovereignty_map_200_ok",
                                "type": "object"
                            },
                            "maxItems": 10000,
                            "title": "get_sovereignty_map_ok",
                            "type": "array"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "Internal server error message"
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/internal_server_error"
                        }
                    }
                },
                "summary": "List sovereignty of systems",
                "tags": [
                    "Sovereignty"
                ],
                "x-alternate-versions": [
                    "dev",
                    "legacy",
                    "v1"
                ],
                "x-cached-seconds": 3600
            }
        },
        "/v1/sovereignty/structures/": {
            "get": {
                "description": "Shows sovereignty data for structures.\n\n---\n\nThis route is cached for up to 120 seconds",
                "operationId": "get_sovereignty_structures",
                "parameters": [
                    {
                        "$ref": "#/parameters/datasource"
                    },
                    {
                        "$ref": "#/parameters/user_agent"
                    },
                    {
                        "$ref": "#/parameters/X-User-Agent"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of sovereignty structures",
                        "examples": {
                            "application/json": [
                                {
                                    "alliance_id": 498125261,
                                    "solar_system_id": 30000570,
                                    "structure_id": 1018253388776,
                                    "structure_type_id": 32226,
                                    "vulnerability_occupancy_level": 2,
                                    "vulnerable_end_time": "2016-10-29T05:30:00Z",
                                    "vulnerable_start_time": "2016-10-28T20:30:00Z"
                                }
                            ]
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok array",
                            "items": {
                                "description": "200 ok object",
                                "properties": {
                                    "alliance_id": {
                                        "description": "The alliance that owns the structure.\n",
                                        "format": "int32",
                                        "title": "get_sovereignty_structures_alliance_id",
                                        "type": "integer"
                                    },
                                    "solar_system_id": {
                                        "description": "Solar system in which the structure is located.\n",
                                        "format": "int32",
                                        "title": "get_sovereignty_structures_solar_system_id",
                                        "type": "integer"
                                    },
                                    "structure_id": {
                                        "description": "Unique item ID for this structure.",
                                        "format": "int64",
                                        "title": "get_sovereignty_structures_structure_id",
                                        "type": "integer"
                                    },
                                    "structure_type_id": {
                                        "description": "A reference to the type of structure this is.\n",
                                        "format": "int32",
                                        "title": "get_sovereignty_structures_structure_type_id",
                                        "type": "integer"
                                    },
                                    "vulnerability_occupancy_level": {
                                        "description": "The occupancy level for the next or current vulnerability window. This takes into account all development indexes and capital system bonuses. Also known as Activity Defense Multiplier from in the client. It increases the time that attackers must spend using their entosis links on the structure.\n",
                                        "format": "float",
                                        "title": "get_sovereignty_structures_vulnerability_occupancy_level",
                                        "type": "number"
                                    },
                                    "vulnerable_end_time": {
                                        "description": "The time at which the next or current vulnerability window ends. At the end of a vulnerability window the next window is recalculated and locked in along with the vulnerabilityOccupancyLevel. If the structure is not in 100% entosis control of the defender, it will go in to 'overtime' and stay vulnerable for as long as that situation persists. Only once the defenders have 100% entosis control and has the vulnerableEndTime passed does the vulnerability interval expire and a new one is calculated.\n",
                                        "format": "date-time",
                                        "title": "get_sovereignty_structures_vulnerable_end_time",
                                        "type": "string"
                                    },
                                    "vulnerable_start_time": {
                                        "description": "The next time at which the structure will become vulnerable. Or the start time of the current window if current time is between this and vulnerableEndTime.\n",
                                        "format": "date-time",
                                        "title": "get_sovereignty_structures_vulnerable_start_time",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "alliance_id",
                                    "solar_system_id",
                                    "structure_id",
                                    "structure_type_id"
                                ],
                                "title": "get_sovereignty_structures_200_ok",
                                "type": "object"
                            },
                            "maxItems": 10000,
                            "title": "get_sovereignty_structures_ok",
                            "type": "array"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "Internal server error message"
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/internal_server_error"
                        }
                    }
                },
                "summary": "List sovereignty structures",
                "tags": [
                    "Sovereignty"
                ],
                "x-alternate-versions": [
                    "dev",
                    "legacy",
                    "v1"
                ],
                "x-cached-seconds": 120
            }
        },
        "/v2/characters/{character_id}/clones/": {
            "get": {
                "description": "A list of the character's clones\n\n---\n\nThis route is cached for up to 120 seconds",
                "operationId": "get_characters_character_id_clones",
                "parameters": [
                    {
                        "$ref": "#/parameters/character_id"
                    },
                    {
                        "$ref": "#/parameters/datasource"
                    },
                    {
                        "$ref": "#/parameters/token"
                    },
                    {
                        "$ref": "#/parameters/user_agent"
                    },
                    {
                        "$ref": "#/parameters/X-User-Agent"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Clone information for the given character",
                        "examples": {
                            "application/json": {
                                "home_location": {
                                    "location_id": 1021348135816,
                                    "location_type": "structure"
                                },
                                "jump_clones": [
                                    {
                                        "implants": [
                                            22118
                                        ],
                                        "location_id": 60003463,
                                        "location_type": "station"
                                    },
                                    {
                                        "implants": [],
                                        "location_id": 1021348135816,
                                        "location_type": "structure"
                                    }
                                ]
                            }
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok object",
                            "properties": {
                                "home_location": {
                                    "description": "home_location object",
                                    "properties": {
                                        "location_id": {
                                            "description": "location_id integer",
                                            "format": "int64",
                                            "title": "get_characters_character_id_clones_location_id",
                                            "type": "integer"
                                        },
                                        "location_type": {
                                            "description": "location_type string",
                                            "enum": [
                                                "station",
                                                "structure"
                                            ],
                                            "title": "get_characters_character_id_clones_location_type",
                                            "type": "string"
                                        }
                                    },
                                    "title": "get_characters_character_id_clones_home_location",
                                    "type": "object"
                                },
                                "jump_clones": {
                                    "description": "jump_clones array",
                                    "items": {
                                        "description": "jump_clone object",
                                        "properties": {
                                            "implants": {
                                                "description": "implants array",
                                                "items": {
                                                    "description": "implant integer",
                                                    "format": "int32",
                                                    "title": "get_characters_character_id_clones_implant",
                                                    "type": "integer"
                                                },
                                                "maxItems": 11,
                                                "title": "get_characters_character_id_clones_implants",
                                                "type": "array"
                                            },
                                            "location_id": {
                                                "description": "location_id integer",
                                                "format": "int64",
                                                "title": "get_characters_character_id_clones_location_id",
                                                "type": "integer"
                                            },
                                            "location_type": {
                                                "description": "location_type string",
                                                "enum": [
                                                    "station",
                                                    "structure"
                                                ],
                                                "title": "get_characters_character_id_clones_location_type",
                                                "type": "string"
                                            }
                                        },
                                        "title": "get_characters_character_id_clones_jump_clone",
                                        "type": "object"
                                    },
                                    "maxItems": 10,
                                    "title": "get_characters_character_id_clones_jump_clones",
                                    "type": "array"
                                },
                                "last_jump_date": {
                                    "description": "last_jump_date string",
                                    "format": "date-time",
                                    "title": "get_characters_character_id_clones_last_jump_date",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "jump_clones"
                            ],
                            "title": "get_characters_character_id_clones_ok",
                            "type": "object"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "examples": {
                            "application/json": {
                                "error": "Forbidden message"
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/forbidden"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "Internal server error message"
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/internal_server_error"
                        }
                    }
                },
                "security": [
                    {
                        "evesso": [
                            "esi-clones.read_clones.v1"
                        ]
                    }
                ],
                "summary": "Get clones",
                "tags": [
                    "Clones"
                ],
                "x-alternate-versions": [
                    "dev",
                    "v2"
                ],
                "x-cached-seconds": 120
            }
        },
        "/v2/characters/{character_id}/portrait/": {
            "get": {
                "description": "Get portrait urls for a character\n\n---\n\nThis route is cached for up to 3600 seconds",
                "operationId": "get_characters_character_id_portrait",
                "parameters": [
                    {
                        "$ref": "#/parameters/character_id"
                    },
                    {
                        "$ref": "#/parameters/datasource"
                    },
                    {
                        "$ref": "#/parameters/user_agent"
                    },
                    {
                        "$ref": "#/parameters/X-User-Agent"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Public data for the given character",
                        "examples": {
                            "application/json": {
                                "px128x128": "https://imageserver.eveonline.com/Character/95465499_128.jpg",
                                "px256x256": "https://imageserver.eveonline.com/Character/95465499_256.jpg",
                                "px512x512": "https://imageserver.eveonline.com/Character/95465499_512.jpg",
                                "px64x64": "https://imageserver.eveonline.com/Character/95465499_64.jpg"
                            }
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok object",
                            "properties": {
                                "px128x128": {
                                    "description": "px128x128 string",
                                    "title": "get_characters_character_id_portrait_px128x128",
                                    "type": "string"
                                },
                                "px256x256": {
                                    "description": "px256x256 string",
                                    "title": "get_characters_character_id_portrait_px256x256",
                                    "type": "string"
                                },
                                "px512x512": {
                                    "description": "px512x512 string",
                                    "title": "get_characters_character_id_portrait_px512x512",
                                    "type": "string"
                                },
                                "px64x64": {
                                    "description": "px64x64 string",
                                    "title": "get_characters_character_id_portrait_px64x64",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_character_id_portrait_ok",
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "No image server for this datasource",
                        "examples": {
                            "application/json": {
                                "error": "No image server for this datasource"
                            }
                        },
                        "schema": {
                            "description": "No image server for this datasource",
                            "properties": {
                                "error": {
                                    "description": "error message",
                                    "title": "get_characters_character_id_portrait_error",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_character_id_portrait_not_found",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "Internal server error message"
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/internal_server_error"
                        }
                    }
                },
                "summary": "Get character portraits",
                "tags": [
                    "Character"
                ],
                "x-alternate-versions": [
                    "dev",
                    "v2"
                ],
                "x-cached-seconds": 3600
            }
        },
        "/v3/characters/{character_id}/cspa/": {
            "post": {
                "description": "Takes a source character ID in the url and a set of target character ID's in the body, returns a CSPA charge cost\n\n---\n",
                "operationId": "post_characters_character_id_cspa",
                "parameters": [
                    {
                        "description": "The target characters to calculate the charge for",
                        "in": "body",
                        "name": "characters",
                        "required": true,
                        "schema": {
                            "description": "characters object",
                            "properties": {
                                "characters": {
                                    "description": "characters array",
                                    "items": {
                                        "description": "character integer",
                                        "format": "int32",
                                        "title": "post_characters_character_id_cspa_character",
                                        "type": "integer"
                                    },
                                    "maxItems": 100,
                                    "minItems": 1,
                                    "title": "post_characters_character_id_cspa_characters",
                                    "type": "array",
                                    "uniqueItems": true
                                }
                            },
                            "required": [
                                "characters"
                            ],
                            "title": "post_characters_character_id_cspa_characters",
                            "type": "object"
                        }
                    },
                    {
                        "$ref": "#/parameters/character_id"
                    },
                    {
                        "$ref": "#/parameters/datasource"
                    },
                    {
                        "$ref": "#/parameters/token"
                    },
                    {
                        "$ref": "#/parameters/user_agent"
                    },
                    {
                        "$ref": "#/parameters/X-User-Agent"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Aggregate cost of sending a mail from the source character to the target characters, in ISK hundredths",
                        "examples": {
                            "application/json": {
                                "cost": 295000
                            }
                        },
                        "schema": {
                            "description": "201 created object",
                            "properties": {
                                "cost": {
                                    "description": "cost integer",
                                    "format": "int64",
                                    "title": "post_characters_character_id_cspa_cost",
                                    "type": "integer"
                                }
                            },
                            "title": "post_characters_character_id_cspa_created",
                            "type": "object"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "examples": {
                            "application/json": {
                                "error": "Forbidden message"
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/forbidden"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "Internal server error message"
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/internal_server_error"
                        }
                    }
                },
                "security": [
                    {
                        "evesso": [
                            "esi-characters.read_contacts.v1"
                        ]
                    }
                ],
                "summary": "Calculate a CSPA charge cost",
                "tags": [
                    "Character"
                ],
                "x-alternate-versions": [
                    "dev",
                    "legacy",
                    "v3"
                ]
            }
        },
        "/v4/characters/{character_id}/": {
            "get": {
                "description": "Public information about a character\n\n---\n\nThis route is cached for up to 3600 seconds",
                "operationId": "get_characters_character_id",
                "parameters": [
                    {
                        "$ref": "#/parameters/character_id"
                    },
                    {
                        "$ref": "#/parameters/datasource"
                    },
                    {
                        "$ref": "#/parameters/user_agent"
                    },
                    {
                        "$ref": "#/parameters/X-User-Agent"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Public data for the given character",
                        "examples": {
                            "application/json": {
                                "ancestry_id": 19,
                                "birthday": "2015-03-24T11:37:00Z",
                                "bloodline_id": 3,
                                "corporation_id": 109299958,
                                "description": "",
                                "gender": "male",
                                "name": "CCP Bartender",
                                "race_id": 2
                            }
                        },
                        "headers": {
                            "Cache-Control": {
                                "description": "The caching mechanism used",
                                "type": "string"
                            },
                            "Expires": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "RFC7231 formatted datetime string",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "200 ok object",
                            "properties": {
                                "alliance_id": {
                                    "description": "The character's alliance ID",
                                    "format": "int32",
                                    "title": "get_characters_character_id_alliance_id",
                                    "type": "integer"
                                },
                                "ancestry_id": {
                                    "description": "ancestry_id integer",
                                    "format": "int32",
                                    "title": "get_characters_character_id_ancestry_id",
                                    "type": "integer"
                                },
                                "birthday": {
                                    "description": "Creation date of the character",
                                    "format": "date-time",
                                    "title": "get_characters_character_id_birthday",
                                    "type": "string"
                                },
                                "bloodline_id": {
                                    "description": "bloodline_id integer",
                                    "format": "int32",
                                    "title": "get_characters_character_id_bloodline_id",
                                    "type": "integer"
                                },
                                "corporation_id": {
                                    "description": "The character's corporation ID",
                                    "format": "int32",
                                    "title": "get_characters_character_id_corporation_id",
                                    "type": "integer"
                                },
                                "description": {
                                    "description": "description string",
                                    "title": "get_characters_character_id_description",
                                    "type": "string"
                                },
                                "gender": {
                                    "description": "gender string",
                                    "enum": [
                                        "female",
                                        "male"
                                    ],
                                    "title": "get_characters_character_id_gender",
                                    "type": "string"
                                },
                                "name": {
                                    "description": "name string",
                                    "title": "get_characters_character_id_name",
                                    "type": "string"
                                },
                                "race_id": {
                                    "description": "race_id integer",
                                    "format": "int32",
                                    "title": "get_characters_character_id_race_id",
                                    "type": "integer"
                                },
                                "security_status": {
                                    "description": "security_status number",
                                    "format": "float",
                                    "maximum": 10,
                                    "minimum": -10,
                                    "title": "get_characters_character_id_security_status",
                                    "type": "number"
                                }
                            },
                            "required": [
                                "corporation_id",
                                "birthday",
                                "name",
                                "gender",
                                "race_id",
                                "bloodline_id"
                            ],
                            "title": "get_characters_character_id_ok",
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "Character not found",
                        "examples": {
                            "application/json": {
                                "error": "Not found message"
                            }
                        },
                        "schema": {
                            "description": "Not found",
                            "properties": {
                                "error": {
                                    "description": "Not found message",
                                    "title": "get_characters_character_id_404_not_found",
                                    "type": "string"
                                }
                            },
                            "title": "get_characters_character_id_not_found",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "examples": {
                            "application/json": {
                                "error": "Internal server error message"
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/internal_server_error"
                        }
                    }
                },
                "summary": "Get character's public information",
                "tags": [
                    "Character"
                ],
                "x-alternate-versions": [
                    "dev",
                    "v4"
                ],
                "x-cached-seconds": 3600
            }
        }
    },
    "produces": [
        "application/json"
    ],
    "schemes": [
        "https"
    ],
    "securityDefinitions": {
        "evesso": {
            "authorizationUrl": "https://login.eveonline.com/oauth/authorize",
            "flow": "implicit",
            "scopes": {
                "esi-bookmarks.read_character_bookmarks.v1": "EVE SSO scope esi-bookmarks.read_character_bookmarks.v1",
                "esi-characters.read_agents_research.v1": "EVE SSO scope esi-characters.read_agents_research.v1",
                "esi-characters.read_blueprints.v1": "EVE SSO scope esi-characters.read_blueprints.v1",
                "esi-characters.read_chat_channels.v1": "EVE SSO scope esi-characters.read_chat_channels.v1",
                "esi-characters.read_contacts.v1": "EVE SSO scope esi-characters.read_contacts.v1",
                "esi-characters.read_medals.v1": "EVE SSO scope esi-characters.read_medals.v1",
                "esi-characters.read_standings.v1": "EVE SSO scope esi-characters.read_standings.v1",
                "esi-characters.write_contacts.v1": "EVE SSO scope esi-characters.write_contacts.v1",
                "esi-clones.read_clones.v1": "EVE SSO scope esi-clones.read_clones.v1",
                "esi-fleets.read_fleet.v1": "EVE SSO scope esi-fleets.read_fleet.v1",
                "esi-fleets.write_fleet.v1": "EVE SSO scope esi-fleets.write_fleet.v1",
                "esi-industry.read_character_jobs.v1": "EVE SSO scope esi-industry.read_character_jobs.v1",
                "esi-killmails.read_killmails.v1": "EVE SSO scope esi-killmails.read_killmails.v1"
            },
            "type": "oauth2"
        }
    },
    "swagger": "2.0"
}
